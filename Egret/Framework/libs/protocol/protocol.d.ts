declare module protocol {
    class Protocol {
        static flags: Array<number>;
        protocolID: any;
        __param: ProtocolParam;
        constructor();
        init(...args: Array<any>): Protocol;
        merge(value: Protocol): void;
        reset(): void;
        encode(bytes: egret.ByteArray): void;
        decode(bytes: egret.ByteArray): void;
        private writeData(bytes, data, fieldType);
        private readData(bytes, fieldType);
        /**
         * 设置数据
         */
        setData(name: string, value: any): void;
        /**
         * 获取数据
         */
        getData(name: string): any;
        /**
         * 获取数据是否改变
         */
        getChanged(name: string): boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class zhao_cai_jin_bao_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        count: number;
        count_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 招财进宝请求领奖
 */
declare module protocol {
    class zhao_cai_jin_bao_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class zhao_cai_jin_bao_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        money: number;
        hasLis: Array<number>;
        nameLis: Array<info_name_count>;
        hasLis_changed: boolean;
        nameLis_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 通知全服
 */
declare module protocol {
    class zhao_cai_jin_bao_get_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        name: string;
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class zhao_cai_jin_bao_change_money_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        money: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 押镖请求帮助返回结果
 */
declare module protocol {
    class yh_help_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 远古神殿信息同步
 */
declare module protocol {
    class ygsd_info_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        selfHurtYi: number;
        selfHurtRem: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 远古神殿boss状态改变
 */
declare module protocol {
    class ygsd_boss_state_change extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        bossState: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 刷新请求返回
 */
declare module protocol {
    class yb_refresh_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 刷新请求
 */
declare module protocol {
    class yb_refresh_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 押镖信息同步
 */
declare module protocol {
    class yb_info_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        count: number;
        biaocheID: number;
        refresh_count: number;
        commit_token_count: number;
        commit_token_count_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class yb_husong_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 押镖护送请求
 */
declare module protocol {
    class yb_husong_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 押镖救援消息同步给帮会成员
 */
declare module protocol {
    class yb_help_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleID: string;
        roleName: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class yb_help_go_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 押镖救援-立即前往
 */
declare module protocol {
    class yb_help_go_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class yb_giveup_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 押镖放弃请求
 */
declare module protocol {
    class yb_giveup_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 押镖完成
 */
declare module protocol {
    class yb_complete_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        awardAttrValList: Array<number>;
        awardAttrTypeList: Array<number>;
        awardAttrValList_changed: boolean;
        awardAttrTypeList_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 更新镖车信息
 */
declare module protocol {
    class yb_biaoche_info_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        carID: number;
        spriteID: number;
        remainTime: number;
        maxHp: number;
        maxHp1: number;
        curHp: number;
        curHp1: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 申请领取奖励返回
 */
declare module protocol {
    class world_boss_reward_get_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 加载世界BOSS(激战)状态回复
 */
declare module protocol {
    class world_boss_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        worldBossInfo: Array<info_world_boss>;
        worldBossInfo_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 加载世界BOSS(激战)状态请求
 */
declare module protocol {
    class world_boss_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 世界boss复活通知
 */
declare module protocol {
    class world_boss_relive_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        bossId: number;
        type: number;
        type_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class world_boss_rare_scene_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        rolename: string;
        dmg: number;
        rank: number;
        leftHp: number;
        bossId: number;
        roleIds: Array<number>;
        rolename_changed: boolean;
        dmg_changed: boolean;
        rank_changed: boolean;
        leftHp_changed: boolean;
        bossId_changed: boolean;
        roleIds_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 稀有BOSS信息回复
 */
declare module protocol {
    class world_boss_rare_info_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        bossRefreshArray: Array<info_boss_refresh>;
        bossRefreshArray_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 稀有BOSS信息请求
 */
declare module protocol {
    class world_boss_rare_info_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class world_boss_rare_enter_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 稀有boss副本进入请求
 */
declare module protocol {
    class world_boss_rare_enter_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        unitId: number;
        mapId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 地图信息回复
 */
declare module protocol {
    class world_boss_map_info_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        teamID: number;
        numArr: Array<number>;
        mapArr: Array<number>;
        numArr_changed: boolean;
        mapArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 地图信息请求
 */
declare module protocol {
    class world_boss_map_info_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        teamID: number;
        mapArr: Array<number>;
        mapArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 挑战BOSS请求回复
 */
declare module protocol {
    class world_boss_info_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        team: number;
        bossInfoArray: Array<info_challenge_world_boss>;
        bossInfoArray_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 挑战BOSS请求
 */
declare module protocol {
    class world_boss_info_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        team: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 掉落信息回复
 */
declare module protocol {
    class world_boss_drop_info_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        dropInfoArray: Array<info_drop_log>;
        topInfoArray: Array<info_drop_log>;
        dropInfoArray_changed: boolean;
        topInfoArray_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 掉落信息请求
 */
declare module protocol {
    class world_boss_drop_info_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服请求本服数据回复
 */
declare module protocol {
    class world_boss_cross_res_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleID: string;
        worldBossInfo: Array<info_world_boss>;
        worldBossInfo_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服请求本服数据
 */
declare module protocol {
    class world_boss_cross_req_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 获取开服Boss信息
 */
declare module protocol {
    class world_boss_cross_info_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 给跨服推送boss信息
 */
declare module protocol {
    class world_boss_cross_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        state: number;
        unitID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 卧龙大殿地图同步
 */
declare module protocol {
    class wo_long_da_dian_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        time: number;
        bossCount: number;
        state_changed: boolean;
        time_changed: boolean;
        bossCount_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 卧龙山庄联盟信息
 */
declare module protocol {
    class wlsz_alliance_info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        guild1: string;
        guild2: string;
        guild1_changed: boolean;
        guild2_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 卧龙山庄联盟申请列表
 */
declare module protocol {
    class wlsz_alliance_apply_info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: string;
        name: string;
        serverId: string;
        leader: string;
        level: number;
        state: number;
        id_changed: boolean;
        name_changed: boolean;
        serverId_changed: boolean;
        leader_changed: boolean;
        level_changed: boolean;
        state_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //同步积分
 */
declare module protocol {
    class weekender_sync_integral extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        integral: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 活动列表发生变化
 */
declare module protocol {
    class weekender_sync_change extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infos: Array<weekender_info>;
        infos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //同步活动信息
 */
declare module protocol {
    class weekender_sync_activity_info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infos: Array<weekender_info>;
        inteInfos: Array<number>;
        integral: number;
        infos_changed: boolean;
        inteInfos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 活动信息
 */
declare module protocol {
    class weekender_info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        acitvityId: number;
        activityState: number;
        step: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //获取积分奖励返回
 */
declare module protocol {
    class weekender_get_integral_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        awardId: number;
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //获取积分奖励
 */
declare module protocol {
    class weekender_get_integral_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        awardId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //领取奖励返回
 */
declare module protocol {
    class weekender_get_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        awardId: number;
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //获取奖励
 */
declare module protocol {
    class weekender_get_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        awardId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //战魂升级
 */
declare module protocol {
    class war_soul_upgrade_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        curLevel: number;
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //战魂升级
 */
declare module protocol {
    class war_soul_upgrade_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 战印升级
 */
declare module protocol {
    class war_imprint_upgrade_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        curLv: number;
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 站印升级
 */
declare module protocol {
    class war_imprint_upgrade_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * //战印淬炼返回
 */
declare module protocol {
    class war_imprint_quenching_upgrage_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        curLevel: number;
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 战印淬炼升级
 */
declare module protocol {
    class war_imprint_quenching_upgrage_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * //战装升级
 */
declare module protocol {
    class war_equip_upgrade_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        curSotl: number;
        curLevel: number;
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //战装升级
 */
declare module protocol {
    class war_equip_upgrade_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        sotl: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class wages_info_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        canget: number;
        hasGet: number;
        allScore: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class wages_get_money_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class wages_get_money_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 体验vip 剩余时间
 */
declare module protocol {
    class vip_qoe_lasttime_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        lastTime: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 充值元宝
 */
declare module protocol {
    class vip_pay_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        num: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * vip人数
 */
declare module protocol {
    class vip_num_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * vip会员数量
 */
declare module protocol {
    class vip_num_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回领取结果
 */
declare module protocol {
    class vip_lv_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        lv: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取vip等级奖励
 */
declare module protocol {
    class vip_lv_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        lv: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class vip_gua_ji_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 挂机
 */
declare module protocol {
    class vip_gua_ji_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回每日奖励结果
 */
declare module protocol {
    class vip_buff_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 得到vip每日buff奖励
 */
declare module protocol {
    class vip_buff_award_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * vip信息同步
 */
declare module protocol {
    class vip_award_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        daybuff: number;
        lvAwardArr: Array<number>;
        DayAwardArr: Array<number>;
        lvAwardArr_changed: boolean;
        DayAwardArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class vip_achi_submit_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 任务提交
 */
declare module protocol {
    class vip_achi_submit_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        missionId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回结果
 */
declare module protocol {
    class vip_achi_show_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * vip成就显示
 */
declare module protocol {
    class vip_achi_show_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        isShow: boolean;
        id_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * vip成就信息同步
 */
declare module protocol {
    class vip_achi_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: Array<info_condition>;
        id: number;
        isShow: boolean;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class vip_achi_ex_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * vip额外奖励
 */
declare module protocol {
    class vip_achi_ex_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        lv: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * vip成就信息改变
 */
declare module protocol {
    class vip_achi_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: Array<info_condition>;
        id: number;
        isShow: boolean;
        isMine: boolean;
        infoArr_changed: boolean;
        id_changed: boolean;
        isShow_changed: boolean;
        isMine_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回领取结果
 */
declare module protocol {
    class vip_achi_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        lv: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取vip成就奖励
 */
declare module protocol {
    class vip_achi_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        lv: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 得到vip每日buff奖励
 */
declare module protocol {
    class vip_achi_award_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        lvAwardArr: Array<number>;
        exAwardArr: Array<number>;
        lvAwardArr_changed: boolean;
        exAwardArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 未知暗殿类型请求返回状态
 */
declare module protocol {
    class unkonw_dark_type_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 未知暗殿任务请求
 */
declare module protocol {
    class unknow_dark_type_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 未知暗殿boss死亡通知
 */
declare module protocol {
    class unknow_dark_boss_isdie_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        isdie: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 转盘信息同步req，随时可以调用，注意：不返回res，返回syn_turntable_info
 */
declare module protocol {
    class turntable_syn_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回重置摇奖次数请求状态，详细数据通过syn同步
 */
declare module protocol {
    class turntable_reset_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 重置摇奖次数
 */
declare module protocol {
    class turntable_reset_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 摇奖结果
 */
declare module protocol {
    class turntable_draw_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        posId: number;
        point1: number;
        point2: number;
        costPoint: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 摇奖一次
 */
declare module protocol {
    class turntable_draw_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步场景数据
 */
declare module protocol {
    class tumo_script_data_sync extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        campRadIntegral: number;
        campBlueIntegral: number;
        roleIntegral: number;
        fightResult: number;
        awardMaxId: number;
        fightEndFlag: boolean;
        campRadIntegral_changed: boolean;
        campBlueIntegral_changed: boolean;
        roleIntegral_changed: boolean;
        fightResult_changed: boolean;
        awardMaxId_changed: boolean;
        fightEndFlag_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 使用藏宝图道具返回
 */
declare module protocol {
    class treasure_useitem_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 申请使用宝图
 */
declare module protocol {
    class treasure_useitem_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        pos: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 宝图缉盗副本怪物击杀数量同步
 */
declare module protocol {
    class treasure_jidao_kill_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //每日全民寻宝信息
 */
declare module protocol {
    class treasure_hunt_sync_infos extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        boxGroupInfos: Array<treasure_hunt_sync_box_group_info>;
        conversionGroupInfos: Array<treasure_hunt_sync_conversion_group_info>;
        integral: number;
        boxGroupInfos_changed: boolean;
        conversionGroupInfos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //全民寻宝兑换奖励信息_每日
 */
declare module protocol {
    class treasure_hunt_sync_conversion_group_info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        groupId: number;
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //全民寻宝宝箱开启次数信息(金、银)_每日
 */
declare module protocol {
    class treasure_hunt_sync_box_group_info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        boxTypeId: number;
        boxOpenCount: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //全民寻宝_开宝箱请求返回
 */
declare module protocol {
    class treasure_hunt_open_box_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        boxTypeId: number;
        openCount: number;
        totalIntegral: number;
        rewardWeightId: number;
        state: number;
        isAtuoBuy: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //全名寻宝_打开宝箱请求_金银...宝箱
 */
declare module protocol {
    class treasure_hunt_open_box_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        boxTypeId: number;
        isAutoBuy: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //兑换奖励请求返回
 */
declare module protocol {
    class treasure_hunt_conversion_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        tbId: number;
        totalIntegral: number;
        conversionCount: number;
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //每日兑换奖励请求_限制兑换x次
 */
declare module protocol {
    class treasure_hunt_conversion_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        tbId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 申请挖宝返回
 */
declare module protocol {
    class treasure_dig_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 申请挖宝
 */
declare module protocol {
    class treasure_dig_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 宝图各种数据变更时用这个
 */
declare module protocol {
    class treasure_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        digcount: number;
        type: number;
        transpos: number;
        itemid: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 向客户端同步采到的是第几个奖励
 */
declare module protocol {
    class treasure_book_collect_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        inst: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入宝图书库采集副本的奖励展示
 */
declare module protocol {
    class treasure_book_award_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        list: Array<number>;
        list_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 穿戴称号ID
 */
declare module protocol {
    class title_wear_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        wearID: number;
        showID: number;
        wearID_changed: boolean;
        showID_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 移除称号
 */
declare module protocol {
    class title_remove_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        titleArr: Array<info_title>;
        titleArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //玩家登陆将玩家已获得的称号同步给前端
 */
declare module protocol {
    class title_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        titleArr: Array<info_title>;
        wearID: number;
        showID: number;
        titleArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 隐藏或显示回复
 */
declare module protocol {
    class title_hide_hpt_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 是否隐藏高玩称号请求
 */
declare module protocol {
    class title_hide_hpt_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        isHide: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //佩戴或卸下回复
 */
declare module protocol {
    class title_change_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //佩戴或卸下请求
 */
declare module protocol {
    class title_change_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        titleID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 添加称号
 */
declare module protocol {
    class title_add_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        titleArr: Array<info_title>;
        titleArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 称号活动同步
 */
declare module protocol {
    class title_activity_buy_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        ids: Array<number>;
        ids_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 称号活动购买返回
 */
declare module protocol {
    class title_activity_buy_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 称号活动购买
 */
declare module protocol {
    class title_activity_buy_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 特戒GO每日宝箱同步
 */
declare module protocol {
    class tejie_daily_award_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        Num: number;
        Id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 特戒GO每日奖励领取请求
 */
declare module protocol {
    class tejie_daily_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 特戒抽奖返回
 */
declare module protocol {
    class tejie_carnival_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        items: Array<number>;
        count: Array<number>;
        items_changed: boolean;
        count_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 特戒水果机请求
 */
declare module protocol {
    class tejie_carnival_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        count: number;
        type: number;
        autoBuy: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 特戒GO寻宝次数同步
 */
declare module protocol {
    class tejie_carnival_num_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        num: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 组队
 */
declare module protocol {
    class team_vip_team_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        agree: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class team_vip_team_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        agree: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class team_vip_iscontinue_syn extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class team_vip_iscontinue_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        iscontinue: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 玩家申请一键邀请
 */
declare module protocol {
    class team_unify_invite_nearby_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleIDList: Array<string>;
        roleIDList_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 一键申请附近队伍
 */
declare module protocol {
    class team_unify_apply_nearby_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        leaderIDList: Array<string>;
        leaderIDList_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 玩家收到入队请求
 */
declare module protocol {
    class team_received_join_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleId: string;
        roleName: string;
        job: number;
        gender: number;
        level: number;
        guildName: string;
        avatar: string;
        avatar_frame: string;
        guildName_changed: boolean;
        avatar_changed: boolean;
        avatar_frame_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 玩家收到邀请请求
 */
declare module protocol {
    class team_received_invite_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleId: string;
        roleName: string;
        job: number;
        gender: number;
        level: number;
        avatar: string;
        avatar_frame: string;
        guildName: string;
        avatar_changed: boolean;
        avatar_frame_changed: boolean;
        guildName_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回附近玩家
 */
declare module protocol {
    class team_nearly_players_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        count: number;
        playerList: Array<info_team_nearly_player>;
        playerList_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求附近玩家
 */
declare module protocol {
    class team_nearly_players_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        page: number;
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 队伍成员更新
 */
declare module protocol {
    class team_member_modify_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        teamMember: info_team_member;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class team_member_hp_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        rid: string;
        type: number;
        val: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 队伍成员移除
 */
declare module protocol {
    class team_member_del_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        roleId: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 队伍成员添加
 */
declare module protocol {
    class team_member_add_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        teamMember: info_team_member;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回请求队伍当前队伍坐标
 */
declare module protocol {
    class team_map_coord_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        infoArr: Array<info_team_map_coord>;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求队伍当前队伍坐标
 */
declare module protocol {
    class team_map_coord_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回当前队伍列表
 */
declare module protocol {
    class team_list_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        teamInfos: Array<info_team>;
        teamInfos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求当前地图队伍列表
 */
declare module protocol {
    class team_list_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回踢出角色
 */
declare module protocol {
    class team_kick_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求踢出角色
 */
declare module protocol {
    class team_kick_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleId: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回加入队伍
 */
declare module protocol {
    class team_join_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        roleName: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求加入队伍
 */
declare module protocol {
    class team_join_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleId: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回入队请求
 */
declare module protocol {
    class team_join_reply_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        roleName: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 应答入队请求
 */
declare module protocol {
    class team_join_reply_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleId: string;
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回邀请入队
 */
declare module protocol {
    class team_invite_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        roleName: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求邀请入队
 */
declare module protocol {
    class team_invite_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleId: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回应答组队请求
 */
declare module protocol {
    class team_invite_reply_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        roleName: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 应答组队请求
 */
declare module protocol {
    class team_invite_reply_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleId: string;
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回队伍更新
 */
declare module protocol {
    class team_info_modify_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        leaderRoleId: string;
        autoAcceptRequest: number;
        leaderRoleId_changed: boolean;
        autoAcceptRequest_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求队伍更新
 */
declare module protocol {
    class team_info_modify_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        autoAcceptRequest: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回队伍信息
 */
declare module protocol {
    class team_info_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        teamId: number;
        leaderRoleId: string;
        autoAcceptRequest: number;
        teamMembers: Array<info_team_member>;
        back: string;
        robotCount: number;
        robotArr: Array<number>;
        teamMembers_changed: boolean;
        back_changed: boolean;
        robotCount_changed: boolean;
        robotArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回离开队伍
 */
declare module protocol {
    class team_exit_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求离开队伍
 */
declare module protocol {
    class team_exit_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回队伍解散
 */
declare module protocol {
    class team_dissolve_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求队伍解散
 */
declare module protocol {
    class team_dissolve_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回创建队伍
 */
declare module protocol {
    class team_create_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求创建队伍
 */
declare module protocol {
    class team_create_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 被召唤队伍成员通知
 */
declare module protocol {
    class team_call_member_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleID: string;
        roleName: string;
        mapID: number;
        x: number;
        y: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 召唤队伍成员回复
 */
declare module protocol {
    class team_call_member_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        roleID: string;
        roleName: string;
        roleName_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 召唤队伍成员
 */
declare module protocol {
    class team_call_member_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 召唤队伍成员回复
 */
declare module protocol {
    class team_call_member_reply_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        roleID: string;
        roleName: string;
        roleName_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 队伍召唤答复 回复
 */
declare module protocol {
    class team_call_member_reply_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 被召唤答复请求
 */
declare module protocol {
    class team_call_member_reply_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        agree: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回任命队长
 */
declare module protocol {
    class team_appoint_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 改变状态
 */
declare module protocol {
    class accumula_recharge_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: Array<info_accumula_recharge>;
        money: number;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领奖请求
 */
declare module protocol {
    class accumula_recharge_get_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class accumula_recharge_get_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 登录同步
 */
declare module protocol {
    class accumula_recharge_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoarr: Array<info_accumula_recharge>;
        isOpen: boolean;
        time: number;
        money: number;
        infoarr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 改变状态
 */
declare module protocol {
    class accumula_week_recharge_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: Array<info_accumula_recharge>;
        money: number;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领奖请求
 */
declare module protocol {
    class accumula_week_recharge_get_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class accumula_week_recharge_get_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 登录同步
 */
declare module protocol {
    class accumula_week_recharge_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoarr: Array<info_accumula_recharge>;
        isOpen: boolean;
        time: number;
        money: number;
        infoarr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求任命队长
 */
declare module protocol {
    class team_appoint_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleId: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 装备捐献任务进度信息
 */
declare module protocol {
    class taskInfo extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        num: number;
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 获取跨服开服天数
 */
declare module protocol {
    class syncross_openDay_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        crossOpenDay: number;
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求跨服开启天数的请求
 */
declare module protocol {
    class syncross_openDay_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 远古神殿排行榜同步
 */
declare module protocol {
    class sync_ygsd_rank_info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        rankInfos: Array<info_ygsd_rank>;
        rankInfos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //同步勇士回归信息
 */
declare module protocol {
    class sync_warriors_return_Info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        open: boolean;
        alreadyGetLoginAwardArr: Array<number>;
        rechargeAward: Array<grand_total_recharge_award_info>;
        openDays: number;
        alreadyGetLoginAwardArr_changed: boolean;
        rechargeAward_changed: boolean;
        openDays_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 集字有礼请求
 */
declare module protocol {
    class act_collection_word_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        num: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 集字有礼回复
 */
declare module protocol {
    class act_collection_word_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
        id_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 集字有礼同步
 */
declare module protocol {
    class act_collection_word_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        count: number;
        count_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 申请领取激活码
 */
declare module protocol {
    class active_code_get_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取激活码返回
 */
declare module protocol {
    class active_code_get_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
        code: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 激活码同步协议
 */
declare module protocol {
    class active_code_get_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infos: Array<active_code_info>;
        infos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 激活码结构
 */
declare module protocol {
    class active_code_info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        code: string;
        active: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 激活码验证
 */
declare module protocol {
    class active_code_proving_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        code: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 验证返回
 */
declare module protocol {
    class active_code_proving_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 激活码使用同步
 */
declare module protocol {
    class active_code_use_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步个人的激活码已使用几个
 */
declare module protocol {
    class active_code_usenum_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        num: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 战印相关所有信息
 */
declare module protocol {
    class sync_war_imprint_all_info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        warImprintLv: number;
        warImprintQuenchingLv: number;
        warSoulLv: number;
        warEquipSotl: Array<number>;
        warEquipSotl_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //同步七日特权信息
 */
declare module protocol {
    class sync_seven_days_privilege_info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        gear: number;
        curExtDay: number;
        curExtCfgIDArray: Array<number>;
        startTimestamp: number;
        curExtCfgIDArray_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步时间信息
 */
declare module protocol {
    class active_monster_attack_show_time_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        time: number;
        id: number;
        remainingtime: number;
        count: number;
        remainingtime_changed: boolean;
        count_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步玩家状态
 */
declare module protocol {
    class sync_role_state extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state_info_arr: Array<role_state_info>;
        state_info_arr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 活跃度奖励
 */
declare module protocol {
    class active_value_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        ID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 活跃度奖励
 */
declare module protocol {
    class active_value_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 每日活跃更新
 */
declare module protocol {
    class active_value_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: Array<info_condition>;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步日常宝箱状态
 */
declare module protocol {
    class active_value_day_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoarr: Array<info_award_state>;
        infoarr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 客户端请求领取活跃度
 */
declare module protocol {
    class active_value_get_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        ID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 活跃度的领取后返回客户端
 */
declare module protocol {
    class active_value_get_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        ID: number;
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 每日活跃加载
 */
declare module protocol {
    class active_value_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: Array<info_condition>;
        val: number;
        WeekVal: number;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 每日充值上线同步
 */
declare module protocol {
    class sync_recharge_day_money_login extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        money: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步消息状态码
 */
declare module protocol {
    class sync_msg_state extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步宝箱状态
 */
declare module protocol {
    class active_value_week_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoarr: Array<info_active_award_week>;
        infoarr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 活跃周奖
 */
declare module protocol {
    class active_value_week_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 周奖回复
 */
declare module protocol {
    class active_value_week_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
        itemarr: Array<number>;
        itemarr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步宝箱状态
 */
declare module protocol {
    class active_week_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoarr: Array<info_active_award_week>;
        infoarr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 周宝箱元宝解锁计时
 */
declare module protocol {
    class active_week_quickly_unlock_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 周宝箱快速解锁计时回复
 */
declare module protocol {
    class active_week_quickly_unlock_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 周宝箱请求计时
 */
declare module protocol {
    class active_week_time_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 计时在请求回复
 */
declare module protocol {
    class active_week_time_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步周活跃值
 */
declare module protocol {
    class active_week_value_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        WeekVal: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //同步每日刷新
 */
declare module protocol {
    class sync_day_refresh extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        gear: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 神秘转盘数据同步
 */
declare module protocol {
    class syn_turntable_info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        resetNum: number;
        point1: number;
        point2: number;
        remNum: number;
        costPoint: number;
        gotItemId: Array<info_key_value_pair>;
        turnItemInfo: Array<info_turntable_item>;
        gotItemId_changed: boolean;
        turnItemInfo_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步功能开启达标奖励
 */
declare module protocol {
    class syn_func_open_award_info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        gotFuncID: Array<number>;
        canGetFuncID: Array<number>;
        gotFuncID_changed: boolean;
        canGetFuncID_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class swpd_data_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        all: number;
        val: number;
        name: string;
        all_changed: boolean;
        val_changed: boolean;
        name_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 扫荡服务器回复
 */
declare module protocol {
    class sweep_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 副本扫荡请求
 */
declare module protocol {
    class sweep_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        id: number;
        rate: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 活动前十排行榜信息
 */
declare module protocol {
    class survival_rank_info_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        rankInfo: Array<info_battlefield>;
        rankInfo_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 得到玩家id，不在线为失败，在线返回id
 */
declare module protocol {
    class survival_check_rank_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        roleId: string;
        roleId_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 排行榜人物请求
 */
declare module protocol {
    class survival_check_rank_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        rankId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class survival_battlefield_rankInfo_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 排行榜请求
 */
declare module protocol {
    class survival_battlefield_rankInfo_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 活动信息
 */
declare module protocol {
    class survival_battlefield_info_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        selfInfo: info_battlefield;
        leftTime: number;
        leftActTime: number;
        leftRelivecount: number;
        rotationCount: number;
        selfInfo_changed: boolean;
        leftTime_changed: boolean;
        leftActTime_changed: boolean;
        leftRelivecount_changed: boolean;
        rotationCount_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 申请开始答题
 */
declare module protocol {
    class answer_begin_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class answer_begin_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步客户端副本剩余时间
 */
declare module protocol {
    class answer_clone_time_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        time: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 申请花钱选答案
 */
declare module protocol {
    class answer_cost_correct_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class answer_cost_correct_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步答题结算奖励
 */
declare module protocol {
    class answer_final_award_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        awardItemArr: Array<info_award_item>;
        okCount: number;
        roleName: string;
        awardItemArr_changed: boolean;
        okCount_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 答题上线同步
 */
declare module protocol {
    class answer_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        answerAttr: Array<info_answer>;
        curType: number;
        answerOn: number;
        answerAttr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 申请榜单数据
 */
declare module protocol {
    class answer_rank_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        page: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回排行榜
 */
declare module protocol {
    class answer_rank_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        type: number;
        rankInfo: info_answer_rank;
        rankAttr: Array<info_answer_rank>;
        page: number;
        rankAttr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 步步为营，副本准备阶段得剩余时间
 */
declare module protocol {
    class answer_ready_time_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        time: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 选择答案
 */
declare module protocol {
    class answer_select_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        index: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 答题选择回复
 */
declare module protocol {
    class answer_select_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 更新下一题
 */
declare module protocol {
    class answer_update_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: info_answer;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 使用答题场景中技能,1麻痹，2踢飞
 */
declare module protocol {
    class answer_use_skill_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        useID: number;
        roleID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 使用答题技能结果
 */
declare module protocol {
    class answer_use_skill_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 申请激活神器
 */
declare module protocol {
    class artifact_active_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 激活返回
 */
declare module protocol {
    class artifact_active_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        days: number;
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class artifact_get_time_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class artifact_get_time_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class artifact_get_time_award_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        idArr: Array<info_artifact>;
        idArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 神器上线初始化协议
 */
declare module protocol {
    class artifact_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        idlist: Array<info_artifact_active>;
        idlist_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 申请领取返利奖励
 */
declare module protocol {
    class artifact_rebate_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 申请领取返利奖励返回
 */
declare module protocol {
    class artifact_rebate_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步竞技数据
 */
declare module protocol {
    class athletics_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: Array<info_athletics>;
        roleID: string;
        info_changed: boolean;
        roleID_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 竞技奖励领取请求
 */
declare module protocol {
    class athletics_get_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 竞技奖励领取返回
 */
declare module protocol {
    class athletics_get_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 加载竞技数据
 */
declare module protocol {
    class athletics_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        idArr: Array<number>;
        infoArr: Array<info_athletics>;
        idArr_changed: boolean;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 竞价请求
 */
declare module protocol {
    class auction_bidding_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: string;
        itemID: number;
        bidprice: number;
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 竞价返回结果
 */
declare module protocol {
    class auction_bidding_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        auctionID: string;
        itemId: number;
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class auction_buy_bogus_log_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        Arr: Array<info_auction_mission>;
        Arr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 购买拍卖行假物品
 */
declare module protocol {
    class auction_buy_bogus_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        itemID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class auction_buy_bogus_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 上架拍卖物品
 */
declare module protocol {
    class auction_creat_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        itemId: string;
        maxprice: number;
        currencyType: number;
        count: number;
        noName: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 创建拍卖物品返回
 */
declare module protocol {
    class auction_creat_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求拍卖行列表
 */
declare module protocol {
    class auction_list_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        itemId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class auction_list_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求拍卖行返回结果
 */
declare module protocol {
    class auction_list_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: Array<info_auction>;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求相同类型物品数量
 */
declare module protocol {
    class auction_listCount_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class auction_listCount_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求相同类型物品数量的返回
 */
declare module protocol {
    class auction_listCount_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        countArr: Array<info_auction_type_count>;
        countArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 个人货架列表请求
 */
declare module protocol {
    class auction_myList_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回状态
 */
declare module protocol {
    class auction_myList_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 个人上架物品信息返回
 */
declare module protocol {
    class auction_myList_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoMyArr: Array<info_auction>;
        leftAutionNum: number;
        infoMyArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 商品最近成交价格返回
 */
declare module protocol {
    class auction_nearPrice_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        itemID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 最近成交价返回
 */
declare module protocol {
    class auction_nearPrice_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 最近成交价
 */
declare module protocol {
    class auction_nearPrice_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        nearPrice: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 状态
 */
declare module protocol {
    class auction_off_purchase_the_shelf_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 下架个人商品
 */
declare module protocol {
    class auction_off_the_shelf_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        itemID: number;
        auctionID: string;
        itemBaseID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 状态
 */
declare module protocol {
    class auction_off_the_shelf_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 交易物品
 */
declare module protocol {
    class auction_purchase_buy_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: string;
        itemID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class auction_purchase_buy_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        auctionID: string;
        itemId: number;
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 上架求购信息
 */
declare module protocol {
    class auction_purchase_creat_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        itemId: number;
        totalPrice: number;
        currencyType: number;
        count: number;
        noName: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 创建拍卖物品返回
 */
declare module protocol {
    class auction_purchase_creat_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求拍卖行列表
 */
declare module protocol {
    class auction_purchase_list_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        itemId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class auction_purchase_list_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求拍卖行返回结果
 */
declare module protocol {
    class auction_purchase_list_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: Array<info_auction_purchase>;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求相同类型物品数量
 */
declare module protocol {
    class auction_purchase_listCount_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class auction_purchase_listCount_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求相同类型物品数量的返回
 */
declare module protocol {
    class auction_purchase_listCount_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        countArr: Array<info_auction_type_count>;
        countArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 个人货架列表请求
 */
declare module protocol {
    class auction_purchase_myList_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回状态
 */
declare module protocol {
    class auction_purchase_myList_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 个人上架物品信息返回
 */
declare module protocol {
    class auction_purchase_myList_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoMyArr: Array<info_auction_purchase>;
        leftAutionNum: number;
        infoMyArr_changed: boolean;
        leftAutionNum_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 下架个人商品
 */
declare module protocol {
    class auction_purchase_off_the_shelf_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        itemID: number;
        auctionID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 奖励大厅数据同步
 */
declare module protocol {
    class award_hall_data_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: info_award_hall;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class black_mall_buy_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class black_mall_buy_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class black_mall_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        arr: Array<info_black_mall>;
        arr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 至尊宝藏登陆数据同步
 */
declare module protocol {
    class supremacy_treasure_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoList: Array<info_supremacy_treasure>;
        infoList_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 至尊宝藏单独同步
 */
declare module protocol {
    class supremacy_treasure_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: Array<info_supremacy_treasure>;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 至尊宝藏boss副本ui数据
 */
declare module protocol {
    class supremacy_treasure_boss_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        cfgId: number;
        bossStat: number;
        count: number;
        cfgId_changed: boolean;
        bossStat_changed: boolean;
        count_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 至尊宝藏挑战boss返回
 */
declare module protocol {
    class supremacy_treasure_boss_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 至尊宝藏挑战boss
 */
declare module protocol {
    class supremacy_treasure_boss_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        taskId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 至尊宝藏领奖返回
 */
declare module protocol {
    class supremacy_treasure_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 至尊宝藏领奖
 */
declare module protocol {
    class supremacy_treasure_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        section: number;
        taskId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //元宝特效
 */
declare module protocol {
    class border_gold_award_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        gold: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class super_value_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        idLis: Array<number>;
        idLis_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class super_value_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        idLis: Array<number>;
        idLis_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 购买回复
 */
declare module protocol {
    class super_value_buy_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 购买
 */
declare module protocol {
    class boss_item_buy_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        num: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 购买
 */
declare module protocol {
    class boss_item_buy_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class boss_item_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: info_key_value_pair;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class boss_item_data_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infos: Array<info_key_value_pair>;
        infos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class boss_kuang_huan_kill_count_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class boss_kuang_huan_kill_count_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        count: number;
        state: number;
        mineCount: number;
        getID: Array<number>;
        count_changed: boolean;
        mineCount_changed: boolean;
        getID_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取boss狂欢全服击杀奖励
 */
declare module protocol {
    class boss_kuang_huan_sever_get_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class boss_kuang_huan_sever_get_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        getID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * boss可挑战服务器推送(用于客户端显示红点)
 */
declare module protocol {
    class boss_refresh_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        isrefresh: boolean;
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 申请领取奖励
 */
declare module protocol {
    class boss_reward_get_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 购买请求
 */
declare module protocol {
    class super_value_buy_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class super_drop_refresh_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class boss_reward_info_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        killInfoArray: Array<info_condition>;
        getAwardID: Array<number>;
        killInfoArray_changed: boolean;
        getAwardID_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 超爽大爆等级刷新
 */
declare module protocol {
    class super_drop_refresh_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class super_drop_open_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        isOpen: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 开启超爽大爆
 */
declare module protocol {
    class super_drop_open_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        isOpen: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class super_drop_open_data_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        isOpen: boolean;
        count: number;
        energy: number;
        luckyLv: number;
        infos: Array<info_record_equip>;
        isOpen_changed: boolean;
        count_changed: boolean;
        energy_changed: boolean;
        luckyLv_changed: boolean;
        infos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求数据
 */
declare module protocol {
    class super_drop_open_data_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 特效
 */
declare module protocol {
    class super_drop_effect_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 弹出套装界面
 */
declare module protocol {
    class suit_show_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: info_suit;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 套装移除同步
 */
declare module protocol {
    class suit_remove_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: Array<info_suit>;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class breach_gift_buy_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class breach_gift_buy_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        buyId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class breach_gift_data_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infos: Array<info_key_value_pair>;
        buyId: Array<number>;
        infos_changed: boolean;
        buyId_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步buff列表
 */
declare module protocol {
    class buff_list_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: Array<info_buff>;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求删除buff
 */
declare module protocol {
    class buff_remove_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        buffID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 移除buff的返回消息
 */
declare module protocol {
    class buff_remove_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 删除buff
 */
declare module protocol {
    class buff_remove_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        buffID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 更新buff信息
 */
declare module protocol {
    class buff_update_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: info_buff;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 加载已激活套装ID
 */
declare module protocol {
    class suit_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: Array<info_suit>;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步手动激活的套装_服务器记录已激活套装id(每个skind仅一套)__虽激活不一定生效(需要有装备)
 */
declare module protocol {
    class suit_load_manual_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        manualInfoArr: Array<info_suit>;
        manualInfoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 更新套装状态
 */
declare module protocol {
    class suit_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: Array<info_suit>;
        infoArrRemove: Array<info_suit>;
        infoArr_changed: boolean;
        infoArrRemove_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class suit_active_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 套装激活请求
 */
declare module protocol {
    class suit_active_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        suitID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //购买七日特权
 */
declare module protocol {
    class buy_seven_days_privilege_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * //购买返回
 */
declare module protocol {
    class buy_seven_days_privilege_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        buyGear: number;
        startTimestamp: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class strengthen_copy_sweep_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求扫荡
 */
declare module protocol {
    class strengthen_copy_sweep_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        configID: number;
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步怪物信息
 */
declare module protocol {
    class strengthen_copy_boss_info_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        small: number;
        boss: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 上线同步
 */
declare module protocol {
    class stengthen_copy_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        count: number;
        canSweep: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 噬魂分解回复
 */
declare module protocol {
    class soul_eater_decompose_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        state_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 噬魂分解请求
 */
declare module protocol {
    class soul_eater_decompose_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        pos: Array<number>;
        num: Array<number>;
        pos_changed: boolean;
        num_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 炼神升级
 */
declare module protocol {
    class smlet_god_upgrade_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 炼神升级
 */
declare module protocol {
    class smlet_god_upgrade_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 改变同步
 */
declare module protocol {
    class change_sync extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: Array<info_condition>;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 等级改变同步
 */
declare module protocol {
    class charge_crash_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        baseID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 登陆同步
 */
declare module protocol {
    class charge_crash_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        BaseID: Array<number>;
        BaseID_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 升级请求
 */
declare module protocol {
    class charge_crash_up_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 升级回复
 */
declare module protocol {
    class charge_crash_up_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 神罚数据同步
 */
declare module protocol {
    class smlet_god_data_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回升级状态
 */
declare module protocol {
    class smelter_upgrade_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 聊天等级限制
 */
declare module protocol {
    class chat_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        limit: Array<info_chat_limit>;
        limit_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 禁言
 */
declare module protocol {
    class chat_message_ban_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        way: number;
        time: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求聊天
 */
declare module protocol {
    class chat_message_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        channel: number;
        sourceID: string;
        targetName: string;
        message: string;
        chatType: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class chat_message_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        channel: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 应答聊天
 */
declare module protocol {
    class chat_message_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        channel: number;
        sourceID: string;
        sourceName: string;
        time: number;
        sex: number;
        job: number;
        sourceVip: number;
        isGm: boolean;
        targetID: string;
        targetName: string;
        message: string;
        avatar: string;
        avatar_frame: string;
        serverNumber: number;
        platformColourGem: number;
        platformLevel: number;
        platformSuper: number;
        platformYear: number;
        guildName: string;
        lv: number;
        sourceServerId: number;
        chatType: number;
        avatar_changed: boolean;
        avatar_frame_changed: boolean;
        serverNumber_changed: boolean;
        platformColourGem_changed: boolean;
        platformLevel_changed: boolean;
        platformSuper_changed: boolean;
        platformYear_changed: boolean;
        guildName_changed: boolean;
        lv_changed: boolean;
        sourceServerId_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 私聊列表数据请求
 */
declare module protocol {
    class chat_secretTab_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 私聊列表数据回复
 */
declare module protocol {
    class chat_secretTab_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        secretTabInfo: Array<info_chat_secretTab>;
        secretTabInfo_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 升级
 */
declare module protocol {
    class smelter_upgrade_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 加载数据
 */
declare module protocol {
    class smelter_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: Array<info_smelter>;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步点击开始
 */
declare module protocol {
    class click_start_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        time: number;
        type: number;
        type_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步点击停止
 */
declare module protocol {
    class click_stop_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        state_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 斩首成功
 */
declare module protocol {
    class click_success_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        spriteID: number;
        itemID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 更新数据
 */
declare module protocol {
    class cloak_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        CloakId: number;
        Val: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 加载数据
 */
declare module protocol {
    class cloak_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        CloakId: number;
        Val: number;
        CurrentAppId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 升级
 */
declare module protocol {
    class cloak_upgrade_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        auto: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回升级状态
 */
declare module protocol {
    class cloak_upgrade_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步材料副本状态
 */
declare module protocol {
    class clone_private_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: info_private_clone;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取材料副本完成奖励请求
 */
declare module protocol {
    class clone_private_complete_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        isDouble: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取材料副本完成奖励回复
 */
declare module protocol {
    class clone_private_complete_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入材料副本请求
 */
declare module protocol {
    class clone_private_enter_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入材料副本回复
 */
declare module protocol {
    class clone_private_enter_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 加载材料副本状态
 */
declare module protocol {
    class clone_private_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: Array<info_private_clone>;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class clone_private_score_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        time: number;
        star: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取材料副本星级奖励请求
 */
declare module protocol {
    class clone_private_star_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取材料副本星级奖励回复
 */
declare module protocol {
    class clone_private_star_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 免费扫荡领取材料副本请求
 */
declare module protocol {
    class clone_private_sweep_free_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 免费扫荡领取材料副本回复
 */
declare module protocol {
    class clone_private_sweep_free_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 扫荡领取材料副本请求
 */
declare module protocol {
    class clone_private_sweep_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 扫荡领取材料副本回复
 */
declare module protocol {
    class clone_private_sweep_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 服务器主动关闭的原因
 */
declare module protocol {
    class close_reason extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        reason: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 客户端关闭请求， 收到这个协议不用再走断线重连了
 */
declare module protocol {
    class close_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * //激活码兑换请求
 */
declare module protocol {
    class code_exchange_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        code: string;
        type: number;
        Id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //激活码兑换返回
 */
declare module protocol {
    class code_exchange_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        reason: string;
        reason_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求购买次数
 */
declare module protocol {
    class coloseum_buy_count_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 次数改变
 */
declare module protocol {
    class coloseum_buy_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 立即通关
 */
declare module protocol {
    class coloseum_clearance_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 斗兽场挑战失败
 */
declare module protocol {
    class coloseum_fail_syn extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 宝石洞窟首通奖励请求
 */
declare module protocol {
    class coloseum_first_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        configID: number;
        sweepFlag: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 宝石洞窟首通奖励回复
 */
declare module protocol {
    class coloseum_first_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回结果
 */
declare module protocol {
    class coloseum_kill_boss_index_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        bossID: number;
        bossID_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求挑战boss
 */
declare module protocol {
    class coloseum_kill_boss_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        configID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 上线同步信息
 */
declare module protocol {
    class coloseum_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        dailyCount: number;
        buyCount: number;
        star: number;
        noPrizeArray: Array<number>;
        noPrizeArray_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 活动结果
 */
declare module protocol {
    class coloseum_result_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        dailyCount: number;
        star: number;
        first: boolean;
        first_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 商业活动列表加载，根据serverType加载对应的表(不在一个表里)
 */
declare module protocol {
    class commercial_activity_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: Array<info_commercial_activity>;
        serverType: number;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 商业化-窗口推送
 */
declare module protocol {
    class commercial_push_window extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        pushWinID: number;
        pushState: number;
        countDown: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class condumption_return_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        day: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class condumption_return_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class condumption_return_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        Arr: Array<info_condumption_return>;
        Arr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 消费连击旧排行信息
 */
declare module protocol {
    class consume_old_rank_info_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        page: number;
        day: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 消费连击旧榜返回
 */
declare module protocol {
    class consume_old_rank_info_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        myRank: number;
        curDay: number;
        myConsume: number;
        curtPage: number;
        maxPage: number;
        infos: Array<info_consume_rank>;
        infos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求开服活动-消费连击排行数据
 */
declare module protocol {
    class consume_rank_info_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        page: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求开服活动-消费连击数据返回
 */
declare module protocol {
    class consume_rank_info_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        myRank: number;
        myConsume: number;
        curtPage: number;
        maxPage: number;
        infos: Array<info_consume_rank>;
        infos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class contnuous_recharge_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class contnuous_recharge_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class contnuous_recharge_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: Array<info_contnuous_recharge>;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服饮酒一条奖励信息
 */
declare module protocol {
    class corss_yinjiu_award_info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        name: string;
        itemId: number;
        itemNum: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //活动_服务器区服号区域规则_不同的逻辑服不同的落脚点安全区
 */
declare module protocol {
    class cross_activity_serverNum_rogion_rule_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        keyValue: Array<info_key_value_pair>;
        keyValue_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服竞技活动_结束时间同步,注意每个逻辑服单独的时间，不是跨服服务器时间
 */
declare module protocol {
    class cross_athletics_end_time_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        activityTeam: Array<number>;
        endingTime: Array<number>;
        activityTeam_changed: boolean;
        endingTime_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服领取奖励请求
 */
declare module protocol {
    class cross_athletics_get_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 更新数据
 */
declare module protocol {
    class smelter_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: info_smelter;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 刻印请求回复
 */
declare module protocol {
    class smelter_brand_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        val: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 刻印请求
 */
declare module protocol {
    class smelter_brand_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 激活技能回复
 */
declare module protocol {
    class smelter_active_skill_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服饮酒兑换宝箱请求
 */
declare module protocol {
    class cross_changeBox_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服饮酒兑换宝箱回复
 */
declare module protocol {
    class cross_changeBox_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        itemBoxArr: Array<info_cross_yinjiuItem>;
        itemBoxArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 激活技能
 */
declare module protocol {
    class smelter_active_skill_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        skillId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 圣龙战场_个人奖励信息同步_采集和击杀
 */
declare module protocol {
    class slzc_stage_task_info_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        collectNoGetArr: Array<number>;
        collectFinishNum: number;
        collectNumDic: Array<info_key_value_pair>;
        skillCanRewardId: number;
        totalKillNum: number;
        collectNoGetArr_changed: boolean;
        collectNumDic_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //同步活动结束状态
 */
declare module protocol {
    class cross_login_award_state_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        activtiyState: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求地图内坐标
 */
declare module protocol {
    class cross_map_coord_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roomID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服3v3地图同步逻辑
 */
declare module protocol {
    class cross_map_coord_sync extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: Array<info_cross_map_coord_role>;
        state: number;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 客户端手动退出跨服
 */
declare module protocol {
    class cross_map_manual_quit_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服退出
 */
declare module protocol {
    class cross_map_quit_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * // 跨服角色退出请求
 */
declare module protocol {
    class cross_role_logout_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * // 跨服角色退出结果
 */
declare module protocol {
    class cross_role_logout_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 参加跨服活动请求
 */
declare module protocol {
    class cross_server_activity_join_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        csType: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 参加跨服活动回复
 */
declare module protocol {
    class cross_server_activity_join_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        csType: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入跨服返回结果
 */
declare module protocol {
    class cross_server_result_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服护盾养成数据同步
 */
declare module protocol {
    class cross_shield_data_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        activedSkillIdArr: Array<number>;
        activedSkillIdArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 激活跨服养成护盾被动技能请求
 */
declare module protocol {
    class cross_shield_passivity_skill_active_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        skillId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 激活跨服养成护盾被动技能回复
 */
declare module protocol {
    class cross_shield_passivity_skill_active_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服养成护盾升级请求
 */
declare module protocol {
    class cross_shield_upgrade_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服护盾养成升级回复
 */
declare module protocol {
    class cross_shield_upgrade_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服状态改变
 */
declare module protocol {
    class cross_state_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        csType: number;
        selfGameStartDay: number;
        csGameStartDay: number;
        selfGameStartDay_changed: boolean;
        csGameStartDay_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服_本周_登陆奖励_领取请求(当前只能领当天的数据)
 */
declare module protocol {
    class cross_this_week_login_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        dayOfWeek: number;
        isExtra: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服_本周_登陆奖励_领取返回(登陆跨服和领取返回发送)
 */
declare module protocol {
    class cross_this_week_login_award_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        week: number;
        dayOfWeek: number;
        rewardTeamId: number;
        rewardTeamEndTime: number;
        thisWeekGetAward: Array<number>;
        thisWeekGetAwardEx: Array<number>;
        thisWeekGetAward_changed: boolean;
        thisWeekGetAwardEx_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服寻宝奖励组同步
 */
declare module protocol {
    class cross_xunbao_award_group_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        groupID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服饮酒增加一条奖励信息，界面打开时收到信息，增加到最后并删除第一条
 */
declare module protocol {
    class cross_yinjiu_award_info_add_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: corss_yinjiu_award_info;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服饮酒奖励信息请求
 */
declare module protocol {
    class cross_yinjiu_award_info_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服饮酒奖励信息返回
 */
declare module protocol {
    class cross_yinjiu_award_info_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        infoArrs: Array<corss_yinjiu_award_info>;
        infoArrs_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服点击饮酒请求奖励
 */
declare module protocol {
    class cross_yinjiu_get_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        clickType: number;
        clickNum: number;
        unitSpriteId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服点击饮酒请求奖励回复
 */
declare module protocol {
    class cross_yinjiu_get_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        normalItemArr: Array<info_cross_yinjiuItem>;
        clickType: number;
        clickNum: number;
        unitSpriteId: number;
        normalItemArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服饮酒当前波数剩余数量同步
 */
declare module protocol {
    class cross_yinjiu_left_num_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        curId: number;
        leftNum: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服饮酒酒桶信息改变同步
 */
declare module protocol {
    class cross_yinjiu_one_barrel_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        spriteId: number;
        canUseNum: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服饮酒角色排行榜同步
 */
declare module protocol {
    class cross_yinjiu_role_rank_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        rankArr: Array<info_cross_yinjiu_role_rank>;
        myselfData: info_cross_yinjiu_role_rank;
        rankArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * moba跨服房间数量同步给匹配服
 */
declare module protocol {
    class cross2match_room_count_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        serverId: number;
        roomCount: number;
        roleCount: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服是否开启
 */
declare module protocol {
    class crossserver_openstate_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        csType: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 圣龙战场_服务器排行榜同步
 */
declare module protocol {
    class slzc_server_ranks_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        rankArr: Array<slzc_rank_data>;
        rankArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 圣龙战场个人积分同步
 */
declare module protocol {
    class slzc_role_rank_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        rankData: slzc_rank_data;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 圣龙战场_所有的个人积分榜同步
 */
declare module protocol {
    class slzc_role_individual_ranks_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        rankArr: Array<slzc_rank_data>;
        rankArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 圣龙战场_角色收集信息同步
 */
declare module protocol {
    class slzc_role_collect_info_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        keyVlues: Array<info_key_value_pair>;
        keyVlues_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 圣龙战场_排行信息
 */
declare module protocol {
    class slzc_rank_data extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        name: string;
        bp: number;
        rank: number;
        roleId: string;
        serverNo: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 圣龙战场_个人积分增加时_同步
 */
declare module protocol {
    class slzc_individual_integral_add_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        addBp: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 圣龙战场_个人阶段击杀奖励信息_同步
 */
declare module protocol {
    class slzc_get_stage_kill_reward_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        canRewardId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 圣龙战场_获取个人阶段采集奖励返回
 */
declare module protocol {
    class slzc_get_stage_collect_reward_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        collectNoGetArr: Array<number>;
        collectNoGetArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 圣龙战场_获取个人阶段采集奖励
 */
declare module protocol {
    class slzc_get_stage_collect_reward_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        getRewardId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //圣龙战场_活动结算同步
 */
declare module protocol {
    class slzc_activity_settlement_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        rank: number;
        serverRank: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class skill_uplv_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class skill_uplv_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        skillCategory: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 替换技能
 */
declare module protocol {
    class skill_replace_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        skillID: number;
        newInfo: info_skill;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 删除技能
 */
declare module protocol {
    class skill_remove_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        skillID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步技能列表
 */
declare module protocol {
    class skill_list_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: Array<info_skill>;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class skill_enhance_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: Array<info_skill_enhance>;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 修改技能
 */
declare module protocol {
    class skill_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: info_skill;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 活动状态改变推送
 */
declare module protocol {
    class daily_active_state_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步日常活动列表
 */
declare module protocol {
    class daily_activity_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: Array<info_daily_activity>;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 加载日常活动列表
 */
declare module protocol {
    class daily_activity_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: Array<info_daily_activity>;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 签到回复
 */
declare module protocol {
    class sign_day_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        award_state: number;
        award_id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 签到请求
 */
declare module protocol {
    class sign_day_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取签到奖励回复
 */
declare module protocol {
    class sign_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
        award_state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取签到奖励请求
 */
declare module protocol {
    class sign_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 技能时装信息
 */
declare module protocol {
    class show_skill_fashion extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        fashionType: number;
        showId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 守卫比奇当前进度同步
 */
declare module protocol {
    class shou_wei_bi_qi_progress_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        progress: number;
        awards: Array<number>;
        awards_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 玩家上线同步当前投票情况，和自身的情况
 */
declare module protocol {
    class daily_activity_mbcz_vote_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        supportConut: number;
        againstConut: number;
        conut: number;
        times: number;
        state: number;
        isOpenDstx: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 守卫比奇当前BOSS对应ID同步
 */
declare module protocol {
    class shou_wei_bi_qi_boss_id_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        posArr: Array<info_monster_base>;
        id_changed: boolean;
        posArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 经验修为神炉信息
 */
declare module protocol {
    class shenlu_exp_xiuwei_shenlu_info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        state: number;
        time: number;
        expcount: number;
        xiuweicount: number;
        time_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class sheng_hua_zhan_chang_UI_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        leftTime: number;
        state: number;
        infectCount: number;
        infectTime: number;
        score: number;
        additionalScore: number;
        leftTime_changed: boolean;
        state_changed: boolean;
        infectCount_changed: boolean;
        infectTime_changed: boolean;
        score_changed: boolean;
        additionalScore_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class daily_activity_shzc_rank_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class daily_activity_shzc_rank_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class daily_activity_shzc_rank_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        rank: number;
        score: number;
        info: Array<info_shzc_rank>;
        rank_changed: boolean;
        score_changed: boolean;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 告诉客户端今天是单双周和周几
 */
declare module protocol {
    class daily_weekDay_message_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        weekinfo: number;
        dayinfo: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 深渊大厅数据同步
 */
declare module protocol {
    class shen_yuan_da_ting_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        bossName: string;
        mapName: string;
        count: number;
        monsterCount: number;
        curMapName: string;
        bossName_changed: boolean;
        mapName_changed: boolean;
        count_changed: boolean;
        monsterCount_changed: boolean;
        curMapName_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 神域探宝刷新同步
 */
declare module protocol {
    class shen_yu_tan_bao_refresh_id_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        transID: number;
        wave: number;
        bossTime: number;
        wave_changed: boolean;
        bossTime_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步未知暗殿BOSS数据改变
 */
declare module protocol {
    class dark_temple_boss_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: Array<info_dark_temple_boss>;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步未知暗殿BOSS数据
 */
declare module protocol {
    class dark_temple_boss_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: Array<info_dark_temple_boss>;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求是否充值了每日限购礼包
 */
declare module protocol {
    class day_gift_load_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class day_gift_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        time: number;
        ID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //命运轮盘瓶子数据
 */
declare module protocol {
    class destiny_bottle_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        dayget: number;
        monthget: number;
        infoArr: Array<info_bottle>;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //领取奖励请求
 */
declare module protocol {
    class destiny_get_allaward_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class destiny_get_allaward_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        sortArr: Array<number>;
        sortArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class destiny_get_award_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class destiny_get_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //重置请求
 */
declare module protocol {
    class destiny_reset_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class destiny_reset_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class destiny_reset_surplus_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        surplus: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class destiny_start_turn_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class destiny_start_turn_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        index: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //命运轮盘的轮盘数据
 */
declare module protocol {
    class destiny_turn_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        groupid: number;
        infoArr: Array<info_turn_award>;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 装备兑换
 */
declare module protocol {
    class dig_equipment_change_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        itemID: number;
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 装备兑换返回
 */
declare module protocol {
    class dig_equipment_change_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        itemID: number;
        intensifyLevel: number;
        refineLevel: number;
        intensifyLevel_changed: boolean;
        refineLevel_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 挖吧随机兑换
 */
declare module protocol {
    class dig_equipment_random_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        pos: number;
        targetID1: number;
        targetID2: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 状态返回
 */
declare module protocol {
    class dig_equipment_random_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        itemID: number;
        intensifyLevel: number;
        refineLevel: number;
        intensifyLevel_changed: boolean;
        refineLevel_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 装备对话全服记录请求
 */
declare module protocol {
    class dig_equipment_record_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步客户端全服兑换列表
 */
declare module protocol {
    class dig_equipment_record_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        info: Array<info_mine_radio>;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class dig_mine_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        timeHave: number;
        timeAll: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 已经领取的宝箱
 */
declare module protocol {
    class dragon_god_get_award_arr_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        getarr: Array<number>;
        getarr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 获取祭拜奖励
 */
declare module protocol {
    class dragon_god_get_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        awardTableId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 获取奖励
 */
declare module protocol {
    class dragon_god_get_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 神龙祭拜泡点同步
 */
declare module protocol {
    class dragon_god_worship_paodian_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        attrID: number;
        attrValue: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //进度查询
 */
declare module protocol {
    class dragon_god_worship_progress_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class dragon_god_worship_progress_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        award: number;
        refreshMonster: number;
        killMonsterCount: number;
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 神龙祭拜
 */
declare module protocol {
    class dragon_god_worship_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        currencyType: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 神龙祭拜
 */
declare module protocol {
    class dragon_god_worship_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        currencyType: number;
        awardVal: Array<number>;
        state: number;
        awardVal_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 神域探宝当前波数同步
 */
declare module protocol {
    class shen_yu_tan_bao_cur_wave_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        wave: number;
        bossTime: number;
        transID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 神武试炼同步数据
 */
declare module protocol {
    class shen_wu_shi_lian_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        dailyValue: number;
        dailyCount: number;
        bossID: number;
        skills: Array<number>;
        skills_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 神武试炼开始服务器回复
 */
declare module protocol {
    class shen_wu_shi_lian_start_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        bossID: number;
        skills: Array<number>;
        skills_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 神武试炼开始
 */
declare module protocol {
    class shen_wu_shi_lian_start_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 神武试炼刷新服务器回复
 */
declare module protocol {
    class shen_wu_shi_lian_refresh_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        skills: Array<number>;
        skills_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 神武试炼刷新请求
 */
declare module protocol {
    class shen_wu_shi_lian_refresh_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 神武试炼攻击BOSS
 */
declare module protocol {
    class shen_wu_shi_lian_attack_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        types: Array<number>;
        counts: Array<number>;
        types_changed: boolean;
        counts_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 神武试炼攻击BOSS
 */
declare module protocol {
    class shen_wu_shi_lian_attack_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        skillID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 神纹升级
 */
declare module protocol {
    class shen_wen_upgrade_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class dragon_soul_up_state_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 龙魂突破
 */
declare module protocol {
    class dragon_spirit_breach_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 龙魂突破返回
 */
declare module protocol {
    class dragon_spirit_breach_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 龙魂升级
 */
declare module protocol {
    class dragon_spirit_upgrade_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 龙魂升级返回
 */
declare module protocol {
    class dragon_spirit_upgrade_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 龙脉槽位升级
 */
declare module protocol {
    class dragon_vein_upgrade_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        upgradeSolt: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 龙脉升级返回
 */
declare module protocol {
    class dragon_vein_upgrade_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //火龙任务接取
 */
declare module protocol {
    class dragon_worship_accept_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        taskID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //火龙任务返回
 */
declare module protocol {
    class dragon_worship_accept_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //任务发生变化时同步
 */
declare module protocol {
    class dragon_worship_change_sync extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        taskIDList: Array<info_condition>;
        taskIDList_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //火龙任务提交/领取奖励
 */
declare module protocol {
    class dragon_worship_get_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        taskID: number;
        num: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //提交任务/领取奖励返回
 */
declare module protocol {
    class dragon_worship_get_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 放弃任务
 */
declare module protocol {
    class dragon_worship_giveup_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        taskID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 放弃任务返回
 */
declare module protocol {
    class dragon_worship_giveup_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //同步任务数据
 */
declare module protocol {
    class dragon_worship_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        taskIDList: Array<info_condition>;
        curRefreshCount: number;
        taskIDList_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 刷新任务
 */
declare module protocol {
    class dragon_worship_refresh_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 刷新任务
 */
declare module protocol {
    class dragon_worship_refresh_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 重置请求
 */
declare module protocol {
    class dragon_worship_reset_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 重置回复
 */
declare module protocol {
    class dragon_worship_reset_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 配置的boss被击杀后服务器主推
 */
declare module protocol {
    class early_kill_boss_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        data: info_kill_boss_role;
    }
}
/**
 * File is automatically generated, Please do not modify
 * boss首杀领取排名奖励
 */
declare module protocol {
    class early_kill_boss_get_award extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        ID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 登陆主推
 */
declare module protocol {
    class early_kill_boss_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        data: Array<info_kill_boss_role>;
        start_time: number;
        end_time: number;
        data_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 加载精英BOSS状态请求
 */
declare module protocol {
    class elite_boss_load_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 加载精英BOSS状态回复
 */
declare module protocol {
    class elite_boss_load_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        info: Array<info_elite_boss>;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 精英boss界面请求
 */
declare module protocol {
    class elite_boss_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class elite_boss_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        worldBossInfo: Array<info_world_boss>;
        worldBossInfo_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //突破
 */
declare module protocol {
    class enchantment_break_through_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        itemType: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //突破
 */
declare module protocol {
    class enchantment_break_through_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        itemType: number;
        curLevel: number;
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //同步信息
 */
declare module protocol {
    class enchantment_sync_info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        itemType: number;
        breakThroughLevel: number;
        unlock: boolean;
        slotInfos: Array<enchantment_sync_slot_info>;
        slotInfos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //同步信息
 */
declare module protocol {
    class enchantment_sync_infos extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infos: Array<enchantment_sync_info>;
        infos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //槽位信息
 */
declare module protocol {
    class enchantment_sync_slot_info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        slotId: number;
        level: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 解锁
 */
declare module protocol {
    class enchantment_unlock_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        itemType: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class enchantment_unlock_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        itemType: number;
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //附魔升级
 */
declare module protocol {
    class enchantment_upgrade_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        itemType: number;
        slotId: number;
        maeriaisType: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //附魔升级
 */
declare module protocol {
    class enchantment_upgrade_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        itemType: number;
        slotId: number;
        curLevel: number;
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 神纹升级
 */
declare module protocol {
    class shen_wen_upgrade_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        posId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 洗练
 */
declare module protocol {
    class shen_wen_refine_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 洗练
 */
declare module protocol {
    class shen_wen_refine_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        sealsPosId: number;
        lockAttrIds: Array<number>;
        lockAttrIds_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入地图同步ui类型
 */
declare module protocol {
    class enter_scene_ui_type_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 神纹洗练应用
 */
declare module protocol {
    class shen_wen_refine_apply_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 神纹洗练应用
 */
declare module protocol {
    class shen_wen_refine_apply_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        sealsPosId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求装备极致强化
 */
declare module protocol {
    class equip_ace_intensify_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        pos: number;
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 极致强化返回
 */
declare module protocol {
    class equip_ace_intensify_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 兑换装备请求
 */
declare module protocol {
    class equip_exchange_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 兑换装备请求返回
 */
declare module protocol {
    class equip_exchange_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 装备第一次穿戴齐通知
 */
declare module protocol {
    class equip_first_time_dress_full_notify extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求强化买星
 */
declare module protocol {
    class equip_intensify_buy_star_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        pos: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求强化买星返回
 */
declare module protocol {
    class equip_intensify_buy_star_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求强化转移
 */
declare module protocol {
    class equip_intensify_inherit_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        sourcePos: number;
        targetPos: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 强化转移返回消息
 */
declare module protocol {
    class equip_intensify_inherit_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求装备强化
 */
declare module protocol {
    class equip_intensify_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        pos: number;
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 强化返回
 */
declare module protocol {
    class equip_intensify_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 数据改变
 */
declare module protocol {
    class equip_refine_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: info_key_value_pair;
        midLV: number;
        infoArr_changed: boolean;
        midLV_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 玩家数据加载
 */
declare module protocol {
    class equip_refine_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: Array<info_key_value_pair>;
        midLV: number;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 装备精练请求
 */
declare module protocol {
    class equip_refine_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        pos: number;
        type: number;
        auto: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 装备精练回复
 */
declare module protocol {
    class equip_refine_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 升级状态更新
 */
declare module protocol {
    class equip_strengthen_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: info_equip_strengthen;
        isUpgradeSucceed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 装备槽加载同步
 */
declare module protocol {
    class equip_strengthen_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: Array<info_equip_strengthen>;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 装备槽强化请求
 */
declare module protocol {
    class equip_strengthen_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        pos: number;
        flag: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 装备槽强化回复
 */
declare module protocol {
    class equip_strengthen_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 副装-禄存-更换装备
 */
declare module protocol {
    class equip_vice_lucun_change_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        posId: number;
        equipId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 副装-禄存-更换装备回复
 */
declare module protocol {
    class equip_vice_lucun_change_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 副装-禄存-数据发生改变
 */
declare module protocol {
    class equip_vice_lucun_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        EquipID: Array<number>;
        EquipID_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 副装-禄存-数据同步
 */
declare module protocol {
    class equip_vice_lucun_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        EquipID: Array<number>;
        EquipID_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 装备副装-禄存命装-槽位开启请求
 */
declare module protocol {
    class equip_vice_lucun_slot_open_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        soltPosId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 装备副装-禄存命装-槽位开启返回
 */
declare module protocol {
    class equip_vice_lucun_slot_open_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 装备副装-禄存命装-槽位开启状态同步
 */
declare module protocol {
    class equip_vice_lucun_slot_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        alreadyOpenSlot: Array<number>;
        alreadyOpenSlot_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class equip_zhuhun_uplv_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        pos: number;
        flag: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class equip_zhuhun_uplv_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步ID的剩余兑换信息
 */
declare module protocol {
    class exchange_info_nums_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        idArr: Array<number>;
        numArr: Array<number>;
        idArr_changed: boolean;
        numArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 神纹锁标志
 */
declare module protocol {
    class shen_wen_lock_flag_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 神纹锁标志操作
 */
declare module protocol {
    class shen_wen_lock_flag_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        isLock: boolean;
        sealsPosId: number;
        attrTbId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 功能是否开启
 */
declare module protocol {
    class exp_refine_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        func_open: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 玩家登录推送
 */
declare module protocol {
    class exp_refine_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        func_open: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 炼制请求
 */
declare module protocol {
    class exp_refine_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 炼制回复
 */
declare module protocol {
    class exp_refine_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 改变
 */
declare module protocol {
    class exp_refine_show_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: info_exp_refine;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 面板信息请求
 */
declare module protocol {
    class exp_refine_show_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 回复
 */
declare module protocol {
    class exp_refine_show_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        info: info_exp_refine;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class extract_card_day_count_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class extract_card_day_count_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class extract_card_day_count_award_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        arr: Array<number>;
        arr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求翻牌
 */
declare module protocol {
    class extract_card_get_all_card_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 放弃翻牌
 */
declare module protocol {
    class extract_card_give_up_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        teamID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 放弃翻牌返回
 */
declare module protocol {
    class extract_card_give_up_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求翻牌数据继续翻牌
 */
declare module protocol {
    class extract_card_info_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class extract_card_info_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步翻牌组信息
 */
declare module protocol {
    class extract_card_infos_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infos: Array<extract_card_syn>;
        infos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 上线同步没有抽完得组
 */
declare module protocol {
    class extract_card_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        teamID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 翻牌一键翻取
 */
declare module protocol {
    class extract_card_onekey_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        teamID: number;
        pos: Array<number>;
        pos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 翻牌
 */
declare module protocol {
    class extract_card_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        pos: number;
        teamId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 翻牌数据
 */
declare module protocol {
    class extract_card_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        valID: Array<number>;
        num: number;
        prize: number;
        cardteam: number;
        times: number;
        valID_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步翻牌信息
 */
declare module protocol {
    class extract_card_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        valID: Array<number>;
        cardteam: number;
        times: number;
        turnPos: Array<number>;
        turnId: Array<number>;
        valID_changed: boolean;
        turnPos_changed: boolean;
        turnId_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 翻牌剩余时间
 */
declare module protocol {
    class extract_card_time_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        time: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 时装
 */
declare module protocol {
    class fashion_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        show: info_fashion_show;
        info: info_fashion;
        dress: info_fashion_dress;
        show_changed: boolean;
        info_changed: boolean;
        dress_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 激活穿戴特定时装
 */
declare module protocol {
    class fashion_dress_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class fashion_dress_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 时装数据
 */
declare module protocol {
    class fashion_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        showArr: Array<info_fashion_show>;
        infoArr: Array<info_fashion>;
        dressArr: Array<info_fashion_dress>;
        activated: Array<number>;
        showArr_changed: boolean;
        infoArr_changed: boolean;
        dressArr_changed: boolean;
        activated_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 神纹属性信息
 */
declare module protocol {
    class shen_wen_info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        attr_id: number;
        is_lock: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 时装回收等级改变
 */
declare module protocol {
    class fashion_recovery_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        level: number;
        recoveryValue: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class sha_cheng_info_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        time: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 显示时装
 */
declare module protocol {
    class fashion_show_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class fashion_show_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 时装升级
 */
declare module protocol {
    class fashion_upgrade_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        fashionID: number;
        itemID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 时装升级返回
 */
declare module protocol {
    class fashion_upgrade_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class feast_boss_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        info: info_feast_boss;
        type_changed: boolean;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class feast_boss_enter_map_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        unitId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class feast_boss_enter_map_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class feast_boss_getdata_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class feast_boss_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        bossInfoArray: Array<info_feast_boss>;
        recordInfo: Array<info_drop_log>;
        bossInfoArray_changed: boolean;
        recordInfo_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 功勋升级
 */
declare module protocol {
    class feat_up_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * //功勋升级返回
 */
declare module protocol {
    class feat_up_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 血战沙城完成
 */
declare module protocol {
    class sha_cheng_complate_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        iscorss: number;
        type_changed: boolean;
        iscorss_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 沙城战场景数据同步
 */
declare module protocol {
    class sha_cheng_battle_scene_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        count: number;
        castellan: string;
        castellanGuild: string;
        statueState: number;
        mapType: number;
        count_changed: boolean;
        castellan_changed: boolean;
        castellanGuild_changed: boolean;
        statueState_changed: boolean;
        mapType_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class sha_cheng_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class sha_cheng_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 界面请求回复
 */
declare module protocol {
    class sevenDay_Carnival_Show_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        money: number;
        info: Array<info_recharge_rank>;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 界面请求
 */
declare module protocol {
    class sevenDay_Carnival_Show_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取奖励请求
 */
declare module protocol {
    class foundation_get_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取奖励回复
 */
declare module protocol {
    class foundation_get_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        id: number;
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 登陆主推
 */
declare module protocol {
    class foundation_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        monthGearArray: Array<info_foundation>;
        monthGearArray_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 装备捐献_领取奖励请求
 */
declare module protocol {
    class front_supply_getAward_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        multiple: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 装备捐献_领取奖励返回
 */
declare module protocol {
    class front_supply_getAward_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 装备捐献_登陆同步
 */
declare module protocol {
    class front_supply_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        awardIdArray: Array<number>;
        taskInfoArray: Array<taskInfo>;
        awardIdArray_changed: boolean;
        taskInfoArray_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 装备捐献_完成任务请求
 */
declare module protocol {
    class front_supply_submit_task_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 装备捐献_完成任务返回
 */
declare module protocol {
    class front_supply_submit_task_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class fu_mo_level_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        configID: number;
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class fu_mo_level_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class fu_mo_level_enter_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        configID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class fu_mo_level_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        isCanSweep: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class fu_mo_level_result_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        flag: boolean;
        bossCount: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class fu_mo_level_sweep_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        ID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class fu_mo_level_sweep_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 更新功能开启
 */
declare module protocol {
    class func_open_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        idArr: Array<number>;
        isOpen: number;
        idArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取功能开启预告奖励
 */
declare module protocol {
    class func_open_get_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        funcID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取功能开启预告奖励返回
 */
declare module protocol {
    class func_open_get_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 加载功能开启
 */
declare module protocol {
    class func_open_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        idArr: Array<number>;
        idArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 功能开启关闭同步
 */
declare module protocol {
    class func_open_remove_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        intArr: Array<number>;
        intArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 符文套装激活_请求
 */
declare module protocol {
    class funwen_suit_active_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        villActiveSuitId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 符文套装激活_返回
 */
declare module protocol {
    class funwen_suit_active_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        canActiveSuitId: Array<number>;
        canActiveSuitId_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //符文_一键分解_请求,type=1符文炼制背包，tyep=2符文背包
 */
declare module protocol {
    class fuwen_onkey_parse_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        bagType: number;
        quality: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //符文_手动分解_求情,type=1符文炼制背包，type=2 符文背包
 */
declare module protocol {
    class fuwen_parse_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        bagType: number;
        gridPosIdx: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //符文炼制_分解_返回结果,一键或手动
 */
declare module protocol {
    class fuwen_parse_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        isOneKey: boolean;
        bagType: number;
        info: fuwenlianzhi_info;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 符文升级
 */
declare module protocol {
    class fuwen_upgrade_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        upgradeSlot: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 符文升级返回
 */
declare module protocol {
    class fuwen_upgrade_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //符文炼制每个返回的元素信息
 */
declare module protocol {
    class fuwenlianzhi_element extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        itemid: number;
        intensifyLevel: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //符文炼制_请求_符文炼制信息
 */
declare module protocol {
    class fuwenlianzhi_info_syn_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * //符文炼制信息同步_返回结果
 */
declare module protocol {
    class fuwenlianzhi_info_syn_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        info: fuwenlianzhi_info;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //符文炼制_信息
 */
declare module protocol {
    class fuwenlianzhi_info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        elementsArr: Array<fuwenlianzhi_element>;
        clickStateArr: Array<boolean>;
        elementsArr_changed: boolean;
        clickStateArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //符文炼制_一次点击_请求
 */
declare module protocol {
    class fuwenlianzhi_once_click_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        isOneKey: boolean;
        clickIdx: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //符文炼制_一次炼制_返回结果
 */
declare module protocol {
    class fuwenlianzhi_once_click_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        isOneKey: boolean;
        info: fuwenlianzhi_info;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //符文炼制_拾取_请求,全部或手动
 */
declare module protocol {
    class fuwenlianzhi_pick_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        isAllPick: boolean;
        gridPosIdx: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //符文炼制_拾取_返回结果,全部或手动
 */
declare module protocol {
    class fuwenlianzhi_pick_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        isAllPick: boolean;
        info: fuwenlianzhi_info;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 状态返回
 */
declare module protocol {
    class seven_up_lv_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 升级请求
 */
declare module protocol {
    class seven_up_lv_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 等级改变
 */
declare module protocol {
    class seven_up_change_lv_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        baseID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求攻城战的帮会排行信息
 */
declare module protocol {
    class gcz_info_guild_rank_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回
 */
declare module protocol {
    class gcz_info_guild_rank_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步排行信息
 */
declare module protocol {
    class gcz_info_guild_rank_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: Array<info_gcz_guild_rank>;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 71攻城战沙城面板数据
 */
declare module protocol {
    class gcz_info_new_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 71攻城战沙城面板数据
 */
declare module protocol {
    class gcz_info_new_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        isFirst: number;
        mergerCount: number;
        sha_cheng_time: number;
        guildName: string;
        member: Array<info_sha_cheng_member>;
        mergerCount_changed: boolean;
        guildName_changed: boolean;
        member_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class gcz_over_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        name: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 七杀登陆同步
 */
declare module protocol {
    class seven_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        BaseID: Array<number>;
        BaseID_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 地图数据
 */
declare module protocol {
    class send_map_infos_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        mapArr: Array<info_kuang_maps>;
        roleMap: number;
        time: number;
        isFull: boolean;
        tsCount: number;
        mapArr_changed: boolean;
        roleMap_changed: boolean;
        time_changed: boolean;
        isFull_changed: boolean;
        tsCount_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入沙城
 */
declare module protocol {
    class gcz_scene_enter_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入地图
 */
declare module protocol {
    class gcz_scene_enter_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 沙城战场景数据同步
 */
declare module protocol {
    class gcz_scene_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        countdown: number;
        castellan: string;
        castellanGuild: string;
        mapType: number;
        campsiteGuild: string;
        plazaGuild: string;
        scoreRankGuilds: Array<string>;
        scoreRanks: Array<number>;
        countdown_changed: boolean;
        castellan_changed: boolean;
        castellanGuild_changed: boolean;
        mapType_changed: boolean;
        campsiteGuild_changed: boolean;
        plazaGuild_changed: boolean;
        scoreRankGuilds_changed: boolean;
        scoreRanks_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 宝石一键合成请求
 */
declare module protocol {
    class gem_compound_oneKey_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class gem_compound_oneKey_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class gem_compound_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        pos: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class gem_compound_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 上线同步信息/天关层数改变
 */
declare module protocol {
    class gem_slot_info_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infos: Array<info_gem_slot>;
        infos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求开启槽位
 */
declare module protocol {
    class gem_slot_open_state_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        slotID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class gem_slot_open_state_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 宝石槽位开启状态
 */
declare module protocol {
    class gem_slot_open_state_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infos: Array<info_gem_slot_open>;
        infos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 宝石槽位升级
 */
declare module protocol {
    class gem_slot_upgrade_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        gem_pos: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class gem_slot_upgrade_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取奖励
 */
declare module protocol {
    class get_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        achievementId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取奖励
 */
declare module protocol {
    class get_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        achievementId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 选择披风外观DI回应
 */
declare module protocol {
    class select_cloak_show_appearance_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        select_appearance_id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 选择披风显示外观
 */
declare module protocol {
    class select_cloak_show_appearance_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        appearance_id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 圣印强化返回
 */
declare module protocol {
    class seals_intensify_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 圣印强化请求
 */
declare module protocol {
    class seals_intensify_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infos: Array<seals_intensify_info>;
        intensifyPos: number;
        infos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //获取累积充值奖励
 */
declare module protocol {
    class get_grand_total_recharge_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        awardId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //累积充值奖励
 */
declare module protocol {
    class get_grand_total_recharge_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        awardId: number;
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取等级达标奖励请求
 */
declare module protocol {
    class get_level_reach_awards_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取等级达标奖励返回
 */
declare module protocol {
    class get_level_reach_awards_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        ID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取限时成就最终奖励
 */
declare module protocol {
    class get_limit_time_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class get_limit_time_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //获取7日特权物品
 */
declare module protocol {
    class get_seven_days_privilege_item_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        day: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //获取7日奖励返回
 */
declare module protocol {
    class get_seven_days_privilege_item_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        curGear: number;
        curExtDay: number;
        awardId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取洪福超级宝箱
 */
declare module protocol {
    class get_super_box_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        itemPos: number;
        currencyType: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 洪福宝箱领取返回
 */
declare module protocol {
    class get_super_box_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 圣印强化信息
 */
declare module protocol {
    class seals_intensify_info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        itemPos: number;
        itemCount: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //获取勇士回归奖励
 */
declare module protocol {
    class get_warrionrs_return_login_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        awardId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //勇士回归登陆奖励
 */
declare module protocol {
    class get_warrionrs_return_login_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        awardId: number;
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 自选礼包领取选定道具请求
 */
declare module protocol {
    class gift_optional_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        pos: number;
        itemId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 自选礼包返回
 */
declare module protocol {
    class gift_optional_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 推送全局数据
 */
declare module protocol {
    class global_data_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        time: number;
        day: number;
        mergeDay: number;
        scName: string;
        scMaster: string;
        isDailyRefresh: boolean;
        time_changed: boolean;
        day_changed: boolean;
        mergeDay_changed: boolean;
        scName_changed: boolean;
        scMaster_changed: boolean;
        isDailyRefresh_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 圣印信息
 */
declare module protocol {
    class seals_info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        seals_exp: number;
        shenWenLevel: number;
        shen_wen_infos: Array<shen_wen_info>;
        refine_count: number;
        refine_out_attr_ids: Array<number>;
        seals_exp_changed: boolean;
        shenWenLevel_changed: boolean;
        shen_wen_infos_changed: boolean;
        refine_count_changed: boolean;
        refine_out_attr_ids_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 1
 */
declare module protocol {
    class script_ui_click_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        buttonID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * GM 命令请求
 */
declare module protocol {
    class gm_cmd_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        cmd: string;
        param: Array<string>;
        param_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * GM 命令请求失败
 */
declare module protocol {
    class gm_cmd_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 点击界面按钮请求，纯界面类，无NPC
 */
declare module protocol {
    class script_ui_click_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        buttonID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 天降洪福超级宝箱信息
 */
declare module protocol {
    class script_tjhf_super_box_info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        diffTime: number;
        ownerName: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步场景面板更新
 */
declare module protocol {
    class script_scene_right_update_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        context: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 场景按钮点击回复
 */
declare module protocol {
    class script_scene_click_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        buttonID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 场景按钮点击请求
 */
declare module protocol {
    class script_scene_click_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        buttonID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * NPC按钮点击回复
 */
declare module protocol {
    class script_npc_click_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        spriteID: number;
        buttonID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * NPC按钮点击请求
 */
declare module protocol {
    class script_npc_click_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        spriteID: number;
        buttonID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 客户端功能同步
 */
declare module protocol {
    class script_client_func_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        param: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步玩家这个特殊地图的信息
 */
declare module protocol {
    class saint_dragon_spirit_map_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        endTime: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 神甲信息同步
 */
declare module protocol {
    class god_suit_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        curId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 神甲升级请求
 */
declare module protocol {
    class god_suit_upgrade_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        ID: number;
        itemID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 神甲升级返回
 */
declare module protocol {
    class god_suit_upgrade_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 圣域龙灵玩家进入后的同步
 */
declare module protocol {
    class saint_dragon_spirit_load_sync extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArrayList: Array<info_condition_list>;
        infoArrayList_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回
 */
declare module protocol {
    class saint_dragon_spirit_get_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求领取激活奖励
 */
declare module protocol {
    class saint_dragon_spirit_get_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步每个ID的激活状态
 */
declare module protocol {
    class saint_dragon_spirit_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArrayList: Array<info_condition_list>;
        infoArrayList_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 击杀请求
 */
declare module protocol {
    class gold_digger_kill_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class gold_digger_kill_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        type: number;
        numArray: Array<number>;
        itemIdArray: Array<number>;
        type_changed: boolean;
        numArray_changed: boolean;
        itemIdArray_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class gold_digger_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        goldCount: number;
        moneyCount: number;
        goldCount_changed: boolean;
        moneyCount_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回协议
 */
declare module protocol {
    class saint_dragon_spirit_active_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //累积充值奖励信息
 */
declare module protocol {
    class grand_total_recharge_award_info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        awardId: number;
        isGet: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class guild_act_ward_boss_hp_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        hp: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会守卫进入请求
 */
declare module protocol {
    class guild_act_ward_in_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class guild_act_ward_in_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class guild_act_ward_info_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        wave: number;
        count: number;
        wave_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class guild_act_ward_last_time extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        lastTime: number;
        waveTime: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会活动界面数据
 */
declare module protocol {
    class guild_activity_data_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        freePrayNum: number;
        moneyPrayNum: number;
        bossId: number;
        bossCount: number;
        bossState: number;
        bossAutoId: number;
        bossAutoHour: number;
        bossAutoMin: number;
        bossStartTime: number;
        yiWangMiJing: number;
        freePrayNum_changed: boolean;
        moneyPrayNum_changed: boolean;
        bossId_changed: boolean;
        bossCount_changed: boolean;
        bossState_changed: boolean;
        bossAutoId_changed: boolean;
        bossAutoHour_changed: boolean;
        bossAutoMin_changed: boolean;
        bossStartTime_changed: boolean;
        yiWangMiJing_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会上香
 */
declare module protocol {
    class guild_activity_pray_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        prayType: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会上香返回
 */
declare module protocol {
    class guild_activity_pray_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        freePrayNum: number;
        moneyPrayNum: number;
        freePrayNum_changed: boolean;
        moneyPrayNum_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 是否同意帮会申请
 */
declare module protocol {
    class guild_apply_agree_auto_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: Array<string>;
        agree: number;
        id_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 是否同意帮会申请返回
 */
declare module protocol {
    class guild_apply_agree_auto_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 是否同意帮会申请
 */
declare module protocol {
    class guild_apply_agree_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: string;
        agree: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 是否同意帮会申请返回
 */
declare module protocol {
    class guild_apply_agree_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        result: number;
        guildName: string;
        result_changed: boolean;
        guildName_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 申请加入帮会
 */
declare module protocol {
    class guild_apply_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        name: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回申请加入状态
 */
declare module protocol {
    class guild_apply_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        name: string;
        check: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 根据人物ID加帮会
 */
declare module protocol {
    class guild_apply_roleid_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回根据人物ID加帮会的状态
 */
declare module protocol {
    class guild_apply_roleid_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 职位任命
 */
declare module protocol {
    class guild_appoint_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: string;
        post: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回任命状态
 */
declare module protocol {
    class guild_appoint_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会竞技
 */
declare module protocol {
    class guild_athletics_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        attrRank: Array<info_guild_athletics>;
        attrRank_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会竞技排行请求
 */
declare module protocol {
    class guild_athletics_rank_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        day: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会竞技排行状态返回
 */
declare module protocol {
    class guild_athletics_rank_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会竞技排行返回
 */
declare module protocol {
    class guild_athletics_rank_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        attrRank: Array<info_guild_athletics>;
        attrRank_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求审核成员列表
 */
declare module protocol {
    class guild_audit_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        page: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回审核成员列表
 */
declare module protocol {
    class guild_audit_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        count: number;
        audits: Array<info_guild_audit>;
        audits_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class guild_boss_challenge_count_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        time: number;
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会boss状态请求
 */
declare module protocol {
    class guild_boss_data_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class guild_boss_data_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        array: Array<info_guild_boss2>;
        array_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * boss状态改变是主动推送
 */
declare module protocol {
    class guild_boss_data_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        array: Array<info_guild_boss2>;
        array_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入帮会boss
 */
declare module protocol {
    class guild_boss_enter_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入帮会boss返回
 */
declare module protocol {
    class guild_boss_enter_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class guild_boss_map_enter_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class guild_boss_map_enter_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 开启帮会boss
 */
declare module protocol {
    class guild_boss_open_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        bossId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 开启帮会boss返回
 */
declare module protocol {
    class guild_boss_open_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class guild_boss_rank_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class guild_boss_rank_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        array: Array<info_guild_boss_rank>;
        info: info_guild_boss_rank;
        bossHp: number;
        bossHp1: number;
        array_changed: boolean;
        info_changed: boolean;
        bossHp_changed: boolean;
        bossHp1_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class guild_boss_script_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        hurt: number;
        bossDie: number;
        hurt_changed: boolean;
        bossDie_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会boss设置自动开启时间
 */
declare module protocol {
    class guild_boss_set_auto_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        hour: number;
        min: number;
        bossId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会boss设置自动开启返回
 */
declare module protocol {
    class guild_boss_set_auto_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会建设捐献请求
 */
declare module protocol {
    class guild_build_donate_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        donateType: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会建设捐献返回
 */
declare module protocol {
    class guild_build_donate_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        goldDonateNum: number;
        moneyDonateNum: number;
        goldDonateCd: number;
        moneyDonateCd: number;
        donateType: number;
        goldDonateNum_changed: boolean;
        moneyDonateNum_changed: boolean;
        goldDonateCd_changed: boolean;
        moneyDonateCd_changed: boolean;
        donateType_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 打开帮会建设面板
 */
declare module protocol {
    class guild_build_page_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会建设面板返回
 */
declare module protocol {
    class guild_build_page_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        alreadyDonate: number;
        alreadyDonate_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会购买请求
 */
declare module protocol {
    class guild_buy_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        type: number;
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 应答帮会购买的请求
 */
declare module protocol {
    class guild_buy_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 取消帮会解散
 */
declare module protocol {
    class guild_cancel_dissolve_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 取消解散帮会返回
 */
declare module protocol {
    class guild_cancel_dissolve_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 山贼入侵
 */
declare module protocol {
    class guild_cateran_data_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        time: number;
        waveNum: number;
        lastNum: number;
        timeAppear: number;
        time_changed: boolean;
        waveNum_changed: boolean;
        timeAppear_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 修改血痕旗帜
 */
declare module protocol {
    class guild_change_stain_flag_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        flag: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 修改旗帜返回
 */
declare module protocol {
    class guild_change_stain_flag_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会信息
 */
declare module protocol {
    class guild_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoRole: info_guild_role;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领养帮会boss
 */
declare module protocol {
    class guild_creat_boss_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        bossID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 喂养boss
 */
declare module protocol {
    class guild_creat_boss_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 创建帮会红包推送
 */
declare module protocol {
    class guild_creat_red_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoRed: info_guild_red;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 创建红包
 */
declare module protocol {
    class guild_create_red_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        count: number;
        totalCount: number;
        blessing: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 创建红包返回结果
 */
declare module protocol {
    class guild_create_red_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求创建帮会
 */
declare module protocol {
    class guild_create_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        name: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回创建帮会
 */
declare module protocol {
    class guild_create_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 销毁物品
 */
declare module protocol {
    class guild_destroy_item_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        itemID: Array<string>;
        itemID_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回销毁物品状态
 */
declare module protocol {
    class guild_destroy_item_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        itemID: Array<string>;
        itemID_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求解散帮会
 */
declare module protocol {
    class guild_dissolve_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回解散帮会
 */
declare module protocol {
    class guild_dissolve_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 捐献物品
 */
declare module protocol {
    class guild_donate_item_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        pos: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回捐献物品
 */
declare module protocol {
    class guild_donate_item_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会捐赠
 */
declare module protocol {
    class guild_donate_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回帮会捐赠金钱状态
 */
declare module protocol {
    class guild_donate_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 兑换物品
 */
declare module protocol {
    class guild_exchange_item_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        itemID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回兑换物品状态
 */
declare module protocol {
    class guild_exchange_item_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        itemID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求退出帮会
 */
declare module protocol {
    class guild_exit_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回退出帮会
 */
declare module protocol {
    class guild_exit_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class guild_fack_boss_buy_count_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class guild_fack_boss_buy_count_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class guild_fack_boss_kill_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class guild_fack_boss_resave_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class guild_fack_boss_resave_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class guild_fack_boss_skill_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        iskill: boolean;
        Val: number;
        iskill_changed: boolean;
        Val_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class guild_fack_boss_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infos: Array<info_guild_fack_boss>;
        bossLis: Array<number>;
        infos_changed: boolean;
        bossLis_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 喂养boss
 */
declare module protocol {
    class guild_feed_boss_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        bossID: number;
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 喂养帮会boss状态返回
 */
declare module protocol {
    class guild_feed_boss_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步帮会boss信息
 */
declare module protocol {
    class guild_fiends_boss_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        boss: info_guild_boss;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 点击小篝火帮忙前检测是否可以帮忙
 */
declare module protocol {
    class guild_fire_click_check_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        spriteId: number;
        ownerName: string;
        ownerName_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 点击小篝火帮忙前检测是否可以帮忙
 */
declare module protocol {
    class guild_fire_click_check_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        spriteId: number;
        ownerName: string;
        spriteId_changed: boolean;
        ownerName_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会篝火点击
 */
declare module protocol {
    class guild_fire_click_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        fireType: number;
        spriteId: number;
        ownerName: string;
        spriteId_changed: boolean;
        ownerName_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会篝火点击返回
 */
declare module protocol {
    class guild_fire_click_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        fireType: number;
        fireType_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会篝火信息同步
 */
declare module protocol {
    class guild_fire_data_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        isOpen: number;
        count: number;
        isTake: number;
        helpNum: number;
        myFireLv: number;
        helpName: Array<string>;
        firePosX: number;
        firePosY: number;
        spriteId: number;
        mapId: number;
        exp: number;
        count_changed: boolean;
        isTake_changed: boolean;
        helpNum_changed: boolean;
        myFireLv_changed: boolean;
        helpName_changed: boolean;
        firePosX_changed: boolean;
        firePosY_changed: boolean;
        spriteId_changed: boolean;
        mapId_changed: boolean;
        exp_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮派禁地奖励经验同步
 */
declare module protocol {
    class guild_forbid_area_award_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        exp: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 客户端申请创建房间
 */
declare module protocol {
    class guild_forbid_area_create_room_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 副本内同步数据
 */
declare module protocol {
    class guild_forbid_area_dup_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleCount: number;
        extra: number;
        time: number;
        dupState: number;
        mTime: number;
        mCount: number;
        leaderID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 上线初始化
 */
declare module protocol {
    class guild_forbid_area_init_sync extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入房间失败
 */
declare module protocol {
    class guild_forbid_area_join_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 客户端申请进入房间
 */
declare module protocol {
    class guild_forbid_area_join_room_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roomID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 客户端请求帮派禁地列表
 */
declare module protocol {
    class guild_forbid_area_list_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        page: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步客户端帮派禁地列表
 */
declare module protocol {
    class guild_forbid_area_list_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        info: Array<info_guild_forbid_area>;
        myInfo: info_guild_forbid_area;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 客户端申请快速匹配
 */
declare module protocol {
    class guild_forbid_area_quick_pair_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 获取本服帮会数量包括已经删除的
 */
declare module protocol {
    class guild_get_allCount_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class guild_get_allCount_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //获取帮会排行榜信息
 */
declare module protocol {
    class guild_get_guild_rank_info_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * //帮会排榜返回信息
 */
declare module protocol {
    class guild_get_guild_rank_info_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        rankInfos: Array<guild_rank_info>;
        selfGuildAllFightPower: number;
        state: number;
        rankInfos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class guild_gou_huo_count_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class guild_gou_huo_enter_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class guild_gou_huo_enter_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求领奖返回
 */
declare module protocol {
    class guild_gou_huo_get_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 弹劾请求
 */
declare module protocol {
    class guild_impeach_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 弹劾请求回复
 */
declare module protocol {
    class guild_impeach_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 是否同意帮会邀请
 */
declare module protocol {
    class guild_invite_agree_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        name: string;
        senderId: string;
        agree: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 是否同意帮会邀请返回
 */
declare module protocol {
    class guild_invite_agree_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        roleName: string;
        roleName_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 邀请加入帮会
 */
declare module protocol {
    class guild_invite_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回邀请加入状态
 */
declare module protocol {
    class guild_invite_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        name: string;
        senderId: string;
        senderName: string;
        senderId_changed: boolean;
        senderName_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 更新物品信息
 */
declare module protocol {
    class guild_item_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        itemArr: Array<info_item>;
        itemArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 设置入会条件
 */
declare module protocol {
    class guild_join_limit_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        levelLimit: number;
        rebirthLimit: number;
        levelLimit_changed: boolean;
        rebirthLimit_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 设置入会条件返回
 */
declare module protocol {
    class guild_join_limit_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 加入帮会成功弹窗
 */
declare module protocol {
    class guild_join_notify_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求踢出角色
 */
declare module protocol {
    class guild_kick_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleId: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回踢出角色
 */
declare module protocol {
    class guild_kick_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求帮会列表
 */
declare module protocol {
    class guild_list_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        page: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回帮会列表
 */
declare module protocol {
    class guild_list_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        count: number;
        InfoArr: Array<info_guild_list>;
        InfoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 初始化帮会信息
 */
declare module protocol {
    class guild_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoRole: info_guild_role;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求公会日志
 */
declare module protocol {
    class guild_log_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        page: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回公会日志
 */
declare module protocol {
    class guild_log_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        count: number;
        logs: Array<info_guild_log>;
        logs_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步帮会限购信息
 */
declare module protocol {
    class guild_mall_limit_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infos: Array<info_guild_mall_limit>;
        infos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步帮会限购信息
 */
declare module protocol {
    class guild_mall_limit_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infos: Array<info_guild_mall_limit>;
        infos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会宣言请求
 */
declare module protocol {
    class guild_manifesto_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会宣言回复
 */
declare module protocol {
    class guild_manifesto_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入帮会地图
 */
declare module protocol {
    class guild_map_enter_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        activityType: number;
        fireSpriteId: number;
        posX: number;
        posY: number;
        activityType_changed: boolean;
        fireSpriteId_changed: boolean;
        posX_changed: boolean;
        posY_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入帮会地图返回
 */
declare module protocol {
    class guild_map_enter_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        activityID: number;
        transferID: number;
        activityID_changed: boolean;
        transferID_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求玩家所在地图返回
 */
declare module protocol {
    class guild_member_map_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        members: Array<info_guild_member>;
        members_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回成员列表
 */
declare module protocol {
    class guild_member_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        online: number;
        count: number;
        members: Array<info_guild_member>;
        members_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会成员发生变化
 */
declare module protocol {
    class guild_memberchange_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        members: Array<info_guild_member>;
        isJoin: boolean;
        members_changed: boolean;
        isJoin_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求帮会成员所在地图
 */
declare module protocol {
    class guild_menber_map_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会任务副本
 */
declare module protocol {
    class guild_mission_clone_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        unitCount: number;
        allCount: number;
        allCount_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会任务完成人数请求
 */
declare module protocol {
    class guild_mission_role_count_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会任务完成人数回复
 */
declare module protocol {
    class guild_mission_role_count_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 修改帮会公告信息
 */
declare module protocol {
    class guild_notice_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        notice: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 修改公告信息状态
 */
declare module protocol {
    class guild_notice_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会目标领奖请求
 */
declare module protocol {
    class guild_objective_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        baseID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会目标领奖回复
 */
declare module protocol {
    class guild_objective_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会目标改变同步
 */
declare module protocol {
    class guild_objective_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: Array<info_condition>;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会目标登陆同步
 */
declare module protocol {
    class guild_objective_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: Array<info_condition>;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 开启帮会建设
 */
declare module protocol {
    class guild_open_build_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 开启帮会建设返回
 */
declare module protocol {
    class guild_open_build_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //帮会排行信息
 */
declare module protocol {
    class guild_rank_info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        memberNum: number;
        exp: number;
        level: number;
        allFightPower: number;
        rank: number;
        leaderName: string;
        guildName: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 回收物品
 */
declare module protocol {
    class guild_recycle_item_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        itemID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回回收物品状态
 */
declare module protocol {
    class guild_recycle_item_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        itemID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 红包信息发生改变
 */
declare module protocol {
    class guild_red_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleID: string;
        cound: number;
        redID: string;
        name: string;
        name_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 清理帮会红包
 */
declare module protocol {
    class guild_red_clear_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        redID: Array<string>;
        redID_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 红包列表
 */
declare module protocol {
    class guild_red_list_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        redList: Array<info_guild_red>;
        redList_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class guild_red_pool_creat_red_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        redCoutn: number;
        gold: number;
        blessing: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class guild_red_pool_creat_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class guild_red_pool_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求领取红包
 */
declare module protocol {
    class guild_red_receive_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        redID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 红包领取状态
 */
declare module protocol {
    class guild_red_receive_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        redID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 发起帮会战请求
 */
declare module protocol {
    class guild_rival_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        guildIds: Array<string>;
        guildIds_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 发起帮会战请求返回
 */
declare module protocol {
    class guild_rival_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 设置是否自动同意加入
 */
declare module protocol {
    class guild_set_auto_join_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        isAuto: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 设置是否自动同意加入返回
 */
declare module protocol {
    class guild_set_auto_join_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会技能改变通知
 */
declare module protocol {
    class guild_skill_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        skill: info_guild_skill;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会技能登陆同步
 */
declare module protocol {
    class guild_skill_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        skillArr: Array<info_guild_skill>;
        skillArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会技能升级请求
 */
declare module protocol {
    class guild_skill_upLv_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会技能升级返回
 */
declare module protocol {
    class guild_skill_upLv_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        ID: number;
        ID_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入炼魔状态
 */
declare module protocol {
    class guild_summon_boss_enter_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会炼魔退出请求
 */
declare module protocol {
    class guild_summon_boss_quit_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会炼魔退出请求
 */
declare module protocol {
    class guild_summon_boss_quit_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 召唤帮会boss
 */
declare module protocol {
    class guild_summon_boss_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        bossID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 召唤帮会boss状态
 */
declare module protocol {
    class guild_summon_boss_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会炼魔boss状态
 */
declare module protocol {
    class guild_summon_boss_state_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        time: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求进入帮会炼魔
 */
declare module protocol {
    class guild_sunmmon_boss_enter_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        bossID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会仓库设置取出权限
 */
declare module protocol {
    class guild_warehouse_limit_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会仓库设置取出权限
 */
declare module protocol {
    class guild_warehouse_limit_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class guild_yabiao_complete_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        lastcount: number;
        ID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * // 请求进入帮会押镖活动
 */
declare module protocol {
    class guild_yabiao_enter_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入帮会押镖返回
 */
declare module protocol {
    class guild_yabiao_enter_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步帮会镖车信息
 */
declare module protocol {
    class guild_yabiao_info_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        carID: number;
        spriteID: number;
        remainTime: number;
        carState: number;
        maxHp: number;
        maxHp1: number;
        curHp: number;
        curHp1: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class ha_limit_buy_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: Array<info_limit_buy>;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class ha_limit_buy_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: Array<info_limit_buy>;
        day: number;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class ha_limit_buy_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class ha_limit_buy_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求协议
 */
declare module protocol {
    class saint_dragon_spirit_active_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 如意上线初始化
 */
declare module protocol {
    class ruyi_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        Value: number;
        submit_ry_Id: Array<number>;
        submit_ry_Id_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取奖励结果
 */
declare module protocol {
    class ruyi_get_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        Id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求令如意奖励
 */
declare module protocol {
    class ruyi_get_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        Id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 心跳请求
 */
declare module protocol {
    class heart_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        time: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 心跳返回
 */
declare module protocol {
    class heart_res extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 如意改变
 */
declare module protocol {
    class ruyi_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        Value: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 登陆同步
 */
declare module protocol {
    class ruishou_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        isOpen: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入超级瑞兽返回
 */
declare module protocol {
    class ruishou_enter_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 合服活动超级瑞兽请求进入
 */
declare module protocol {
    class ruishou_enter_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步boss状态
 */
declare module protocol {
    class ruishou_boss_state_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        bossState: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //同步杀怪波数
 */
declare module protocol {
    class role_sync_monster_wave extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        wave: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //采集宝箱数量同步
 */
declare module protocol {
    class role_sync_box_count extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        boxCount: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //同步已经获取得奖励ID
 */
declare module protocol {
    class role_sync_already_acquisition_award extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        awardList: Array<number>;
        awardList_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //同步奖励信息
 */
declare module protocol {
    class role_syn_award_info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        exp: number;
        exp_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 角色状态
 */
declare module protocol {
    class role_state_info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        role_state: number;
        flag: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 角色展示数据__生肖数据
 */
declare module protocol {
    class role_show_shengxiao_info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        reduce_speed_contrast_val: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 显示人物信息回复
 */
declare module protocol {
    class role_show_info_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        info_type: number;
        info: info_role_show;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 显示人物信息请求
 */
declare module protocol {
    class role_show_info_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        targetID: string;
        hero: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //守卫盟重发放奖励
 */
declare module protocol {
    class role_shou_wei_meng_zhong_award extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        rank: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 应答选择角色进入游戏
 */
declare module protocol {
    class role_select_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class role_select_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class role_save_config_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        strArray: Array<info_save_canfig>;
        strArray_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 应答保存配置数据
 */
declare module protocol {
    class role_save_config_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求保存配置数据
 */
declare module protocol {
    class role_save_config_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        enumType: number;
        val: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 修改人物名字回复
 */
declare module protocol {
    class role_rename_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 修改人物名字
 */
declare module protocol {
    class role_rename_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        name: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 应答复活
 */
declare module protocol {
    class role_relive_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求复活
 */
declare module protocol {
    class role_relive_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //恢复HP返回结果
 */
declare module protocol {
    class role_recover_hp_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        recoverHpTime: number;
        state: number;
        recoverHpTime_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //玩家恢复HP
 */
declare module protocol {
    class role_recover_hp_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        currencyType: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 客户端登陆成功进入场景之后 同步给客户端重连用的token
 */
declare module protocol {
    class role_reconnect_token_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        token: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 角色断线重连成功
 */
declare module protocol {
    class role_reconnect_success_syn extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 自己排名数据回复
 */
declare module protocol {
    class role_rank_self_load_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        rankType: number;
        rank: number;
        infoArr: Array<info_role_rank>;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 自己排名数据请求
 */
declare module protocol {
    class role_rank_self_load_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        rankType: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 排行榜数据回复
 */
declare module protocol {
    class role_rank_load_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        rankType: number;
        page: number;
        infoArr: Array<info_role_rank>;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 排行榜数据请求
 */
declare module protocol {
    class role_rank_load_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        rankType: number;
        page: number;
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 角色快捷购买返回
 */
declare module protocol {
    class role_quick_buy_upgrade_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 角色快捷购买升级
 */
declare module protocol {
    class role_quick_buy_upgrade_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 上传引导步骤
 */
declare module protocol {
    class role_post_guidance_step_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        stepId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步PK模式
 */
declare module protocol {
    class role_pk_mode_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        mode: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 应答设置PK模式
 */
declare module protocol {
    class role_pk_mode_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求设置PK模式
 */
declare module protocol {
    class role_pk_mode_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        mode: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //角色永久数据同步_默认登录时同步一次
 */
declare module protocol {
    class role_once_data_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        types: Array<number>;
        vals: Array<number>;
        types_changed: boolean;
        vals_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //通知发送奖励
 */
declare module protocol {
    class role_notify_send_award extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步角色的默认属性
 */
declare module protocol {
    class role_list_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        roleArr: Array<info_role_simple>;
        lastLoginRoleIndex: number;
        roleArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步角色开始初始化
 */
declare module protocol {
    class role_init_start_syn extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步角色初始化结束
 */
declare module protocol {
    class role_init_end_syn extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * //领取奖励结果
 */
declare module protocol {
    class role_get_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 角色随从信息同步
 */
declare module protocol {
    class role_follower_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        petSpriteID: number;
        petUnitID: number;
        marsSpriteID: number;
        marsUnitID: number;
        heroSpriteID: number;
        heroUnitID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 上限同步引导Id
 */
declare module protocol {
    class role_enter_sync_guidance_step extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        stepIds: Array<number>;
        stepIds_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 战斗伤害同步
 */
declare module protocol {
    class role_dmg_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: Array<info_dmg>;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 删除角色返回
 */
declare module protocol {
    class role_delete_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求删除角色
 */
declare module protocol {
    class role_delete_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 角色副本击杀信息
 */
declare module protocol {
    class role_defeat_info_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        num: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 角色死亡同步
 */
declare module protocol {
    class role_dead_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        deadType: number;
        atkerName: string;
        pos: number;
        skillID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步每日部分刷新数据
 */
declare module protocol {
    class role_daily_data_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        types: Array<number>;
        vals: Array<number>;
        types_changed: boolean;
        vals_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 应答创建角色
 */
declare module protocol {
    class role_create_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        roleInfo: info_role_simple;
        roleInfo_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 合服活动登陆有利领奖请求
 */
declare module protocol {
    class hf_login_reward_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 合服活动登陆有利领奖回复
 */
declare module protocol {
    class hf_login_reward_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class hf_login_reward_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        isGet: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 创建角色
 */
declare module protocol {
    class role_create_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        name: string;
        job: number;
        gender: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class honor_mall_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: info_honor_mall;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 荣誉币兑换请求
 */
declare module protocol {
    class honor_mall_exchange_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 回复
 */
declare module protocol {
    class honor_mall_exchange_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class honor_mall_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: Array<info_honor_mall>;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 玩家采集返回
 */
declare module protocol {
    class role_collect_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        waitDiffTime: number;
        state: number;
        waitDiffTime_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 魂牌升级
 */
declare module protocol {
    class hun_pai_upgrade_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        upgradeSolt: number;
        materialSolts: Array<number>;
        materialSolts_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 升级返回
 */
declare module protocol {
    class hun_pai_upgrade_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 魂装等级同步
 */
declare module protocol {
    class hz_pos_strengthen_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        pos: Array<info_equip_strengthen>;
        pos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 魂装槽位强化请求
 */
declare module protocol {
    class hz_pos_strengthen_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        pos: number;
        flag: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class hz_pos_strengthen_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class info_37wan_vip_award extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 周累计充值
 */
declare module protocol {
    class info_accumula_recharge extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 周奖励信息
 */
declare module protocol {
    class info_active_award_week extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        state: number;
        time: number;
        time_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 所有活动每日刷新数据，尤其数值类
 */
declare module protocol {
    class info_activity_daily_refresh extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        category: number;
        subID: number;
        state: number;
        partakeCount: number;
        reserve: string;
        state_changed: boolean;
        partakeCount_changed: boolean;
        reserve_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 答题排行榜数据
 */
declare module protocol {
    class info_answer_rank extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        rank: number;
        id: string;
        name: string;
        upScore: number;
        upTime: number;
        downScore: number;
        downTime: number;
        Score: number;
        time: number;
        okCount: number;
        upScore_changed: boolean;
        upTime_changed: boolean;
        downScore_changed: boolean;
        downTime_changed: boolean;
        Score_changed: boolean;
        time_changed: boolean;
        okCount_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 一种类型的答题数据
 */
declare module protocol {
    class info_answer extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        curID: number;
        curCostOk: number;
        curCostOkCount: number;
        overTime: number;
        count: number;
        okCount: number;
        beginTime: number;
        beginTime_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 神器激活信息
 */
declare module protocol {
    class info_artifact_active extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        days: number;
        redatestate: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class info_artifact extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        count: number;
        time: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 竞技数据
 */
declare module protocol {
    class info_athletics extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        surplus: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class info_auction_mission extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        missionID: number;
        itemID: Array<number>;
        itemID_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 求购行信息
 */
declare module protocol {
    class info_auction_purchase extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: string;
        totalprice: number;
        time: number;
        itemID: number;
        itemCount: number;
        name: string;
        currencyType: number;
        id_changed: boolean;
        totalprice_changed: boolean;
        time_changed: boolean;
        name_changed: boolean;
        currencyType_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 拍卖行相同类型物品的数量
 */
declare module protocol {
    class info_auction_type_count extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        itemId: number;
        count: number;
        dealPrice: number;
        dealPrice_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 拍卖行信息
 */
declare module protocol {
    class info_auction extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: string;
        maxprice: number;
        time: number;
        item: info_item;
        name: string;
        currencyType: number;
        id_changed: boolean;
        maxprice_changed: boolean;
        time_changed: boolean;
        name_changed: boolean;
        currencyType_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 奖励大厅数据
 */
declare module protocol {
    class info_award_hall extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        todaySignId: number;
        signDay: Array<number>;
        loginDay: number;
        totalSignDays: number;
        signAwardFlag: Array<number>;
        loginAwardFlag: Array<number>;
        loginAwardFlagEx: Array<number>;
        dailyOnlineTime: number;
        onlineAwardFlag: Array<number>;
        activeAwardFlag: Array<number>;
        signCount: number;
        signCountBuy: number;
        onlineWeekAward: number;
        onlineWeekTime: number;
        createRoleTime: number;
        infoArr: Array<info_resource_back>;
        openSeverWeekDay: number;
        leftArtifactSec: number;
        levelReachAwardFlag: Array<number>;
        signDay_changed: boolean;
        loginDay_changed: boolean;
        totalSignDays_changed: boolean;
        signAwardFlag_changed: boolean;
        loginAwardFlag_changed: boolean;
        loginAwardFlagEx_changed: boolean;
        dailyOnlineTime_changed: boolean;
        onlineAwardFlag_changed: boolean;
        activeAwardFlag_changed: boolean;
        signCount_changed: boolean;
        signCountBuy_changed: boolean;
        onlineWeekAward_changed: boolean;
        onlineWeekTime_changed: boolean;
        createRoleTime_changed: boolean;
        infoArr_changed: boolean;
        openSeverWeekDay_changed: boolean;
        leftArtifactSec_changed: boolean;
        levelReachAwardFlag_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 奖励物品的信息，显示用？
 */
declare module protocol {
    class info_award_item extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        baseID: number;
        count: number;
        bind: number;
        name: string;
        count_changed: boolean;
        bind_changed: boolean;
        name_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 宝箱状态
 */
declare module protocol {
    class info_award_state extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 生存战场信息
 */
declare module protocol {
    class info_battlefield extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        integral: number;
        roleId: string;
        job: number;
        time: number;
        rank: number;
        job_changed: boolean;
        time_changed: boolean;
        rank_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class info_black_mall extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 击杀boss掉落记录
 */
declare module protocol {
    class info_boss_drop_item extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        time: number;
        address: string;
        killerName: string;
        bossName: string;
        dropItemID: Array<number>;
        dropItemID_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * Boss刷新时间数组
 */
declare module protocol {
    class info_boss_refresh extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        groupID: number;
        bossID: number;
        refreshStateArray: Array<info_boss_state>;
        refreshStateArray_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * Boss刷新时间数组
 */
declare module protocol {
    class info_boss_state extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        mapID: number;
        bossState: boolean;
        refreshLeftTime: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 魔力瓶子信息
 */
declare module protocol {
    class info_bottle extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 无双卡开包数据
 */
declare module protocol {
    class info_brand_open extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        itemID: number;
        openPos: number;
        attrType: Array<number>;
        attrVal: Array<number>;
        attrType_changed: boolean;
        attrVal_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 无双卡开包数据
 */
declare module protocol {
    class info_brand_record extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        Name: string;
        itemID: number;
        attrType: Array<number>;
        attrVal: Array<number>;
        attrType_changed: boolean;
        attrVal_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 无双卡槽数据
 */
declare module protocol {
    class info_brand_slot extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        pos: number;
        name: string;
        name_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * BUFF信息
 */
declare module protocol {
    class info_buff extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        buffID: number;
        val: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 特权卡
 */
declare module protocol {
    class info_card extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        haveTime: number;
        isDailyGet: number;
        haveTime_changed: boolean;
        isDailyGet_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class info_challenge_boss extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        unitID: number;
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 挑战BOSS信息
 */
declare module protocol {
    class info_challenge_world_boss extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        team: number;
        mapID: number;
        bossArray: Array<info_challenge_boss>;
        bossArray_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 聊天等级限制_转生等级/等级/vip成就等级
 */
declare module protocol {
    class info_chat_limit extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        channel: number;
        level: number;
        reLevel: number;
        vipLevel: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 临时会话消息列表信息
 */
declare module protocol {
    class info_chat_secretTab extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleName: string;
        isOnline: number;
        sex: number;
        job: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 开服活动显示数据
 */
declare module protocol {
    class info_commercial_activity extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        container: number;
        sort: number;
        startTime: number;
        endTime: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 全民boss商业化开服
 */
declare module protocol {
    class info_commercial_all_boss extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        bossStateArr: Array<number>;
        awardState: number;
        bossStateArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 多条件列表
 */
declare module protocol {
    class info_condition_list extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        baseID: number;
        state: number;
        infoArray: Array<info_condition>;
        infoArray_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 任务条件数据
 */
declare module protocol {
    class info_condition extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        baseID: number;
        state: number;
        step: Array<number>;
        state_changed: boolean;
        step_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 消费返还
 */
declare module protocol {
    class info_condumption_return extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        day: number;
        val: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 开服活动-消费连击排行数据
 */
declare module protocol {
    class info_consume_rank extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        rank: number;
        name: string;
        consume: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 开服活动-连续充值
 */
declare module protocol {
    class info_contnuous_recharge extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        state: number;
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 建帮大业活动数据
 */
declare module protocol {
    class info_creatguild_activity extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        val: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步跨服玩法地图坐标（地图内全员）
 */
declare module protocol {
    class info_cross_map_coord_role extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleID: string;
        x: number;
        y: number;
        camp: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服饮酒角色排行榜
 */
declare module protocol {
    class info_cross_yinjiu_role_rank extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleId: string;
        roleName: string;
        time: number;
        roleRank: number;
        yinjiuCount: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服饮酒物品奖励信息
 */
declare module protocol {
    class info_cross_yinjiuItem extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        itemId: number;
        itemCount: number;
        itemBindType: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class info_dai_lian extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        ID: number;
        count: number;
        state: number;
        time: number;
        time_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 日常活动列表数据
 */
declare module protocol {
    class info_daily_activity extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        state: number;
        isShow: boolean;
        isShow_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 未知暗殿BOSS数据
 */
declare module protocol {
    class info_dark_temple_boss extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        unitID: number;
        state: number;
        revivedTime: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 色子信息
 */
declare module protocol {
    class info_dice extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        index: number;
        count: number;
        x: number;
        y: number;
        count_changed: boolean;
        x_changed: boolean;
        y_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 战斗伤害信息
 */
declare module protocol {
    class info_dmg extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        spriteID: number;
        atkSpriteID: number;
        type: number;
        val: number;
        skillID: number;
        atkVal: number;
        immueVal: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 个人掉落物信息
 */
declare module protocol {
    class info_drop_for_personal extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        spriteID: number;
        dropType: number;
        dropCount: number;
        dropItem: number;
        disappearTime: number;
        dropItem_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 掉落信息数组
 */
declare module protocol {
    class info_drop_log extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        time: number;
        bossID: number;
        roleName: string;
        roleID: string;
        mapID: number;
        dropItemID: number;
        ratioLog: number;
        itemPriority: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 精英BOSS数据
 */
declare module protocol {
    class info_elite_boss extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        state: number;
        revivedTime: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 开服活动-装备奖励
 */
declare module protocol {
    class info_equip_award_role extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        ID: number;
        awarderName: string;
        awardCount: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 装槽位精炼结构体
 */
declare module protocol {
    class info_equip_refine extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        pos: number;
        refineLv: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 装备槽位结构体
 */
declare module protocol {
    class info_equip_strengthen extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        pos: number;
        lv: number;
        wish: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 单件装备回收奖励记录结构
 */
declare module protocol {
    class info_equipaward_record extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        roleid: string;
        rolename: string;
        time: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class info_exp_refine extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        end_time: number;
        ref_lv: number;
        id: number;
        count: number;
        day: number;
        end_time_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 时装穿戴
 */
declare module protocol {
    class info_fashion_dress extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 时装穿戴显示状态
 */
declare module protocol {
    class info_fashion_show extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 时装数据
 */
declare module protocol {
    class info_fashion extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        expire: number;
        level: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * boss状态
 */
declare module protocol {
    class info_feast_boss extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        bossID: number;
        bossState: number;
        hpState: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 洪荒boss
 */
declare module protocol {
    class info_flood_shortage_boss extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        state: number;
        step: number;
        step_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 开服活动-基金信息
 */
declare module protocol {
    class info_foundation extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        idArr: Array<number>;
        activeTime: number;
        idArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 满减特惠限购次数信息
 */
declare module protocol {
    class info_full_discount_limit extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 满减特惠已使用信息
 */
declare module protocol {
    class info_full_discount extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 攻城战公会排行信息
 */
declare module protocol {
    class info_gcz_guild_rank extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        rank: number;
        guildID: number;
        guildName: string;
        guildLeader: string;
        guildLeader_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 宝石槽位激活状态
 */
declare module protocol {
    class info_gem_slot_open extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        equipId: number;
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 宝石槽位升级
 */
declare module protocol {
    class info_gem_slot extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        pos: number;
        lv: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 宝石套装属性
 */
declare module protocol {
    class info_gem_suit_info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 人物宝石信息
 */
declare module protocol {
    class info_gem extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        pos: number;
        itemid: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 成长礼包数据
 */
declare module protocol {
    class info_grow_gift extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        time: number;
        idArr: Array<number>;
        idArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会竞技
 */
declare module protocol {
    class info_guild_athletics extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        ID: string;
        rank: number;
        day: number;
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会成员审核列表
 */
declare module protocol {
    class info_guild_audit extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: string;
        guild: string;
        name: string;
        job: number;
        relevel: number;
        level: number;
        gender: number;
        onLine: number;
        combat: number;
        avatar: string;
        avatarFrame: string;
        guild_changed: boolean;
        name_changed: boolean;
        job_changed: boolean;
        relevel_changed: boolean;
        level_changed: boolean;
        gender_changed: boolean;
        onLine_changed: boolean;
        combat_changed: boolean;
        avatar_changed: boolean;
        avatarFrame_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class info_guild_boss_rank extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        name: string;
        hurt: number;
        rank: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会Boss
 */
declare module protocol {
    class info_guild_boss extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        bossID: number;
        growUp: number;
        time: number;
        exp: number;
        calltime: number;
        time_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class info_guild_boss2 extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        bossID: number;
        state: number;
        blood: number;
        blood1: number;
        bossID_changed: boolean;
        state_changed: boolean;
        blood_changed: boolean;
        blood1_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class info_guild_fack_boss extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        curHp: number;
        name: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮派禁地房间结构
 */
declare module protocol {
    class info_guild_forbid_area extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roomID: number;
        leaderID: string;
        job: number;
        sex: number;
        name: string;
        lv: number;
        state: number;
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会争霸
 */
declare module protocol {
    class info_guild_hegemony extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        name: string;
        number: number;
        chairman: Array<string>;
        assistant: Array<string>;
        elder: Array<string>;
        chairman_changed: boolean;
        assistant_changed: boolean;
        elder_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会详细信息
 */
declare module protocol {
    class info_guild_list extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: string;
        name: string;
        owner: string;
        notice: string;
        level: number;
        treasure: number;
        memberCount: number;
        audit: number;
        chairmanOnline: number;
        hotTag: number;
        levelLimit: number;
        rebirthLimit: number;
        power: number;
        name_changed: boolean;
        owner_changed: boolean;
        notice_changed: boolean;
        level_changed: boolean;
        treasure_changed: boolean;
        memberCount_changed: boolean;
        audit_changed: boolean;
        chairmanOnline_changed: boolean;
        hotTag_changed: boolean;
        levelLimit_changed: boolean;
        rebirthLimit_changed: boolean;
        power_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会日志列表
 */
declare module protocol {
    class info_guild_log extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        logType: number;
        donateValue: number;
        contribution: number;
        index: number;
        name: string;
        other: string;
        time: number;
        job: number;
        otherJob: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 全帮会限购信息
 */
declare module protocol {
    class info_guild_mall_limit extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        surplus: number;
        countLife: number;
        countGuildDay: number;
        countGuildLife: number;
        surplus_changed: boolean;
        countLife_changed: boolean;
        countGuildDay_changed: boolean;
        countGuildLife_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会成员信息
 */
declare module protocol {
    class info_guild_member extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: string;
        name: string;
        job: number;
        level: number;
        post: number;
        contribute: number;
        storageCon: number;
        offlineTime: number;
        contributeDay: number;
        contributeAll: number;
        tencentYellowLevel: number;
        tencentYellowSuper: number;
        tencentYellowYear: number;
        mapID: number;
        contributeWeek: number;
        cdCallTime: number;
        vipLv: number;
        gender: number;
        avatar: string;
        avatar_frame: string;
        fightPower: number;
        dayExp: number;
        allExp: number;
        name_changed: boolean;
        job_changed: boolean;
        level_changed: boolean;
        post_changed: boolean;
        contribute_changed: boolean;
        storageCon_changed: boolean;
        offlineTime_changed: boolean;
        contributeDay_changed: boolean;
        contributeAll_changed: boolean;
        tencentYellowLevel_changed: boolean;
        tencentYellowSuper_changed: boolean;
        tencentYellowYear_changed: boolean;
        mapID_changed: boolean;
        contributeWeek_changed: boolean;
        cdCallTime_changed: boolean;
        vipLv_changed: boolean;
        gender_changed: boolean;
        avatar_changed: boolean;
        avatar_frame_changed: boolean;
        fightPower_changed: boolean;
        dayExp_changed: boolean;
        allExp_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会红包
 */
declare module protocol {
    class info_guild_red extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        redID: string;
        count: number;
        total: number;
        blessing: string;
        sendRoleID: string;
        getRed: Array<info_red>;
        time: number;
        surplus: number;
        redtype: number;
        sex: number;
        name: string;
        getRed_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会个人信息数据
 */
declare module protocol {
    class info_guild_role extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: string;
        name: string;
        owner: string;
        notice: string;
        level: number;
        treasure: number;
        treasureEveryday: number;
        memberCount: number;
        auditCount: number;
        post: number;
        applyTime: number;
        storageCon: number;
        contribution: number;
        redState: number;
        rivalName: Array<string>;
        rivalTime: Array<number>;
        free: number;
        impeachState: number;
        impeachID: string;
        impeachTime: number;
        exp: number;
        isOpenBuild: number;
        buildCount: number;
        isAutoJoin: number;
        levelLimit: number;
        rebirthLimit: number;
        contributeTotal: number;
        stainFlag: string;
        warehouseLimit: number;
        dissolveTime: number;
        nextDissolvTime: number;
        donateCount: number;
        fightPower: number;
        id_changed: boolean;
        name_changed: boolean;
        owner_changed: boolean;
        notice_changed: boolean;
        level_changed: boolean;
        treasure_changed: boolean;
        treasureEveryday_changed: boolean;
        memberCount_changed: boolean;
        auditCount_changed: boolean;
        post_changed: boolean;
        applyTime_changed: boolean;
        storageCon_changed: boolean;
        contribution_changed: boolean;
        redState_changed: boolean;
        rivalName_changed: boolean;
        rivalTime_changed: boolean;
        free_changed: boolean;
        impeachState_changed: boolean;
        impeachID_changed: boolean;
        impeachTime_changed: boolean;
        exp_changed: boolean;
        isOpenBuild_changed: boolean;
        buildCount_changed: boolean;
        isAutoJoin_changed: boolean;
        levelLimit_changed: boolean;
        rebirthLimit_changed: boolean;
        contributeTotal_changed: boolean;
        stainFlag_changed: boolean;
        warehouseLimit_changed: boolean;
        dissolveTime_changed: boolean;
        nextDissolvTime_changed: boolean;
        donateCount_changed: boolean;
        fightPower_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会技能
 */
declare module protocol {
    class info_guild_skill extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        level: number;
        level_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class info_guildboss_award extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //英雄基础数据
 */
declare module protocol {
    class info_hero_base extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleID: number;
        tableID: number;
        gender: number;
        mode: number;
        gender_changed: boolean;
        mode_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 英雄神器结构
 */
declare module protocol {
    class info_hero_god_weapon extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        ID: number;
        lv: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 荣誉商店
 */
declare module protocol {
    class info_honor_mall extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 魂装信息
 */
declare module protocol {
    class info_hunzhuang extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        suitID: number;
        nextSuitStep: number;
        suitID_changed: boolean;
        nextSuitStep_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 开服活动-投资礼包
 */
declare module protocol {
    class info_invest_gift extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        day: number;
        awards: Array<number>;
        awards_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 物品信息
 */
declare module protocol {
    class info_item extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        pos: number;
        id: string;
        baseID: number;
        stack: number;
        bind: number;
        luck: number;
        energy: number;
        lockType: number;
        refineLv: number;
        intensifyLv: number;
        intensifyLvMax: number;
        exp: number;
        keyinBaseID: number;
        nonsuchID: Array<number>;
        nonsuchValue: Array<number>;
        count: number;
        time: number;
        limitTime: number;
        extendID: Array<number>;
        extendValue: Array<number>;
        aceIntensifyLv: number;
        aceIntensifyAttr: Array<info_role_attr>;
        aceIntensifyGoldCount: number;
        mapId: number;
        monsterId: number;
        killName: string;
        sourceType: number;
        ownerName: string;
        createTime: number;
        seals_infos: seals_info;
        id_changed: boolean;
        baseID_changed: boolean;
        stack_changed: boolean;
        bind_changed: boolean;
        luck_changed: boolean;
        energy_changed: boolean;
        lockType_changed: boolean;
        refineLv_changed: boolean;
        intensifyLv_changed: boolean;
        intensifyLvMax_changed: boolean;
        exp_changed: boolean;
        keyinBaseID_changed: boolean;
        nonsuchID_changed: boolean;
        nonsuchValue_changed: boolean;
        count_changed: boolean;
        time_changed: boolean;
        limitTime_changed: boolean;
        extendID_changed: boolean;
        extendValue_changed: boolean;
        aceIntensifyLv_changed: boolean;
        aceIntensifyAttr_changed: boolean;
        aceIntensifyGoldCount_changed: boolean;
        mapId_changed: boolean;
        monsterId_changed: boolean;
        killName_changed: boolean;
        sourceType_changed: boolean;
        ownerName_changed: boolean;
        createTime_changed: boolean;
        seals_infos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 经验副本同步数据
 */
declare module protocol {
    class info_jing_yan_load extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        ID: number;
        isCanSweep: boolean;
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 键值对
 */
declare module protocol {
    class info_key_value_pair extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        key: number;
        val: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 首杀排名信息
 */
declare module protocol {
    class info_kill_boss_rank extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleName: string;
        rank: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 开服活动-boss先杀
 */
declare module protocol {
    class info_kill_boss_role extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        ID: number;
        rank_list: Array<info_kill_boss_rank>;
        get_flag: number;
        rank_list_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class info_kill_boss extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        killflag: number;
        getflag: number;
        roleId: string;
        name: string;
        time: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 热血矿区
 */
declare module protocol {
    class info_kuang_maps extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        index: number;
        mapId: number;
        val: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class info_lianhun extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        tableID: number;
        lianhunID: number;
        open: number;
        lv: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 节日活动-全民抢购
 */
declare module protocol {
    class info_limit_buy extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        surplus: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class info_limit_minssion_award_flag extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        flag: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 日常限时活跃活动信息
 */
declare module protocol {
    class info_limitactivity extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        activityIDarr: number;
        openTime: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 奖励物品信息
 */
declare module protocol {
    class info_mail_award_item extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        itemBaseID: number;
        itemCount: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 邮件点击时间戳
 */
declare module protocol {
    class info_mail_click_time_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        click_time: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 邮件信息
 */
declare module protocol {
    class info_mail extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        mailID: string;
        roleID: string;
        mailType: number;
        sender: string;
        title: string;
        content: string;
        itemList: Array<info_mail_award_item>;
        itemListEx: Array<info_item>;
        awardGoldFree: number;
        awardGoldBind: number;
        awardVIPPointFree: number;
        awardVIPPointBind: number;
        timePoint: number;
        received: number;
        state: number;
        roleAvatar: string;
        roleAvatarFrame: string;
        itemList_changed: boolean;
        itemListEx_changed: boolean;
        roleAvatar_changed: boolean;
        roleAvatarFrame_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 经验炼制记录
 */
declare module protocol {
    class info_makeexp extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        type: number;
        leftsec: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class info_mall_buy_limit extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        surplus: number;
        lifeCount: number;
        surplus_changed: boolean;
        lifeCount_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 商店类刷新信息
 */
declare module protocol {
    class info_mall_refresh extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        mallType: number;
        moneyType: number;
        moneyValue: number;
        refreshTime: number;
        refreshNum: number;
        refreshMaxNum: number;
        refreshTime_changed: boolean;
        refreshNum_changed: boolean;
        refreshMaxNum_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领地战帮会占领数据
 */
declare module protocol {
    class info_manor_battle extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        manorId: number;
        guildId: string;
        guildName: string;
        leaderName: string;
        guildId_changed: boolean;
        guildName_changed: boolean;
        leaderName_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入地图CD
 */
declare module protocol {
    class info_map_enter_active_cd extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        mapID: number;
        enterCount: number;
        time: number;
        activeID: number;
        serverType: number;
        bCheckServerType: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 侍卫返利信息
 */
declare module protocol {
    class info_mars_rebate extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        marsID: number;
        time: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 侍卫信息
 */
declare module protocol {
    class info_mars extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        ID: number;
        level: number;
        Count: number;
        isCombat: boolean;
        recoverTime: number;
        attackTime: number;
        isCombatinfo: boolean;
        spriteID: number;
        level_changed: boolean;
        Count_changed: boolean;
        isCombat_changed: boolean;
        recoverTime_changed: boolean;
        attackTime_changed: boolean;
        isCombatinfo_changed: boolean;
        spriteID_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 匹配组队信息
 */
declare module protocol {
    class info_match_team extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleID: string;
        name: string;
        sex: number;
        job: number;
        lv: number;
        caption: number;
        team: number;
        killCount: number;
        deadCount: number;
        roomID: number;
        name_changed: boolean;
        sex_changed: boolean;
        job_changed: boolean;
        lv_changed: boolean;
        caption_changed: boolean;
        team_changed: boolean;
        killCount_changed: boolean;
        deadCount_changed: boolean;
        roomID_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 材料副本信息
 */
declare module protocol {
    class info_materials extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        count: number;
        tolcount: number;
        difficultyId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 消费豪礼排名数据
 */
declare module protocol {
    class info_merger_consume_rank extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleId: string;
        name: string;
        rank: number;
        money: number;
        money_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 宝藏广播信息
 */
declare module protocol {
    class info_mine_radio extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleid: string;
        name: string;
        itemid: number;
        itemnum: number;
        goodattr: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服moba匹配同步游戏服
 */
declare module protocol {
    class info_moba_match extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        guid: number;
        camp: number;
        roleID: string;
        crossID: number;
        crossIp: string;
        port: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 匹配游戏结束后玩家游戏的结果
 */
declare module protocol {
    class info_moba_role_result extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleID: string;
        oldServerNum: number;
        isWin: number;
        isMvp: boolean;
        winProbability: number;
        failProbability: number;
        winProbability_changed: boolean;
        failProbability_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * boss坐标等
 */
declare module protocol {
    class info_monster_base extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        posX: number;
        posY: number;
        type: number;
        type_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 合服活动-神秘商店
 */
declare module protocol {
    class info_mystical_story extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        state: number;
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 招财进宝 name 获得count
 */
declare module protocol {
    class info_name_count extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        name: string;
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 全民红包人物数据
 */
declare module protocol {
    class info_national_red extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleID: string;
        name: string;
        num: number;
        type: number;
        sex: number;
        job: number;
        sex_changed: boolean;
        job_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 离线经验信息
 */
declare module protocol {
    class info_offline_drill_item extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步物品属性信息
 */
declare module protocol {
    class info_offline_drill_update_item extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        itemId: number;
        itemCount: number;
        itemLevel: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 开服活动-领取记录（结构）
 */
declare module protocol {
    class info_os_award_record extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        time: number;
        roleName: string;
        rank: number;
        funName: string;
        money: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 已通关副本信息
 */
declare module protocol {
    class info_passed_fuben extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        id: Array<number>;
        id_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class info_plot extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        funcID: number;
        param1: number;
        param2: number;
        param3: number;
        funcID_changed: boolean;
        param1_changed: boolean;
        param2_changed: boolean;
        param3_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 预购信息
 */
declare module protocol {
    class info_preorder extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        orderID: number;
        orderType: number;
        hasBuy: boolean;
        gotFlag: Array<number>;
        buyFlag: Array<number>;
        gotFlag_changed: boolean;
        buyFlag_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 个人BOSS数据
 */
declare module protocol {
    class info_private_boss extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        count: number;
        refreshTime: number;
        passState: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 个人副本数据
 */
declare module protocol {
    class info_private_clone extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        count: number;
        star: number;
        award: boolean;
        count_changed: boolean;
        star_changed: boolean;
        award_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 玩家收益的信息
 */
declare module protocol {
    class info_profit extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        val: number;
        count: number;
        showType: number;
        text: string;
        text_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class info_qi_fu extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 切割信息
 */
declare module protocol {
    class info_qiege extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        qiegeLv: number;
        qiegeDmg: number;
        qiegeBaoji: number;
        qiegeBaojiDmg: number;
        qiegeExtralv: number;
        qiegeLv_changed: boolean;
        qiegeDmg_changed: boolean;
        qiegeBaoji_changed: boolean;
        qiegeBaojiDmg_changed: boolean;
        qiegeExtralv_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 应答单位对话面板
 */
declare module protocol {
    class role_click_sprite_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        spriteID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 全民红包荣誉榜
 */
declare module protocol {
    class info_rank_national_red extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        rank: number;
        name: string;
        num: number;
        roleID: string;
        num_changed: boolean;
        roleID_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 七天狂欢充值竞技
 */
declare module protocol {
    class info_recharge_rank extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        name: string;
        rank: number;
        money: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class info_record_equip extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleId: string;
        itemId: number;
        time: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会红包结构
 */
declare module protocol {
    class info_red extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        getRoleID: string;
        getCount: number;
        name: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 留言信息
 */
declare module protocol {
    class info_relation_message extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        group: number;
        tarageName: string;
        replyName: string;
        message: string;
        time: number;
        headID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 复仇日志信息
 */
declare module protocol {
    class info_relation_revengeLog extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        time: number;
        name: string;
        mapName: string;
        isKill: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 遗物
 */
declare module protocol {
    class info_relic extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        source: number;
        target: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 资源找回数据
 */
declare module protocol {
    class info_resource_back extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class info_ring_gift extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 角色战斗信息
 */
declare module protocol {
    class info_role_attr extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        val: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 角色基础信息
 */
declare module protocol {
    class info_role_base extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleID: string;
        name: string;
        gender: number;
        job: number;
        subJob: number;
        configSkill: string;
        configAssist: string;
        teamMode: number;
        autoAcceptFriendInvite: boolean;
        shameStain: info_shame_stain;
        onGameTime: number;
        showBoard: boolean;
        relevelUse: number;
        pkMode: number;
        privilege: number;
        alliance: number;
        energyVal: number;
        avatar: string;
        avatar_frame: string;
        name_changed: boolean;
        gender_changed: boolean;
        job_changed: boolean;
        subJob_changed: boolean;
        configSkill_changed: boolean;
        configAssist_changed: boolean;
        teamMode_changed: boolean;
        autoAcceptFriendInvite_changed: boolean;
        shameStain_changed: boolean;
        onGameTime_changed: boolean;
        showBoard_changed: boolean;
        relevelUse_changed: boolean;
        pkMode_changed: boolean;
        privilege_changed: boolean;
        alliance_changed: boolean;
        energyVal_changed: boolean;
        avatar_changed: boolean;
        avatar_frame_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步角色身上矿的信息
 */
declare module protocol {
    class info_role_kuang extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        spriteID: number;
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 排行榜数据
 */
declare module protocol {
    class info_role_rank extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleID: string;
        roleName: string;
        job: number;
        sub_job: number;
        gender: number;
        lv: number;
        lv_r: number;
        guildName: string;
        rank: number;
        rankVal1: number;
        rankVal2: number;
        tencentYellowLevel: number;
        tencentYellowSuper: number;
        tencentYellowYear: number;
        xunleiVipLevel: number;
        xunleiVipYear: number;
        avatar: string;
        avatar_frame: string;
        vip_achi_lv: number;
        rankVal1_changed: boolean;
        rankVal2_changed: boolean;
        tencentYellowLevel_changed: boolean;
        tencentYellowSuper_changed: boolean;
        tencentYellowYear_changed: boolean;
        xunleiVipLevel_changed: boolean;
        xunleiVipYear_changed: boolean;
        avatar_changed: boolean;
        avatar_frame_changed: boolean;
        vip_achi_lv_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 角色关系数据
 */
declare module protocol {
    class info_role_relation extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        targetID: string;
        name: string;
        val: number;
        level: number;
        reLevel: number;
        job: number;
        gender: number;
        relationType: number;
        online: number;
        GuildName: string;
        attack: number;
        avatar: string;
        avatar_frame: string;
        signature: string;
        titleName: number;
        name_changed: boolean;
        val_changed: boolean;
        level_changed: boolean;
        reLevel_changed: boolean;
        job_changed: boolean;
        gender_changed: boolean;
        relationType_changed: boolean;
        online_changed: boolean;
        GuildName_changed: boolean;
        attack_changed: boolean;
        avatar_changed: boolean;
        avatar_frame_changed: boolean;
        signature_changed: boolean;
        titleName_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class info_role_shitu extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        targetID: string;
        name: string;
        level: number;
        reLevel: number;
        job: number;
        gender: number;
        relationType: number;
        online: number;
        xunleiVipLevel: number;
        xunleiVipYear: number;
        avatar: string;
        avatar_frame: string;
        name_changed: boolean;
        level_changed: boolean;
        reLevel_changed: boolean;
        job_changed: boolean;
        gender_changed: boolean;
        relationType_changed: boolean;
        online_changed: boolean;
        xunleiVipLevel_changed: boolean;
        xunleiVipYear_changed: boolean;
        avatar_changed: boolean;
        avatar_frame_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 角色展示数据,当前英雄展示信息也使用的是这个结构
 */
declare module protocol {
    class info_role_show extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleID: string;
        roleName: string;
        guildName: string;
        positionID: number;
        level: number;
        level_r: number;
        vip_achi_lv: number;
        gender: number;
        job: number;
        sub_job: number;
        wing: number;
        fashionWeapon: number;
        fashionClothes: number;
        fashionWing: number;
        itemInfo: Array<info_item>;
        equipInfo: Array<info_equip_strengthen>;
        equipRefine: Array<info_equip_refine>;
        gemSlots: Array<info_gem_slot>;
        smelterInfo: Array<info_smelter>;
        medalLv: number;
        tencentYellowLevel: number;
        tencentYellowSuper: number;
        tencentYellowYear: number;
        xunleiVipLevel: number;
        xunleiVipYear: number;
        pkValue: number;
        stainFlag: string;
        avatar: string;
        avatar_frame: string;
        comboSkillID: number;
        heroDHSuitID: number;
        equipRefineChainLv: number;
        gemSuitLv: number;
        strenSuitLv: number;
        suitInfoArr: Array<info_suit>;
        dragonveinLv: Array<number>;
        warimprintInfo: info_warimprint;
        qiegeInfo: info_qiege;
        shenwuInfo: info_shenwu;
        hunzhuangInfo: Array<info_hunzhuang>;
        tejieInfo: Array<info_tejie>;
        shengxiaoInfo: role_show_shengxiao_info;
        roleName_changed: boolean;
        guildName_changed: boolean;
        positionID_changed: boolean;
        level_changed: boolean;
        level_r_changed: boolean;
        vip_achi_lv_changed: boolean;
        gender_changed: boolean;
        job_changed: boolean;
        sub_job_changed: boolean;
        wing_changed: boolean;
        fashionWeapon_changed: boolean;
        fashionClothes_changed: boolean;
        fashionWing_changed: boolean;
        itemInfo_changed: boolean;
        equipInfo_changed: boolean;
        equipRefine_changed: boolean;
        gemSlots_changed: boolean;
        smelterInfo_changed: boolean;
        medalLv_changed: boolean;
        tencentYellowLevel_changed: boolean;
        tencentYellowSuper_changed: boolean;
        tencentYellowYear_changed: boolean;
        xunleiVipLevel_changed: boolean;
        xunleiVipYear_changed: boolean;
        pkValue_changed: boolean;
        stainFlag_changed: boolean;
        avatar_changed: boolean;
        avatar_frame_changed: boolean;
        comboSkillID_changed: boolean;
        heroDHSuitID_changed: boolean;
        equipRefineChainLv_changed: boolean;
        gemSuitLv_changed: boolean;
        strenSuitLv_changed: boolean;
        suitInfoArr_changed: boolean;
        dragonveinLv_changed: boolean;
        warimprintInfo_changed: boolean;
        qiegeInfo_changed: boolean;
        shenwuInfo_changed: boolean;
        hunzhuangInfo_changed: boolean;
        tejieInfo_changed: boolean;
        shengxiaoInfo_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 角色简单信息
 */
declare module protocol {
    class info_role_simple extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleID: string;
        level: number;
        name: string;
        gender: number;
        job: number;
        subJob: number;
        newRLevel: number;
        newRLevel_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 武魂信息
 */
declare module protocol {
    class info_role_warrior_soul extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        level: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 角色保存数据
 */
declare module protocol {
    class info_save_canfig extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        val: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 沙城战申请列表数据
 */
declare module protocol {
    class info_sha_cheng_apply extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        guildId: string;
        guildName: string;
        guildLevel: number;
        guildMemberNum: number;
        guildLeader: string;
        guildLeader_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 沙城战参与信息
 */
declare module protocol {
    class info_sha_cheng_join extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        guildId: string;
        guildName: string;
        guildLeader: string;
        camp: number;
        guildId_changed: boolean;
        guildName_changed: boolean;
        guildLeader_changed: boolean;
        camp_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 沙城占领帮会成员
 */
declare module protocol {
    class info_sha_cheng_member extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        position: number;
        info: info_role_show;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 羞辱血痕数据
 */
declare module protocol {
    class info_shame_stain extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        stainFlag: string;
        time: number;
        killerName: string;
        killerGuild: string;
        isBeKill: number;
        time_changed: boolean;
        killerName_changed: boolean;
        killerGuild_changed: boolean;
        isBeKill_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 神武信息
 */
declare module protocol {
    class info_shenwu extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        shenwuLv: number;
        shenwuValue: number;
        shenwuRank: number;
        shenwuLv_changed: boolean;
        shenwuValue_changed: boolean;
        shenwuRank_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 师徒任务结构
 */
declare module protocol {
    class info_shitu_award extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 师徒
 */
declare module protocol {
    class info_shitu_nearly_player extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        roleId: string;
        roleName: string;
        roleJob: number;
        roleLevel: number;
        guildName: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 生化战场活动排名数据
 */
declare module protocol {
    class info_shzc_rank extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleName: string;
        rank: number;
        job: number;
        level: number;
        rankValue: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class info_skill_enhance extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        skillCategory: number;
        idArr: Array<number>;
        idArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 技能信息
 */
declare module protocol {
    class info_skill extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        skillID: number;
        cd: number;
        enable: boolean;
        proficiency: number;
        cd_changed: boolean;
        enable_changed: boolean;
        proficiency_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 神炉信息
 */
declare module protocol {
    class info_smelter extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        ID: number;
        level: number;
        wish: number;
        exp: number;
        ID_changed: boolean;
        level_changed: boolean;
        wish_changed: boolean;
        exp_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 精灵视图基础信息
 */
declare module protocol {
    class info_sprite_base extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        x: number;
        y: number;
        dir: number;
        camp: number;
        campColor: number;
        serviceCamp: number;
        serviceCampColor: number;
        x_changed: boolean;
        y_changed: boolean;
        dir_changed: boolean;
        camp_changed: boolean;
        campColor_changed: boolean;
        serviceCamp_changed: boolean;
        serviceCampColor_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步精灵BUFF信息
 */
declare module protocol {
    class info_sprite_buff extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: Array<info_buff>;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 精灵的掉落信息
 */
declare module protocol {
    class info_sprite_drop extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        dropType: number;
        dropCount: number;
        dropItem: number;
        hitSpriteIDArr: Array<number>;
        ownerTeam: boolean;
        ownerID: number;
        leftTime: number;
        dropItem_changed: boolean;
        hitSpriteIDArr_changed: boolean;
        ownerTeam_changed: boolean;
        ownerID_changed: boolean;
        leftTime_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //英雄精灵信息
 */
declare module protocol {
    class info_sprite_hero extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        heroID: number;
        job: number;
        gender: number;
        weapon: number;
        clothes: number;
        wing: number;
        heroLevel: number;
        ownerId: string;
        ownerName: string;
        guildName: string;
        heroID_changed: boolean;
        job_changed: boolean;
        gender_changed: boolean;
        weapon_changed: boolean;
        clothes_changed: boolean;
        wing_changed: boolean;
        heroLevel_changed: boolean;
        ownerId_changed: boolean;
        ownerName_changed: boolean;
        guildName_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 角色精灵信息
 */
declare module protocol {
    class info_sprite_role extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleID: string;
        job: number;
        subJob: number;
        gender: number;
        title: number;
        weapon: number;
        clothes: number;
        wing: number;
        suit: number;
        current_show_wing: number;
        name: string;
        isGM: boolean;
        fashionWeapon: number;
        fashionClothes: number;
        fashionWing: number;
        shameStain: info_shame_stain;
        privilege: number;
        headItem: number;
        officeID: number;
        guildpost: number;
        guildId: string;
        guildName: string;
        allianceGuild: string;
        avatar: string;
        avatar_frame: string;
        gem_infos: Array<info_gem_slot>;
        show_skill_fashion_arr: Array<show_skill_fashion>;
        roleID_changed: boolean;
        job_changed: boolean;
        subJob_changed: boolean;
        gender_changed: boolean;
        title_changed: boolean;
        weapon_changed: boolean;
        clothes_changed: boolean;
        wing_changed: boolean;
        suit_changed: boolean;
        current_show_wing_changed: boolean;
        name_changed: boolean;
        isGM_changed: boolean;
        fashionWeapon_changed: boolean;
        fashionClothes_changed: boolean;
        fashionWing_changed: boolean;
        shameStain_changed: boolean;
        privilege_changed: boolean;
        headItem_changed: boolean;
        officeID_changed: boolean;
        guildpost_changed: boolean;
        guildId_changed: boolean;
        guildName_changed: boolean;
        allianceGuild_changed: boolean;
        avatar_changed: boolean;
        avatar_frame_changed: boolean;
        gem_infos_changed: boolean;
        show_skill_fashion_arr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 精灵视图NPC信息
 */
declare module protocol {
    class info_sprite_unit extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        unitID: number;
        activeTime: number;
        scriptUIType: number;
        clickState: number;
        level: number;
        ownerID: number;
        ownerName: string;
        ownerGuildName: string;
        targetName: string;
        pickUpName: string;
        killerName: string;
        skinid: number;
        titleID: number;
        marsMabiRate: number;
        isCanCollect: boolean;
        unitID_changed: boolean;
        activeTime_changed: boolean;
        scriptUIType_changed: boolean;
        clickState_changed: boolean;
        level_changed: boolean;
        ownerID_changed: boolean;
        ownerName_changed: boolean;
        ownerGuildName_changed: boolean;
        targetName_changed: boolean;
        pickUpName_changed: boolean;
        killerName_changed: boolean;
        skinid_changed: boolean;
        titleID_changed: boolean;
        marsMabiRate_changed: boolean;
        isCanCollect_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 精灵可见信息
 */
declare module protocol {
    class info_sprite extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        spriteID: number;
        spriteType: number;
        attrArr: Array<info_role_attr>;
        spriteBase: info_sprite_base;
        spriteRole: info_sprite_role;
        spriteUnit: info_sprite_unit;
        spriteBuff: info_sprite_buff;
        spriteDrop: info_sprite_drop;
        spriteHero: info_sprite_hero;
        book_soul_airing_tbid: Array<number>;
        spriteType_changed: boolean;
        attrArr_changed: boolean;
        spriteBase_changed: boolean;
        spriteRole_changed: boolean;
        spriteUnit_changed: boolean;
        spriteBuff_changed: boolean;
        spriteDrop_changed: boolean;
        spriteHero_changed: boolean;
        book_soul_airing_tbid_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 物品的交易信息
 */
declare module protocol {
    class info_stall_record extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: string;
        name: string;
        type: number;
        sum: number;
        itemName: string;
        itemCount: number;
        id_changed: boolean;
        name_changed: boolean;
        type_changed: boolean;
        sum_changed: boolean;
        itemName_changed: boolean;
        itemCount_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class info_stall_view extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        itemID: string;
        type: number;
        cost: number;
        del: number;
        item: info_item;
        itemID_changed: boolean;
        type_changed: boolean;
        cost_changed: boolean;
        del_changed: boolean;
        item_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领奖信息
 */
declare module protocol {
    class info_strongest_award extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        roleid: string;
        val: number;
        roleid_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 套装限时收集对象信息
 */
declare module protocol {
    class info_suit_collect extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        roleid: Array<string>;
        isGet: Array<boolean>;
        roleid_changed: boolean;
        isGet_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 套装数据
 */
declare module protocol {
    class info_suit extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 至尊宝藏章节信息
 */
declare module protocol {
    class info_supremacy_treasure extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        sectionId: number;
        tasks: Array<info_condition>;
        tasks_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 投降信息
 */
declare module protocol {
    class info_surrender extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleID: string;
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class info_SXMB extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 天赋数据
 */
declare module protocol {
    class info_talent extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        num: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 组队副本预备状态数据
 */
declare module protocol {
    class info_team_clone_ready extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleID: string;
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 组队副本数据
 */
declare module protocol {
    class info_team_clone extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        leaderRoleID: string;
        targetID: number;
        teamInfos: Array<info_team_member>;
        teamInfos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class info_team_map_coord extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleID: string;
        x: number;
        y: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 队伍成员信息(注:队伍当前血量信息是两个int值计算的一个long值,最大血量是三个值计算的。建议使用int64类型)
 */
declare module protocol {
    class info_team_member extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleId: string;
        roleName: string;
        guildName: string;
        roleJob: number;
        roleGender: number;
        roleLevel: number;
        mapId: number;
        online: number;
        hp: number;
        hp1: number;
        maxhp: number;
        maxhp1: number;
        excellentMaxHpVal: number;
        avatar: string;
        avatar_frame: string;
        vip: number;
        roleName_changed: boolean;
        guildName_changed: boolean;
        roleJob_changed: boolean;
        roleGender_changed: boolean;
        roleLevel_changed: boolean;
        mapId_changed: boolean;
        online_changed: boolean;
        hp_changed: boolean;
        hp1_changed: boolean;
        maxhp_changed: boolean;
        maxhp1_changed: boolean;
        excellentMaxHpVal_changed: boolean;
        avatar_changed: boolean;
        avatar_frame_changed: boolean;
        vip_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 附近玩家信息
 */
declare module protocol {
    class info_team_nearly_player extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleId: string;
        roleName: string;
        roleJob: number;
        roleLevel: number;
        gender: number;
        guildName: string;
        serverNum: number;
        serverNum_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 队员准备信息
 */
declare module protocol {
    class info_team_ready extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleId: string;
        ready: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 队伍详细信息
 */
declare module protocol {
    class info_team extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        list: Array<info_team_member>;
        leaderID: string;
        targetID: number;
        list_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class info_teamectype_room extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roomid: number;
        name: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class info_teamectype_roomdata extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleid: string;
        rolename: string;
        level: number;
        power: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 特戒信息
 */
declare module protocol {
    class info_tejie extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        tejieID: number;
        tejieLevel: number;
        tejieID_changed: boolean;
        tejieLevel_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class info_title extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        titleID: number;
        dueTime: number;
        notShowRed: boolean;
        notShowRed_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 通天塔记录
 */
declare module protocol {
    class info_tong_tian_tower_radio extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleid: string;
        name: string;
        optType: number;
        itemid: number;
        moneyNum: number;
        itemName: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 我要变强-功能战斗力
 */
declare module protocol {
    class info_toStrong_atk extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        val: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class info_toStrong extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        Type: number;
        Val: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //副本排行信息
 */
declare module protocol {
    class info_transcript_rank extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        rank: number;
        roleName: string;
        integral: number;
        integral2: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 命运轮盘单个奖励信息
 */
declare module protocol {
    class info_turn_award extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        index: number;
        tableid: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 神秘转盘道具
 */
declare module protocol {
    class info_turntable_item extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        posId: number;
        id: number;
        num: number;
        bind: number;
        got: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 转盘积分商城
 */
declare module protocol {
    class info_turntable_mall_item extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        goodsId: number;
        state: number;
        price: number;
        discount: number;
        canBuyNum: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 神装信息
 */
declare module protocol {
    class info_warimprint extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        shenzhuangLvArr: Array<number>;
        shenYouLv: number;
        shenzhuangLvArr_changed: boolean;
        shenYouLv_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 翅膀技能
 */
declare module protocol {
    class info_wing_skill extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        level: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 世界BOSS信息
 */
declare module protocol {
    class info_world_boss extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        state: number;
        revivedTime: number;
        revivedTime_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 无双战日志结构
 */
declare module protocol {
    class info_wu_shuang_battle_log extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        timestamp: number;
        guildName: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 无双战帮会积分
 */
declare module protocol {
    class info_wu_shuang_scene_rank extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        guildName: string;
        score: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 旋云之巅信息
 */
declare module protocol {
    class info_xuan_yun_zhi_dian extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleName: string;
        hurtVal: number;
        rank: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 远古神殿排行信息
 */
declare module protocol {
    class info_ygsd_rank extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        rank: number;
        roleName: string;
        hurtYiyi: number;
        hurtRem: number;
        joinSec: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 遗忘秘境帮会排名
 */
declare module protocol {
    class info_yi_wang_mi_jing_rank extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        guildName: string;
        score: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 幽灵船活动排名数据
 */
declare module protocol {
    class info_ylc_rank extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleName: string;
        rank: number;
        job: number;
        level: number;
        rankValue: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 全民站街
 */
declare module protocol {
    class info_zhanjie_award extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        taskId: number;
        taskState: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class info_zhuanpan_rank extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        rank: number;
        roleID: string;
        roleName: string;
        money: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 激活礼包
 */
declare module protocol {
    class invest_active_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class invest_active_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取礼包
 */
declare module protocol {
    class invest_getaward_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class invest_getaward_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class invest_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infos: Array<info_invest_gift>;
        infos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求点击单位
 */
declare module protocol {
    class role_click_sprite_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        spriteID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class role_change_sex_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class role_change_sex_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        itemId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回添加物品请求
 */
declare module protocol {
    class item_add_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: Array<info_item>;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 背包格子开启
 */
declare module protocol {
    class item_bag_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        count: number;
        time: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 开启背包格子请求
 */
declare module protocol {
    class item_bag_open_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 开启背包格子回复
 */
declare module protocol {
    class item_bag_open_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        idArr: Array<number>;
        idArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回修改物品的相关属性请求
 */
declare module protocol {
    class item_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: Array<info_item>;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 查看聊天装备请求
 */
declare module protocol {
    class item_chat_show_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        itemID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 查看聊天装备回复
 */
declare module protocol {
    class item_chat_show_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        info: info_item;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 装备升级请求
 */
declare module protocol {
    class item_compound_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        ID: number;
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 装备升级回复
 */
declare module protocol {
    class item_compound_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 删除物品请求
 */
declare module protocol {
    class item_del_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        pos: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 删除物品请求
 */
declare module protocol {
    class item_del_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        pos: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回删除物品请求
 */
declare module protocol {
    class item_del_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        pos: Array<number>;
        pos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 物品宝箱开启获取物品通知
 */
declare module protocol {
    class item_gift_bag_open_notify extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        sourceItemId: number;
        awardItemIds: Array<number>;
        awarditemCounts: Array<number>;
        awardItemIds_changed: boolean;
        awarditemCounts_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 获得物品列表
 */
declare module protocol {
    class item_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        infoArr: Array<info_item>;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 物品调整位置请求
 */
declare module protocol {
    class item_move_all_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回调整物品位置请求
 */
declare module protocol {
    class item_move_all_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 移动所有物品
 */
declare module protocol {
    class item_move_all_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        sourceArry: Array<number>;
        targetArry: Array<number>;
        sourceArry_changed: boolean;
        targetArry_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 物品调整位置请求
 */
declare module protocol {
    class item_move_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        source: number;
        target: number;
        bAutoUese: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回调整物品位置请求
 */
declare module protocol {
    class item_move_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回调整物品位置请求
 */
declare module protocol {
    class item_move_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        source: number;
        target: number;
        bAutoUse: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求玩家回收偏好
 */
declare module protocol {
    class item_recycle_log_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 回复玩家回收行为
 */
declare module protocol {
    class item_recycle_log_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        num: Array<number>;
        num_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 记录玩家爱回收偏好
 */
declare module protocol {
    class item_recycle_record_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        num: Array<number>;
        num_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class item_recycle_record_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 回收请求
 */
declare module protocol {
    class item_recycle_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        pos: Array<number>;
        pos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回回收请求状态
 */
declare module protocol {
    class item_recycle_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        showValue: string;
        pos: Array<number>;
        pos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 物品分解
 */
declare module protocol {
    class item_resolve_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        num: number;
        pos: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 物品分解回复
 */
declare module protocol {
    class item_resolve_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 物品拆分请求
 */
declare module protocol {
    class item_split_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        pos: number;
        num: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回物品拆分请求
 */
declare module protocol {
    class item_split_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 物品整理，包括背包和仓库。
 */
declare module protocol {
    class item_tidy_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        sortType: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //使用元宝物品开启宝箱
 */
declare module protocol {
    class item_use_open_box_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        pos: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 开启洪福超级宝箱
 */
declare module protocol {
    class item_use_open_box_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 物品使用
 */
declare module protocol {
    class item_use_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        pos: number;
        count: number;
        param: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 物品使用情况
 */
declare module protocol {
    class item_use_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        baseID: number;
        surplus: number;
        surplus_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 使用一件物品改变另一件物品
 */
declare module protocol {
    class item_use_to_target_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        sourcePos: number;
        targetPos: number;
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 某个人被禁言
 */
declare module protocol {
    class jin_yan_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleid: string;
        rolename: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 经验副本奖励请求
 */
declare module protocol {
    class jing_yan_fu_ben_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        configId: number;
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 经验副本奖励返回
 */
declare module protocol {
    class jing_yan_fu_ben_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入经验副本请求
 */
declare module protocol {
    class jing_yan_fu_ben_enter_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        configId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入经验副本返回
 */
declare module protocol {
    class jing_yan_fu_ben_enter_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class jing_yan_fu_ben_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        jingyanInfos: Array<info_jing_yan_load>;
        jingyanInfos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class jing_yan_fu_ben_result_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        flag: boolean;
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 经验副本扫荡请求
 */
declare module protocol {
    class jing_yan_fu_ben_sweep_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        Id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 经验副本扫荡返回
 */
declare module protocol {
    class jing_yan_fu_ben_sweep_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class jing_yan_new_get_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class jing_yan_new_get_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class jing_yan_new_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        wave: number;
        itemid: number;
        itemCount: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class jing_yan_new_mars_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class jing_yan_new_scence_info_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        wave: number;
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class jing_yan_new_sweep_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class jing_yan_new_sweep_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 更改返回值
 */
declare module protocol {
    class role_change_avatar_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 角色更改头像或者头像框
 */
declare module protocol {
    class role_change_avatar_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        avatar: string;
        avatar_frame: string;
        avatar_changed: boolean;
        avatar_frame_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 更新buff信息
 */
declare module protocol {
    class role_buff_update_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        spriteID: number;
        info: info_buff;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 删除buff
 */
declare module protocol {
    class role_buff_remove_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        spriteID: number;
        buffID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 角色属性同步
 */
declare module protocol {
    class role_base_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: info_role_base;
    }
}
/**
 * File is automatically generated, Please do not modify
 * // 返回选角界面返回消息
 */
declare module protocol {
    class role_back_select_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * // 客户端请求返回选角界面
 */
declare module protocol {
    class role_back_select_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 角色战斗信息同步
 */
declare module protocol {
    class role_attr_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        attrArr: Array<info_role_attr>;
        attrArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步攻击动作
 */
declare module protocol {
    class role_atk_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        spriteID: number;
        spritePos: number;
        skillID: number;
        dir: number;
        atkType: number;
        atkVal: Array<number>;
        spriteID_changed: boolean;
        dir_changed: boolean;
        atkVal_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 应答攻击
 */
declare module protocol {
    class role_atk_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        skillID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求攻击
 */
declare module protocol {
    class role_atk_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        skillID: number;
        dir: number;
        atkType: number;
        atkVal: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class ring_suit_lv_up_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 特戒套装升级
 */
declare module protocol {
    class ring_suit_lv_up_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        skind: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class join_task_map_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        mapID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服争霸boss掉落预告提示
 */
declare module protocol {
    class kfzb_activity_drop_remind_syn extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服争霸活动结束
 */
declare module protocol {
    class kfzb_activity_end_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        rank: number;
        serverRank: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服争霸活动个人积分增加同步
 */
declare module protocol {
    class kfzb_activity_jifen_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        num: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服争霸_个人阶段奖励_同步
 */
declare module protocol {
    class kfzb_get_stage_reward_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        canRewardId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服争霸_同步小怪数量
 */
declare module protocol {
    class kfzb_left_little_monster_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        leftNum: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服争霸_排行信息
 */
declare module protocol {
    class kfzb_rank_data extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        name: string;
        bp: number;
        rank: number;
        roleId: string;
        serverNo: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服争霸_个人积分榜同步
 */
declare module protocol {
    class kfzb_role_individual_ranks_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        rankArr: Array<kfzb_rank_data>;
        rankArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服争霸个人积分同步
 */
declare module protocol {
    class kfzb_role_rank_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        rankData: kfzb_rank_data;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服争霸_服务器排行榜同步
 */
declare module protocol {
    class kfzb_server_ranks_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        rankArr: Array<kfzb_rank_data>;
        rankArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //跨服争霸服务器区服号区域规则_不同的服在不同的落脚点_安全区
 */
declare module protocol {
    class kfzb_serverNum_region_rule_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        keyValue: Array<info_key_value_pair>;
        keyValue_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 特戒升级条件返回
 */
declare module protocol {
    class ring_lv_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        ID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步特戒信息
 */
declare module protocol {
    class ring_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        ID: Array<number>;
        ID_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 特戒升级返回
 */
declare module protocol {
    class ring_level_up_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 切换线路
 */
declare module protocol {
    class kuang_change_map_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleMap: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 切换线路返回
 */
declare module protocol {
    class kuang_change_map_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class kuang_get_time_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class kuang_get_time_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 挖矿任务快速完成
 */
declare module protocol {
    class kuang_quickly_complete_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class kuang_quickly_complete_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步场景中所有角色矿的信息
 */
declare module protocol {
    class kuang_role_infos_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: Array<info_role_kuang>;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class kuang_ts_count_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class kuang_ts_count_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 特戒升级请求
 */
declare module protocol {
    class ring_level_up_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        ringID: number;
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class lie_bian_zhi_zai_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        configID: number;
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class lie_bian_zhi_zai_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 裂变之灾扫荡
 */
declare module protocol {
    class lie_bian_zhi_zai_sweep_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        configID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class lie_bian_zhi_zai_sweep_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 猎魔幻狱领奖协议
 */
declare module protocol {
    class lie_mo_huan_yu_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        multiple: number;
        getAwardState: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 猎魔幻狱领奖回复协议
 */
declare module protocol {
    class lie_mo_huan_yu_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 召唤请求
 */
declare module protocol {
    class lie_mo_huan_yu_enter_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        buttonID: number;
        type: number;
        array: Array<number>;
        array_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class lie_mo_huan_yu_enter_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步怪物信息
 */
declare module protocol {
    class lie_mo_huan_yu_info_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        boss: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求扫荡
 */
declare module protocol {
    class lie_mo_huan_yu_sweep_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        array: Array<number>;
        sweepFlag: number;
        sweepId: number;
        array_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class lie_mo_huan_yu_sweep_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 上线同步
 */
declare module protocol {
    class lie_mo_huan_yu_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        cur: number;
        remain: number;
        sweepFlag: number;
        array: Array<number>;
        killBossArray: Array<number>;
        sweepBossArray: Array<number>;
        array_changed: boolean;
        killBossArray_changed: boolean;
        sweepBossArray_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class lie_mo_level_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class lie_mo_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class lie_mo_up_level_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class ring_gift_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        lis: Array<info_ring_gift>;
        lis_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class ring_gift_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class ring_gift_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 特戒升级条件完成进度
 */
declare module protocol {
    class ring_condition_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        BaseID: number;
        step: Array<number>;
        step_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 特戒升级条件请求返回
 */
declare module protocol {
    class ring_condition_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 特戒升级条件请求
 */
declare module protocol {
    class ring_condition_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 资源找回回复
 */
declare module protocol {
    class resource_back_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 限时装备合成信息同步
 */
declare module protocol {
    class limit_time_equip_compound_info_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infos: Array<limit_time_equip_compound_info>;
        infos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 限时装备合成信息
 */
declare module protocol {
    class limit_time_equip_compound_info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        startTime: number;
        endTime: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 限时装备合成合成请求
 */
declare module protocol {
    class limit_time_equip_compound_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        bagPosArr: Array<number>;
        bagPosArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 限时装备合成合成协议返回
 */
declare module protocol {
    class limit_time_equip_compound_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class limit_time_last_award_get_flag_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        flagArr: Array<info_limit_minssion_award_flag>;
        flagArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class limit_time_last_time_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        time: number;
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class ll_tower_data_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        challVal: number;
        needtime: number;
        sweepstate: number;
        challVal_changed: boolean;
        needtime_changed: boolean;
        sweepstate_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class ll_tower_data_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        challVal: number;
        sweepVal: number;
        sweepstate: number;
        needtime: number;
        challVal_changed: boolean;
        sweepVal_changed: boolean;
        sweepstate_changed: boolean;
        needtime_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入挑战
 */
declare module protocol {
    class ll_tower_enter_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class ll_tower_enter_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //领取扫荡奖励
 */
declare module protocol {
    class ll_tower_sweep_award_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class ll_tower_sweep_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 开始扫荡
 */
declare module protocol {
    class ll_tower_sweep_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class ll_tower_sweep_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 全民红包登录信息同步
 */
declare module protocol {
    class load_national_red_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        surplus: number;
        nationRedList: Array<info_national_red>;
        count: number;
        cdtime: number;
        rankList: Array<info_rank_national_red>;
        mineRed: number;
        lastMoney: number;
        donate: info_national_red;
        nationRedList_changed: boolean;
        cdtime_changed: boolean;
        rankList_changed: boolean;
        mineRed_changed: boolean;
        lastMoney_changed: boolean;
        donate_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 加载成就信息
 */
declare module protocol {
    class load_normal_achievement_info_sync extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: Array<info_condition>;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取登录奖励请求
 */
declare module protocol {
    class login_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        isExtra: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取登录奖励回复
 */
declare module protocol {
    class login_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
        isExtra: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 客户端通知网关自己要连接哪个区服 登录
 */
declare module protocol {
    class login_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        serverNumber: number;
        sig: string;
        token: string;
        clientInfo: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 设置区服号返回消息, 返回登录或者注册的情况;state=0, 成功;state=1,失败
 */
declare module protocol {
    class login_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        serverNumber: number;
        needAuthCode: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取周奖励
 */
declare module protocol {
    class login_week_award_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取周奖励回复
 */
declare module protocol {
    class login_week_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步活动期间龙珠获得
 */
declare module protocol {
    class longzhu_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        Value: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求领奖
 */
declare module protocol {
    class longzhu_get_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        Id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领奖结果
 */
declare module protocol {
    class longzhu_get_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        Id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 上线加载
 */
declare module protocol {
    class longzhu_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        Value: number;
        submit_lz_Id: Array<number>;
        submit_lz_Id_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 幸运宝藏数据同步
 */
declare module protocol {
    class luckmine_data_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        currscore: number;
        idArr: Array<number>;
        nameArr: Array<string>;
        idArr_changed: boolean;
        nameArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 客户端请求获得的道具
 */
declare module protocol {
    class lucky_dish_reward_get_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        ID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 服务器已领取过奖励，回传客户端显示
 */
declare module protocol {
    class lucky_dish_reward_get_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 开始幸运装盘的抽奖
 */
declare module protocol {
    class lucky_dish_reward_show_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 回传给客户端应该得到的奖励
 */
declare module protocol {
    class lucky_dish_reward_show_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        ID: number;
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步转盘奖励
 */
declare module protocol {
    class lucky_dish_reward_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        luckyValue: number;
        Gear: number;
        infoarr: Array<number>;
        infoarr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 法宝信息同步
 */
declare module protocol {
    class magic_weapon_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        dragonSpiritLv: number;
        dragonSpiritBreachLv: number;
        dragonveinLv: Array<number>;
        breachVal: number;
        dragonSpiritLv_changed: boolean;
        dragonSpiritBreachLv_changed: boolean;
        dragonveinLv_changed: boolean;
        breachVal_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 获得玩家邮件点击时间戳
 */
declare module protocol {
    class mail_click_time_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回点击邮件时间戳
 */
declare module protocol {
    class mail_click_time_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        clickTime: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 服务器删除邮件
 */
declare module protocol {
    class mail_del_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        mailID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 邮件一键删除请求
 */
declare module protocol {
    class mail_delete_all_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        mailIDList: Array<string>;
        mailIDList_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 邮件一键删除回复
 */
declare module protocol {
    class mail_delete_all_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        mailIDList: Array<string>;
        mailIDList_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 邮件删除请求
 */
declare module protocol {
    class mail_delete_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        mailID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 邮件删除回复
 */
declare module protocol {
    class mail_delete_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        mailID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 邮件附件领取请求
 */
declare module protocol {
    class mail_get_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        mailID: Array<string>;
        mailID_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 邮件附件领取回复
 */
declare module protocol {
    class mail_get_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        mailID: Array<string>;
        mailID_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 发送所有邮件数据到客户端
 */
declare module protocol {
    class mail_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        mailInfo: Array<info_mail>;
        mailInfo_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 发送新邮件到客户端
 */
declare module protocol {
    class mail_new_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        mailInfo: info_mail;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 邮件打开请求
 */
declare module protocol {
    class mail_open_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        mailID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 邮件打开回复
 */
declare module protocol {
    class mail_open_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        mailID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 一键全读
 */
declare module protocol {
    class mail_read_all_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 一键全读返回
 */
declare module protocol {
    class mail_read_all_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 炼制
 */
declare module protocol {
    class makeexp_buy_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 炼制响应
 */
declare module protocol {
    class makeexp_buy_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领返还绑元
 */
declare module protocol {
    class makeexp_get_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 响应
 */
declare module protocol {
    class makeexp_get_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 经验炼制加载
 */
declare module protocol {
    class makeexp_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        leftRoleNum: number;
        leftHeroNum: number;
        roleID: number;
        heroID: number;
        leftFinishSec: number;
        records: Array<info_makeexp>;
        records_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 购买物品请求
 */
declare module protocol {
    class mall_buy_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        type: number;
        count: number;
        buyWay: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 应答购买物品请求
 */
declare module protocol {
    class mall_buy_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * buff类物品购买并使用
 */
declare module protocol {
    class mall_buy_use_buff_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class mall_buy_use_buff_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class mall_data_limit_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: info_mall_buy_limit;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 限时商店购买
 */
declare module protocol {
    class mall_limit_buy_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        itemID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class mall_limit_buy_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        itemID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 积分商城限时商店数据
 */
declare module protocol {
    class mall_limit_data_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        leftRefreshNum: number;
        leftRefreshSec: number;
        itemIDs: Array<number>;
        isBuy: Array<boolean>;
        itemIDs_changed: boolean;
        isBuy_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class mall_load_limit_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infos: Array<info_mall_buy_limit>;
        infos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 资源找回请求
 */
declare module protocol {
    class resource_back_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        count: number;
        currencyType: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 找回所有资源返回
 */
declare module protocol {
    class resource_back_all_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 找回所有资源
 */
declare module protocol {
    class resource_back_all_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 购买商品
 */
declare module protocol {
    class mall_score_buy_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        itemID: number;
        itemCount: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class mall_score_buy_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //热更后为了不影响玩家游戏体验，客户端重启建议
 */
declare module protocol {
    class reload_push_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        funcId: number;
        funcId_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 转盘积分商城数据同步
 */
declare module protocol {
    class mall_turntable_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infos: Array<info_turntable_mall_item>;
        infos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 人物转生回复
 */
declare module protocol {
    class relevel_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 人物转生请求
 */
declare module protocol {
    class relevel_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 追踪仇人回复
 */
declare module protocol {
    class relation_trace_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        name: string;
        x: number;
        y: number;
        mapID: number;
        name_changed: boolean;
        x_changed: boolean;
        y_changed: boolean;
        mapID_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 追踪仇人请求
 */
declare module protocol {
    class relation_trace_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class relation_tips_info_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        haveTeam: boolean;
        haveTeam_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 好友tips信息请求
 */
declare module protocol {
    class relation_tips_info_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        targetID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 人物搜索回复
 */
declare module protocol {
    class relation_search_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        info: info_role_relation;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 人物搜索请求
 */
declare module protocol {
    class relation_search_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        name: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步传送点
 */
declare module protocol {
    class map_area_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        mapID: number;
        areaName: string;
        disable: boolean;
        canEnter: boolean;
        areaName_changed: boolean;
        disable_changed: boolean;
        canEnter_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 挑战boss地图进入计数同步
 */
declare module protocol {
    class map_challenge_boss_enter_yet_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        mapEnterYetIds: Array<number>;
        mapEnterYetIds_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步地图切换
 */
declare module protocol {
    class map_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        mapID: number;
        x: number;
        y: number;
        reason: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 大爆掉落同步
 */
declare module protocol {
    class map_drop_big_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        spriteID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步场景中个人掉落
 */
declare module protocol {
    class map_drop_for_personal_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        x: number;
        y: number;
        infos: Array<info_drop_for_personal>;
        infos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求复仇传送
 */
declare module protocol {
    class map_enemy_transfer_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        mapID: number;
        x: number;
        y: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 回复复仇传送
 */
declare module protocol {
    class map_enemy_transfer_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入活动地图CD时间戳
 */
declare module protocol {
    class map_enter_active_cd_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArray: Array<info_map_enter_active_cd>;
        infoArray_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 查找精灵_请求_单位id
 */
declare module protocol {
    class map_find_sprite_by_unitId_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        unitId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 圣龙战场_查找精灵返回
 */
declare module protocol {
    class map_find_sprite_by_unitId_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        unitId: number;
        spriteID: number;
        posX: number;
        posY: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 在地图内查找任意精灵请求
 */
declare module protocol {
    class map_find_sprite_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 在地图内查找任意精灵回复
 */
declare module protocol {
    class map_find_sprite_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        spriteID: number;
        posX: number;
        posY: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求离开副本
 */
declare module protocol {
    class map_leave_clone_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 离开副本响应
 */
declare module protocol {
    class map_leave_clone_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求移动
 */
declare module protocol {
    class map_move_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        x: number;
        y: number;
        tx: number;
        ty: number;
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 应答移动
 */
declare module protocol {
    class map_move_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        x: number;
        y: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 在屏幕内移动
 */
declare module protocol {
    class map_move_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        spriteID: number;
        x: number;
        y: number;
        tx: number;
        ty: number;
        type: number;
        reason: number;
        param: number;
        dir: number;
        param_changed: boolean;
        dir_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求npc传送
 */
declare module protocol {
    class map_npc_transfer_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 回复npc传送
 */
declare module protocol {
    class map_npc_transfer_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求拾取
 */
declare module protocol {
    class map_pick_up_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        spriteID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 应答拾取
 */
declare module protocol {
    class map_pick_up_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        spriteID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步角色进出区域信息，暂时只同步给自己
 */
declare module protocol {
    class map_role_area_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        enterMapID: number;
        enterAreaNames: Array<string>;
        leaveMapID: number;
        leaveAreaNames: Array<string>;
        enterMapID_changed: boolean;
        enterAreaNames_changed: boolean;
        leaveMapID_changed: boolean;
        leaveAreaNames_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 玩家进入地图返回提示
 */
declare module protocol {
    class map_role_enter_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步玩家进入地图
 */
declare module protocol {
    class map_role_enter_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        spriteID: number;
        roleName: string;
        roleName_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步玩家离开地图
 */
declare module protocol {
    class map_role_leave_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        spriteID: number;
        roleName: string;
        roleName_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求旋转
 */
declare module protocol {
    class map_rotation_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        dir: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 应答旋转
 */
declare module protocol {
    class map_rotation_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步旋转
 */
declare module protocol {
    class map_rotation_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        spriteID: number;
        dir: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 显示地图传送
 */
declare module protocol {
    class map_show_area_transfres extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        mapId: number;
        areaName: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 设置属性
 */
declare module protocol {
    class map_sprite_attr_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        spriteID: number;
        type: number;
        val: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 场景对象进入屏幕
 */
declare module protocol {
    class map_sprite_enter_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        enterType: number;
        info: info_sprite;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 视野精灵信息同步
 */
declare module protocol {
    class map_sprite_info_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: info_sprite;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 场景对象离开屏幕
 */
declare module protocol {
    class map_sprite_leave_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        spriteID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 地图精灵显示聊天泡泡
 */
declare module protocol {
    class map_sprite_talk_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        spriteID: number;
        showTime: number;
        content: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 精灵显示时间
 */
declare module protocol {
    class map_sprite_time_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        spriteID: number;
        time: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 使用传送石传送
 */
declare module protocol {
    class map_stone_transfer_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        pos: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 是用传送石传送回复
 */
declare module protocol {
    class map_stone_transfer_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //同步阵营积分
 */
declare module protocol {
    class map_sync_camp_integral extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        camp: number;
        integral: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //同步地图排行数据
 */
declare module protocol {
    class map_sync_rank_info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        rankInfos: Array<info_transcript_rank>;
        rankInfos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //同步Boss状态
 */
declare module protocol {
    class map_sync_world_state extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //副本击杀怪物计数
 */
declare module protocol {
    class map_transcript_kill_manster_count extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        count: number;
        deadUnitStaticIdList: Array<number>;
        deadUnitStaticIdList_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步地图上所有怪物数量
 */
declare module protocol {
    class map_transcript_manster_all_count extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //同步副本时间
 */
declare module protocol {
    class map_transcript_time extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        time: number;
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 副本场景单位计数
 */
declare module protocol {
    class map_transcript_unit_num extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求使用传送点
 */
declare module protocol {
    class map_use_transfer_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        transferID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 应答使用传送点
 */
declare module protocol {
    class map_use_transfer_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //地图组剩余时间
 */
declare module protocol {
    class map_welfare_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infos: Array<info_key_value_pair>;
        infos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //世界属性同步
 */
declare module protocol {
    class map_world_attr_info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        KillMonsterCount: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class mars_active_skin_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class mars_active_skin_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class mars_atk_state_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class mars_atk_state_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class mars_attrs_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infos: Array<info_role_attr>;
        infos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 侍卫培养等级改变同步消息
 */
declare module protocol {
    class mars_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: info_mars;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 护卫培养
 */
declare module protocol {
    class mars_cultivate_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        marsID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回护卫培养
 */
declare module protocol {
    class mars_cultivate_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class mars_data_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        lv: number;
        skinid: number;
        issleep: number;
        atkmode: number;
        lockflag: number;
        usemabiitem: number;
        useatkspeeditem: number;
        activeids: Array<number>;
        activeids_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求让战神和宠物休息
 */
declare module protocol {
    class mars_idle_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 响应mars_idle_req
 */
declare module protocol {
    class mars_idle_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 侍卫登陆同步消息
 */
declare module protocol {
    class mars_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        marsInfoArr: Array<info_mars>;
        marsInfoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class mars_lock_taget_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        spriteid: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class mars_lock_taget_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        spriteid: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 复仇日志回复
 */
declare module protocol {
    class relation_revengeLog_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        info: Array<info_relation_revengeLog>;
        revengeNum: number;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 复仇日志请求
 */
declare module protocol {
    class relation_revengeLog_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 移除人物关系
 */
declare module protocol {
    class relation_remove_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        roleID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class mars_select_skin_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class mars_select_skin_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //技能改变同步
 */
declare module protocol {
    class mars_skill_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: info_skill;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //同步战宠技能数据
 */
declare module protocol {
    class mars_skill_list_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: Array<info_skill>;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //技能替换
 */
declare module protocol {
    class mars_skill_replace_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        skillID: number;
        newInfo: info_skill;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 召唤护卫
 */
declare module protocol {
    class mars_summon_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        oper: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回召唤护卫
 */
declare module protocol {
    class mars_summon_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class mars_trunk_data_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        trunksp: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class mars_uplv_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class mars_uplv_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class mars_use_skill_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        skillId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 击杀推送
 */
declare module protocol {
    class match_a_kill_b_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        killer: string;
        killed: string;
        killCount: number;
        firstblood: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求取消匹配
 */
declare module protocol {
    class match_cancel_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        captionID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 分数改变
 */
declare module protocol {
    class match_change_souce_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        red: number;
        green: number;
        selfScore: number;
        selfScore_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 匹配请求创建队伍
 */
declare module protocol {
    class match_creat_team_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleID: string;
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 匹配创建队伍返回
 */
declare module protocol {
    class match_creat_team_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 比赛结束通知
 */
declare module protocol {
    class match_endTime_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        winMvp: string;
        failMvp: string;
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入地图推送队伍信息
 */
declare module protocol {
    class match_enterMap_team_info_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        teamArray: Array<info_match_team>;
        time: number;
        teamArray_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 旗子归属同步
 */
declare module protocol {
    class match_flag_belong_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        team: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 匹配状态同步
 */
declare module protocol {
    class match_state_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 匹配状态同步
 */
declare module protocol {
    class match_state_team_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 发起投降
 */
declare module protocol {
    class match_surrender_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        roomID: number;
        team: number;
        type_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 投降返回
 */
declare module protocol {
    class match_surrender_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        cd: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 投降结果
 */
declare module protocol {
    class match_surrender_result_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        team: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 投降推送
 */
declare module protocol {
    class match_surrender_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: Array<info_surrender>;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 取消组队
 */
declare module protocol {
    class match_team_cancel_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        caption: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 取消组队返回
 */
declare module protocol {
    class match_team_cancel_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 匹配邀请组队
 */
declare module protocol {
    class match_team_invitation_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        sourceID: string;
        targetID: string;
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 邀请返回
 */
declare module protocol {
    class match_team_invitation_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 组队信息
 */
declare module protocol {
    class match_team_invition_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: Array<info_match_team>;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 被邀请者同意或拒绝
 */
declare module protocol {
    class match_team_is_agree_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 被邀请者通知服务器 结果
 */
declare module protocol {
    class match_team_is_argee_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        roleID: string;
        sourceID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 匹配期间不能进入副本
 */
declare module protocol {
    class match_team_limit_map_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        name: string;
        name_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 通知别邀请者
 */
declare module protocol {
    class match_team_notic_target_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        name: string;
        roleID: string;
        sourceID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 组队成功 队友信息推送
 */
declare module protocol {
    class match_team_result_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        teamArray: Array<info_match_team>;
        teamArray_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 游戏服向匹配服申请取消匹配
 */
declare module protocol {
    class match2Logic_off_match_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        roleList: Array<string>;
        roleList_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领奖请求
 */
declare module protocol {
    class material_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        kind: number;
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class material_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 副本中boss提示
 */
declare module protocol {
    class material_boss_notice extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        typeID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class material_enter_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class material_enter_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入材料盛宴
 */
declare module protocol {
    class material_feast_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class material_feast_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 材料盛宴信息
 */
declare module protocol {
    class material_feast_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        bossState: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步玩家材料副本信息
 */
declare module protocol {
    class material_info_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infos: Array<info_materials>;
        infos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 材料副本结束弹出的页面
 */
declare module protocol {
    class material_senseui_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class material_skill_cd_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        cdTime: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 特权卡意见扫荡
 */
declare module protocol {
    class material_sweep_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class material_sweep_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 材料副本内同步的信息,id,杀怪数量,剩余时间
 */
declare module protocol {
    class material_synchro_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        killCount: number;
        time: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 消费豪礼请求
 */
declare module protocol {
    class merger_consume_rank_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 消费豪礼数据
 */
declare module protocol {
    class merger_consume_rank_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        curConsume: number;
        rankList: Array<info_merger_consume_rank>;
        rankList_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 合服活动充值有礼 上线初始化协议
 */
declare module protocol {
    class merger_rechage_giveawar_init_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        rechagenum: number;
        listid: Array<number>;
        listid_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 合服活动 充值有礼 请求领取奖励
 */
declare module protocol {
    class merger_rechage_giveaward_get_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 合服活动 充值有礼 请求领取奖励ID返回
 */
declare module protocol {
    class merger_rechage_giveaward_get_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 合服活动充值有礼 活动内充值总额变更同步
 */
declare module protocol {
    class merger_rechage_giveaward_rechage_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        rechagenum: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 好友推荐回复
 */
declare module protocol {
    class relation_recommend_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        info: Array<info_role_relation>;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //客户端取出物品
 */
declare module protocol {
    class mine_extract_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        index: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 删除物品
 */
declare module protocol {
    class mine_extract_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        pos: Array<number>;
        pos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取宝箱
 */
declare module protocol {
    class mine_getBox_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        indexBox: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 获取宝箱回复
 */
declare module protocol {
    class mine_getBox_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        getBoxCountAttr: Array<number>;
        getBoxCountAttr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //仓库物品
 */
declare module protocol {
    class mine_itemlist_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        items: Array<number>;
        counts: Array<number>;
        goodattrs: Array<number>;
        createTime: Array<number>;
        items_changed: boolean;
        counts_changed: boolean;
        goodattrs_changed: boolean;
        createTime_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 宝藏阶梯奖励领取前端请求
 */
declare module protocol {
    class mine_ladder_receive_reward_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 宝藏阶梯领取奖励返回
 */
declare module protocol {
    class mine_ladder_receive_reward_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        digNum: number;
        receiveId: number;
        arr: Array<number>;
        arr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 玩家登陆时同步当日挖宝状况
 */
declare module protocol {
    class mine_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        digCount: number;
        todayDigNum: number;
        getBoxCountAttr: Array<number>;
        luck: number;
        first: number;
        getReceiveId: Array<number>;
        getBoxCountAttr_changed: boolean;
        getReceiveId_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 一键领取
 */
declare module protocol {
    class mine_one_extract_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 宝藏仓库一键使用
 */
declare module protocol {
    class mine_one_extract_use_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        item_id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 一键使用回复
 */
declare module protocol {
    class mine_one_extract_use_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        showValue: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //刷新客户端广播
 */
declare module protocol {
    class mine_radio_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 宝藏公告
 */
declare module protocol {
    class mine_raido_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        info: Array<info_mine_radio>;
        info1: Array<info_mine_radio>;
        top: Array<info_mine_radio>;
        info_changed: boolean;
        info1_changed: boolean;
        top_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 一键回收使用经验葫芦
 */
declare module protocol {
    class mine_recovery_gourd_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 一键回收使用经验葫芦
 */
declare module protocol {
    class mine_recovery_gourd_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        pos: Array<number>;
        pos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 宝藏回收
 */
declare module protocol {
    class mine_recycle_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 回收返回
 */
declare module protocol {
    class mine_recycle_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        attrTypeArr: Array<number>;
        attrValArr: Array<number>;
        attrTypeArr_changed: boolean;
        attrValArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 抽取物品
 */
declare module protocol {
    class mine_seek_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //寻宝一次结束
 */
declare module protocol {
    class mine_seek_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        count: number;
        items: Array<number>;
        num: Array<number>;
        poss: Array<number>;
        goodattr: Array<number>;
        createTime: Array<number>;
        digCount: number;
        luck: number;
        items_changed: boolean;
        num_changed: boolean;
        poss_changed: boolean;
        goodattr_changed: boolean;
        createTime_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //宝藏界面物品显示
 */
declare module protocol {
    class mine_show_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        zhanm: Array<number>;
        zhanw: Array<number>;
        fam: Array<number>;
        faw: Array<number>;
        daom: Array<number>;
        daow: Array<number>;
        zhanm_changed: boolean;
        zhanw_changed: boolean;
        fam_changed: boolean;
        faw_changed: boolean;
        daom_changed: boolean;
        daow_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 整理宝藏仓库
 */
declare module protocol {
    class mine_tidy_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回处理
 */
declare module protocol {
    class mine_tidy_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 回收宝藏仓库得装备
 */
declare module protocol {
    class mine_withdraw_equip_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 挖宝装备回收
 */
declare module protocol {
    class mine_withdraw_equip_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        showValue: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //购买次数
 */
declare module protocol {
    class mission_border_buy_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * //购买返回
 */
declare module protocol {
    class mission_border_buy_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //快速完成跨服
 */
declare module protocol {
    class mission_border_cross_fast_complete_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        time: number;
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 快速完成跨服
 */
declare module protocol {
    class mission_border_cross_fast_complete_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //一键完成
 */
declare module protocol {
    class mission_border_fast_complete_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        time: number;
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //一键完成返回
 */
declare module protocol {
    class mission_border_fast_complete_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 任务数据同步
 */
declare module protocol {
    class mission_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: Array<info_condition>;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 购买除魔任务
 */
declare module protocol {
    class mission_chu_mo_buy_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class mission_chu_mo_buy_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 一鍵完成除魔任物请求
 */
declare module protocol {
    class mission_chu_mo_fast_complete_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 一键完成除魔任务回复
 */
declare module protocol {
    class mission_chu_mo_fast_complete_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求立即完成任务
 */
declare module protocol {
    class mission_complete_immediately_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求立即完成任务回复
 */
declare module protocol {
    class mission_complete_immediately_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 任务删除物品请求
 */
declare module protocol {
    class mission_del_item_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        missionID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 任务删除物品返回
 */
declare module protocol {
    class mission_del_item_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 任务数据同步
 */
declare module protocol {
    class mission_equip_recycl_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        state: number;
        count: number;
        id_changed: boolean;
        state_changed: boolean;
        count_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 加载任务数据
 */
declare module protocol {
    class mission_equip_recycl_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        state: number;
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取任务请求
 */
declare module protocol {
    class mission_equip_recycl_receive_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取任务回复
 */
declare module protocol {
    class mission_equip_recycl_receive_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 刷星请求
 */
declare module protocol {
    class mission_equip_recycl_star_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 刷星回复
 */
declare module protocol {
    class mission_equip_recycl_star_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 提交任务并领取奖励请求
 */
declare module protocol {
    class mission_equip_recycl_submit_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        pos: number;
        num: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 提交任务回复
 */
declare module protocol {
    class mission_equip_recycl_submit_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 任务副本地图进入请求
 */
declare module protocol {
    class mission_fu_ben_enter_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 任务副本进入地图回复
 */
declare module protocol {
    class mission_fu_ben_enter_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 放弃任务请求
 */
declare module protocol {
    class mission_giveup_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 放弃任务回复
 */
declare module protocol {
    class mission_giveup_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 加载任务数据
 */
declare module protocol {
    class mission_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: Array<info_condition>;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取任务请求
 */
declare module protocol {
    class mission_receive_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取任务回复
 */
declare module protocol {
    class mission_receive_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步任务人物数据
 */
declare module protocol {
    class mission_role_data_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        chuMoCount: number;
        chuMoBuyCount: number;
        waKuangCount: number;
        zuDuiShaoZhuCount: number;
        woLongFuMoCount: number;
        guildMissionCount: number;
        heroAdytumCountArray: Array<number>;
        mausoleumHistoricalSiteCountArray: Array<number>;
        bookMissionCount: number;
        shouWeiMengZhongCount: number;
        mzBorderTrunk: number;
        chuMoCount_changed: boolean;
        chuMoBuyCount_changed: boolean;
        waKuangCount_changed: boolean;
        zuDuiShaoZhuCount_changed: boolean;
        woLongFuMoCount_changed: boolean;
        guildMissionCount_changed: boolean;
        heroAdytumCountArray_changed: boolean;
        mausoleumHistoricalSiteCountArray_changed: boolean;
        bookMissionCount_changed: boolean;
        shouWeiMengZhongCount_changed: boolean;
        mzBorderTrunk_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 任务后端特殊处理请求(没有res)
 */
declare module protocol {
    class mission_special_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        CondFuncIDArr: number;
        CondFuncParamArr: Array<string>;
        CondFuncParamArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 除魔刷星请求
 */
declare module protocol {
    class mission_star_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 除魔刷星回复
 */
declare module protocol {
    class mission_star_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 提交任务请求
 */
declare module protocol {
    class mission_submit_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        num: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 提交任务回复
 */
declare module protocol {
    class mission_submit_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 新手秘境任务提交请求
 */
declare module protocol {
    class mission_xsmj_submit_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 提交新手秘境任务回复
 */
declare module protocol {
    class mission_xsmj_submit_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 申请购买可获得的段位经验的次数
 */
declare module protocol {
    class moba_buy_count_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 购买返回
 */
declare module protocol {
    class moba_buy_count_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * moba服断开通知逻辑服
 */
declare module protocol {
    class moba_disconnect_notice_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        crossServerID: number;
        ip: string;
        port: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 客户端打开moba界面时 请求是否还有正在进行的游戏
 */
declare module protocol {
    class moba_game_info_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回moba游戏的信息
 */
declare module protocol {
    class moba_game_info_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        crossServerID: number;
        ip: string;
        port: number;
        endTimeStamp: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * moba段位积分变更同步
 */
declare module protocol {
    class moba_grade_score_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        score: number;
        maxcount: number;
        buycount: number;
        isFist: boolean;
        honour: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 客户端请求匹配
 */
declare module protocol {
    class moba_match_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        mobaType: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回给客户端消息处理结果
 */
declare module protocol {
    class moba_match_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 向客户端同步匹配结果  客户端收到此协议后准备重连到跨服
 */
declare module protocol {
    class moba_match_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        ip: string;
        port: number;
        crossServerID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 玩家进入逻辑服请求一下战报
 */
declare module protocol {
    class moba_role_enter_game_info_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求回复
 */
declare module protocol {
    class moba_role_enter_game_info_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        ranksore: number;
        mvp: number;
        type: number;
        honor: number;
        itemId: number;
        itemCount: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 城主膜拜获得奖励请求
 */
declare module protocol {
    class mobai_get_award_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 城主膜拜获得奖励回复
 */
declare module protocol {
    class mobai_get_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 城主膜拜领取buff请求
 */
declare module protocol {
    class mobai_get_buff_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 城主膜拜领取buff回复
 */
declare module protocol {
    class mobai_get_buff_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 城主膜拜刷新星级请求
 */
declare module protocol {
    class mobai_refresh_star_level_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 城主膜拜刷新星级回复
 */
declare module protocol {
    class mobai_refresh_star_level_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        starLevel: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 城主膜拜星级同步
 */
declare module protocol {
    class mobai_star_level_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        starLevel: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 购买请求
 */
declare module protocol {
    class mystical_story_buy_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 购买请求回复
 */
declare module protocol {
    class mystical_story_buy_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步购买状态
 */
declare module protocol {
    class mystical_story_load extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: Array<info_mystical_story>;
        time: number;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 刷新请求
 */
declare module protocol {
    class mystical_story_refresh_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求刷新回复
 */
declare module protocol {
    class mystical_story_refresh_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 全民捐（抢）红包
 */
declare module protocol {
    class national_red_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        donateMonry: info_national_red;
        surplus: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 是否在线返回
 */
declare module protocol {
    class national_red_donate_online_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        isonline: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 全民红包捐钱
 */
declare module protocol {
    class national_red_donate_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        num: number;
        num_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 全民红包捐钱返回
 */
declare module protocol {
    class national_red_donate_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        allMoney: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 荣誉榜发生变化
 */
declare module protocol {
    class national_red_rank_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        rankList: Array<info_rank_national_red>;
        rankList_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 全民抢红包
 */
declare module protocol {
    class national_red_rob_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * vip改变同步剩余次数
 */
declare module protocol {
    class national_red_vip_change_count_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 好友推荐请求
 */
declare module protocol {
    class relation_recommend_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 拉取人物是否在线回复
 */
declare module protocol {
    class relation_online_load_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        type: number;
        infoArray: Array<info_role_relation>;
        infoArray_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 拉取关系人物是否在线请求
 */
declare module protocol {
    class relation_online_load_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 点击领取奖励
 */
declare module protocol {
    class new_ach_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领奖回复
 */
declare module protocol {
    class new_ach_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * change协议
 */
declare module protocol {
    class new_ach_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: Array<info_condition>;
        awardid: number;
        points: number;
        infoArr_changed: boolean;
        awardid_changed: boolean;
        points_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取日奖励
 */
declare module protocol {
    class new_ach_day_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取日奖励回复
 */
declare module protocol {
    class new_ach_day_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 新vip成就同步
 */
declare module protocol {
    class new_ach_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: Array<info_condition>;
        awardList: Array<number>;
        points: number;
        infoArr_changed: boolean;
        awardList_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class new_awaken_lv_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        lv: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class new_awaken_lv_up_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        lv: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class new_awaken_lv_up_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class new_awaken_open_pos_list_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        lis: Array<number>;
        lis_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class new_awaken_open_pos_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class new_awaken_open_pos_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        stata: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步奖励领取信息
 */
declare module protocol {
    class new_func_open_award_info_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        haveGot: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求领取新功能开启预告奖励
 */
declare module protocol {
    class new_func_open_get_award_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求领取新功能预告奖励回复
 */
declare module protocol {
    class new_func_open_get_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class new_sxmb_buy_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class new_sxmb_buy_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class new_sxmb_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        itemArr: Array<info_SXMB>;
        moneyArr: Array<info_SXMB>;
        itemArr_changed: boolean;
        moneyArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 服务器推送收益栏提示，通知个人
 */
declare module protocol {
    class notice_profit_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoProfit: Array<info_profit>;
        infoProfit_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 服务器向客户端推送公告协议，广播所有人
 */
declare module protocol {
    class notice_system_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        param: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 通知应用Buff效果
 */
declare module protocol {
    class notify_use_buff_effect extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        bufId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 留言同步通知
 */
declare module protocol {
    class relation_message_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        messageInfo: info_relation_message;
        messageInfo_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 全民抢红包返回
 */
declare module protocol {
    class notional_red_rob_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        num: number;
        cdTime: number;
        count: number;
        num_changed: boolean;
        cdTime_changed: boolean;
        count_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * npc 固定地图传送请求
 */
declare module protocol {
    class npc_map_transfer_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        mapIndex: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * npc 固定地图传送回复
 */
declare module protocol {
    class npc_map_transfer_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 留言回复
 */
declare module protocol {
    class relation_message_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 留言/删除 请求
 */
declare module protocol {
    class relation_message_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        targetID: string;
        replyName: string;
        message: string;
        group: number;
        autograph: string;
        paizhuan: number;
        dianzan: number;
        pos: string;
        birthday: string;
        sex: number;
        headID: number;
        headFrame: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 留言列表回复
 */
declare module protocol {
    class relation_message_list_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        messageInfo: Array<info_relation_message>;
        messageInfo_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 留言列表请求
 */
declare module protocol {
    class relation_message_list_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求领取离线挂机奖励
 */
declare module protocol {
    class offline_drill_award_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领奖结果
 */
declare module protocol {
    class offline_drill_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 购买挂机总时长奖励
 */
declare module protocol {
    class offline_drill_buy_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        money: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 购买挂机总时长奖励回复
 */
declare module protocol {
    class offline_drill_buy_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 离线挂机上线初始化
 */
declare module protocol {
    class offline_drill_init_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        time: number;
        mapID: number;
        exp: number;
        neiGong: number;
        skillCount: number;
        itemArr: Array<info_offline_drill_item>;
        skillID: Array<number>;
        totalTime: number;
        time_changed: boolean;
        mapID_changed: boolean;
        exp_changed: boolean;
        neiGong_changed: boolean;
        skillCount_changed: boolean;
        itemArr_changed: boolean;
        skillID_changed: boolean;
        totalTime_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求变更离线挂机状态
 */
declare module protocol {
    class offline_drill_state_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        mapID: number;
        skillID: Array<number>;
        mapID_changed: boolean;
        skillID_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 离线挂机状态别更结果
 */
declare module protocol {
    class offline_drill_state_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        opened: number;
        time: number;
        mapID: number;
        skillID: Array<number>;
        time_changed: boolean;
        mapID_changed: boolean;
        skillID_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class offline_drill_surplus_time_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class offline_drill_surplus_time_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        curTime: number;
        lastTime: number;
        time: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 离线挂机同步奖励信息
 */
declare module protocol {
    class offline_drill_update_award_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        time: number;
        lastTime: number;
        awardCount: number;
        normalItemArr: Array<info_offline_drill_item>;
        shenciItemArr: Array<info_offline_drill_item>;
        skillCount: number;
        itemArr: Array<info_offline_drill_item>;
        normalItemArr_changed: boolean;
        shenciItemArr_changed: boolean;
        itemArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步物品信息
 */
declare module protocol {
    class offline_drill_update_item_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        itemInfos: Array<info_offline_drill_update_item>;
        lastItemInfos: Array<info_offline_drill_update_item>;
        itemInfos_changed: boolean;
        lastItemInfos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取在线奖励请求
 */
declare module protocol {
    class online_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取在线奖励回复
 */
declare module protocol {
    class online_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class open_active_get_equip_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleid: string;
        list: info_suit_collect;
        delrecord: boolean;
        record: info_equipaward_record;
        roleid_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 玩家上线加载单件信息协议
 */
declare module protocol {
    class open_active_get_equip_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        list: Array<info_suit_collect>;
        record: Array<info_equipaward_record>;
        list_changed: boolean;
        record_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求回收装备
 */
declare module protocol {
    class open_active_get_equip_reward_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        cfgid: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 回收装备返回
 */
declare module protocol {
    class open_active_get_equip_reward_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 给全部在线的玩家发送单件变更数据
 */
declare module protocol {
    class open_active_get_equip_reward_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        roleid: string;
        rolename: string;
        time: number;
        isGet: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步已开启的格子数量(目前仓库最大格子由VIP控制，后续有别的格子由VIP控制的话增加type类型就可以)
 */
declare module protocol {
    class open_grid_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        typeArr: Array<number>;
        openArr: Array<number>;
        typeArr_changed: boolean;
        openArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 上线初始化，条件达成，领取完成都会发送此协议
 */
declare module protocol {
    class open_guildactivity_chang_state_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        complist: Array<info_creatguild_activity>;
        complist_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求领取奖励
 */
declare module protocol {
    class open_guildactivity_getaward_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取返回是否成功状态
 */
declare module protocol {
    class open_guildactivity_getaward_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 每档奖励已领取过的个数
 */
declare module protocol {
    class open_guildactivity_num_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        curlist: Array<info_creatguild_activity>;
        curlist_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 邂逅数据回复
 */
declare module protocol {
    class relation_meet_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        info: Array<info_role_relation>;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class os_award_record_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        page: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class os_award_record_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        pageCount: number;
        recordArr: Array<info_os_award_record>;
        recordArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 邂逅数据获取请求
 */
declare module protocol {
    class relation_meet_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 加载人物关系数据
 */
declare module protocol {
    class relation_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        friendInfo: Array<info_role_relation>;
        blackInfo: Array<info_role_relation>;
        enemyInfo: Array<info_role_relation>;
        attDeclaration: string;
        friendInfo_changed: boolean;
        blackInfo_changed: boolean;
        enemyInfo_changed: boolean;
        attDeclaration_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class relation_head_pic_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        headID: Array<number>;
        headFrameID: Array<number>;
        headID_changed: boolean;
        headFrameID_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 头像，头像框激活
 */
declare module protocol {
    class relation_head_pic_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        buyId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class os_full_discount_data_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        idArr: Array<info_full_discount>;
        idArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 满减特惠同步剩余购买次数
 */
declare module protocol {
    class os_full_discount_limit_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        Arr: Array<info_full_discount_limit>;
        Arr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class os_full_discount_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        item_arr: Array<number>;
        count_arr: Array<number>;
        item_arr_changed: boolean;
        count_arr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class os_full_discount_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取奖励
 */
declare module protocol {
    class os_holy_arrive_getaward_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取奖励
 */
declare module protocol {
    class os_holy_arrive_getaward_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取信息
 */
declare module protocol {
    class os_holy_arrive_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        ids: Array<number>;
        ids_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求领取奖励
 */
declare module protocol {
    class os_quanmin_changename_getaward_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class os_quanmin_changename_getaward_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 开服全民改名信息同步活动
 */
declare module protocol {
    class os_quanmin_changename_sync extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        rewardState: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 沙城争霸占领公会信息
 */
declare module protocol {
    class os_sha_cheng_battle_data_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class os_sha_cheng_battle_data_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        fistGuild: string;
        secondGuild: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class os_strongest_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: info_strongest_award;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取奖励
 */
declare module protocol {
    class os_strongest_getaward_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取奖励
 */
declare module protocol {
    class os_strongest_getaward_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取信息
 */
declare module protocol {
    class os_strongest_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infos: Array<info_strongest_award>;
        infos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class os_timed_suit_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        roleid: string;
        name: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class os_timed_suit_get_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        Id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class os_timed_suit_get_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class os_timed_suit_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        list: Array<info_suit_collect>;
        list_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class os_title_lease_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class os_title_lease_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class os_title_lease_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取奖励
 */
declare module protocol {
    class os_vice_arrive_getaward_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取奖励
 */
declare module protocol {
    class os_vice_arrive_getaward_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取信息
 */
declare module protocol {
    class os_vice_arrive_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        ids: Array<number>;
        ids_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同意所有添加好友请求的回复
 */
declare module protocol {
    class relation_friendAll_reply_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        info: Array<info_role_relation>;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 玩家登陆，将特惠礼包领取状态发给前端
 */
declare module protocol {
    class osa_tehui_gift_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        idArr: Array<number>;
        idArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 特惠礼包领取请求
 */
declare module protocol {
    class osa_tehui_gift_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 特惠礼包领取回复
 */
declare module protocol {
    class osa_tehui_gift_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步已通关的副本
 */
declare module protocol {
    class passed_fuben_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        arr: Array<info_passed_fuben>;
        configID: Array<number>;
        arr_changed: boolean;
        configID_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 元宝银行
 */
declare module protocol {
    class pay_bank_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        curNum: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求发工资
 */
declare module protocol {
    class pay_get_pay_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 发完回复
 */
declare module protocol {
    class pay_get_pay_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 充值通知
 */
declare module protocol {
    class pay_notice_syn extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 工资同步
 */
declare module protocol {
    class pay_pay_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        totalPay: number;
        todayPay: number;
        weekPay: number;
        isCanGet: boolean;
        totalPay_changed: boolean;
        todayPay_changed: boolean;
        weekPay_changed: boolean;
        isCanGet_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 提取元宝
 */
declare module protocol {
    class pay_ti_qu_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        num: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class pay_ti_qu_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class pet_active_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class pet_active_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class pet_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        currid: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 每个跟宠的信息
 */
declare module protocol {
    class pet_data_info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        validTime: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 激活的宠物信息
 */
declare module protocol {
    class pet_data_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        ids: Array<pet_data_info>;
        ids_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class pet_operate_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        oper: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class pet_operate_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 开服活动-啤酒盛宴请求购买
 */
declare module protocol {
    class pijiu_shengyan_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        itemId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 开服活动-啤酒盛宴回复购买
 */
declare module protocol {
    class pijiu_shengyan_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 开服活动-啤酒盛宴同步
 */
declare module protocol {
    class pijiu_shengyan_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        alreadyBuyIds: Array<number>;
        alreadyBuyIds_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 个人boss挑战次数同步_普通和精英共用
 */
declare module protocol {
    class pirvate_boss_challengne_info_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        canChallengeNum: number;
        lastRefTime: number;
        getExtraIds: Array<number>;
        getExtraIds_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 招财进宝条件变更
 */
declare module protocol {
    class play_dice_conchange_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: Array<info_condition>;
        flag: boolean;
        info_changed: boolean;
        flag_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 申请领取条件达成奖励
 */
declare module protocol {
    class play_dice_getcon_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        conid: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取条件奖励返回信息
 */
declare module protocol {
    class play_dice_getcon_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        conid: number;
        times: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 上线/上线跨天/在线跨天初始化协议
 */
declare module protocol {
    class play_dice_init_data_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        turns: number;
        times: number;
        pos: number;
        conkey: Array<number>;
        conkey_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 申请掷骰子
 */
declare module protocol {
    class play_dice_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 掷骰子返回信息
 */
declare module protocol {
    class play_dice_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        point: number;
        times: number;
        itemid: number;
        turns: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 播放特效数据
 */
declare module protocol {
    class play_effect_info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        delayTime: number;
        effectId: number;
        spriteId: number;
        spritePos: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 播放特效同步_神炉系统会攻击目标后触发服务器主动技能_播放技能特效
 */
declare module protocol {
    class play_effect_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        playEffInfos: Array<play_effect_info>;
        playEffInfos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同意所有添加好友请求
 */
declare module protocol {
    class relation_friendAll_reply_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        isAgree: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 一键邀请好友回复
 */
declare module protocol {
    class relation_friendAll_invite_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        info: Array<info_role_relation>;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 一键邀请所有好友
 */
declare module protocol {
    class relation_friendAll_invite_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        name: Array<string>;
        name_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 对方同意添加自己为好友同步消息
 */
declare module protocol {
    class relation_friend_reply_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        name: string;
        isAdd: number;
        isInitiator: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 是否接受好友邀请回复
 */
declare module protocol {
    class relation_friend_reply_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        isAgree: boolean;
        name: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 祈愿购买道具时间
 */
declare module protocol {
    class praying_buy_item_time_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 祈愿购买道具时间服务器返回
 */
declare module protocol {
    class praying_buy_item_time_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 祈愿信息同步
 */
declare module protocol {
    class praying_info_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        itemId: number;
        itemNum: number;
        remainingTime: number;
        prayingNum: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 祈愿奖励领取
 */
declare module protocol {
    class praying_reward_receive_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 祈愿奖励领取返回
 */
declare module protocol {
    class praying_reward_receive_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 祈愿奖励
 */
declare module protocol {
    class praying_select_reward_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        itemId: number;
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 祈愿奖励
 */
declare module protocol {
    class praying_select_reward_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 是否接受好友邀请请求
 */
declare module protocol {
    class relation_friend_reply_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleID: string;
        isAgree: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 好友邀请通知
 */
declare module protocol {
    class relation_friend_invite_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleID: string;
        name: string;
        lv: number;
        job: number;
        gender: number;
        roleAvatar: string;
        roleAvatarFrame: string;
        roleAvatar_changed: boolean;
        roleAvatarFrame_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 好友邀请回复
 */
declare module protocol {
    class relation_friend_invite_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        type: number;
        type_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 好友邀请请求
 */
declare module protocol {
    class relation_friend_invite_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        name: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 好友移除回复
 */
declare module protocol {
    class relation_friend_del_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步个人BOSS状态
 */
declare module protocol {
    class private_boss_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: Array<info_private_boss>;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入个人boss副本请求
 */
declare module protocol {
    class private_boss_enter_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入个人boss副本回复
 */
declare module protocol {
    class private_boss_enter_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 个人boss获取额外的挑战次数（黄金特权卡双倍）_普通精英boss公用的
 */
declare module protocol {
    class private_boss_get_extra_challengne_times_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        bSupplement: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回结果_个人boss获取额外的挑战次数（黄金特权卡双倍）_普通精英boss公用的
 */
declare module protocol {
    class private_boss_get_extra_challengne_times_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
        bSupplement: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 加载个人BOSS状态
 */
declare module protocol {
    class private_boss_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: Array<info_private_boss>;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * // 个人boss 副本状态同步
 */
declare module protocol {
    class private_boss_state_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        state: number;
        awardState: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 申请购买特权卡
 */
declare module protocol {
    class privilege_card_buy_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        ID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 购买特权卡结果
 */
declare module protocol {
    class privilege_card_buy_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        nID: number;
        award: number;
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 特权卡每日奖励领奖
 */
declare module protocol {
    class privilege_card_daily_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 特权卡每日领奖结果
 */
declare module protocol {
    class privilege_card_daily_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 特权卡初始化
 */
declare module protocol {
    class privilege_card_init extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infos: Array<info_card>;
        infos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入副本地图
 */
declare module protocol {
    class pro_boss_team_clone_enter_map extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        dieboss: number;
        time: number;
        bossID: number;
        cloneID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入地图初始化
 */
declare module protocol {
    class pro_boss_team_clone_init extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        count: number;
        diff: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 更新副本内数据
 */
declare module protocol {
    class pro_boss_team_clone_update extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        dieboss: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 上线初始化推送数据协议
 */
declare module protocol {
    class push_pay_init_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        pushlist: Array<number>;
        pushlist_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 向服务发送已达成的enumroleoncedata
 */
declare module protocol {
    class push_pay_sever_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class qi_fu_buy_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class qi_fu_buy_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class qi_fu_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: info_qi_fu;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class qiu_mo_enter_next_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        ceng: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class qiu_mo_enter_next_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        ceng: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class qiu_mo_enter_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        leftTime: number;
        bossCount: number;
        itemCount: number;
        maxCeng: number;
        leftTime_changed: boolean;
        bossCount_changed: boolean;
        itemCount_changed: boolean;
        maxCeng_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 玩家充值到账通知
 */
declare module protocol {
    class recharge_arrival_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        money: number;
        orderId: string;
        gold: number;
        goldGift: number;
        chargeType: number;
        orderId_changed: boolean;
        gold_changed: boolean;
        goldGift_changed: boolean;
        chargeType_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 充值领取请求
 */
declare module protocol {
    class recharge_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        ID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 充值领到请求返回
 */
declare module protocol {
    class recharge_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 充值金额
 */
declare module protocol {
    class recharge_data_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        idArr: Array<number>;
        sum: number;
        day: number;
        firstTime: number;
        firstGetIds: Array<number>;
        state_changed: boolean;
        idArr_changed: boolean;
        sum_changed: boolean;
        day_changed: boolean;
        firstTime_changed: boolean;
        firstGetIds_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 首充奖励领取
 */
declare module protocol {
    class recharge_first_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        awardId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 首充领奖返回
 */
declare module protocol {
    class recharge_first_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        awardId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 终身首冲数据列表
 */
declare module protocol {
    class recharge_life_first_pay_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        data: Array<number>;
        data_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 客户端端闪断之后重新连接尝试
 */
declare module protocol {
    class reconnect_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        serverNumber: number;
        sig: string;
        token: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 重连响应
 */
declare module protocol {
    class reconnect_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 黑名单添加请求
 */
declare module protocol {
    class relation_black_add_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        name: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 黑名单添加回复
 */
declare module protocol {
    class relation_black_add_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        name: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 黑名单移除请求
 */
declare module protocol {
    class relation_black_del_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        targetID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 黑名单移除回复
 */
declare module protocol {
    class relation_black_del_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class relation_call_count_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 好友召唤答复 请求
 */
declare module protocol {
    class relation_call_friend_reply_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        agree: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 好友召唤答复 回复
 */
declare module protocol {
    class relation_call_friend_reply_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 召唤好友回复
 */
declare module protocol {
    class relation_call_friend_reply_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        roleID: string;
        roleName: string;
        roleName_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 召唤好友请求
 */
declare module protocol {
    class relation_call_friend_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 召唤好友回复
 */
declare module protocol {
    class relation_call_friend_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        roleID: string;
        roleName: string;
        roleName_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 被添加好友通知
 */
declare module protocol {
    class relation_call_friend_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleID: string;
        roleName: string;
        mapID: number;
        x: number;
        y: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 召唤cd
 */
declare module protocol {
    class relation_call_guild_cd_time_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        time: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 被召唤答复请求
 */
declare module protocol {
    class relation_call_guild_reply_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        agree: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会召唤答复 回复
 */
declare module protocol {
    class relation_call_guild_reply_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 召唤帮会成员回复
 */
declare module protocol {
    class relation_call_guild_reply_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        roleID: string;
        roleName: string;
        roleName_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 召唤帮会成员
 */
declare module protocol {
    class relation_call_guild_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 召唤帮会成员回复
 */
declare module protocol {
    class relation_call_guild_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        roleID: string;
        roleName: string;
        roleName_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 被召唤帮会成员通知
 */
declare module protocol {
    class relation_call_guild_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleID: string;
        roleName: string;
        mapID: number;
        x: number;
        y: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步人物关系
 */
declare module protocol {
    class relation_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: info_role_relation;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 添加仇人请求
 */
declare module protocol {
    class relation_enemy_add_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        targetID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 仇人添加回复
 */
declare module protocol {
    class relation_enemy_add_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        name: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 仇人移除请求
 */
declare module protocol {
    class relation_enemy_del_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        targetID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 仇人移除回复
 */
declare module protocol {
    class relation_enemy_del_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 好友移除请求
 */
declare module protocol {
    class relation_friend_del_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        targetID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class osa_tehui_gift_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        idArr: Array<number>;
        idArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步信息
 */
declare module protocol {
    class preorder_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        arr: Array<info_preorder>;
        day: number;
        arr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 预购领奖
 */
declare module protocol {
    class preorder_get_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        orderID: number;
        orderType: number;
        day: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 购买回复
 */
declare module protocol {
    class preorder_buy_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        orderID: number;
        orderType: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 立即购买
 */
declare module protocol {
    class preorder_buy_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        orderID: number;
        orderType: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 全民BOSS数据加载
 */
declare module protocol {
    class popular_boss_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: Array<info_condition>;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 全民BOSS数据改变
 */
declare module protocol {
    class popular_boss_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: Array<info_condition>;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取全民BOSS奖励回复
 */
declare module protocol {
    class popular_boss_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取全民BOSS奖励请求
 */
declare module protocol {
    class popular_boss_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 剧情配置ID推送
 */
declare module protocol {
    class plot_config_id_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        ID: number;
        Array: Array<info_plot>;
        Array_changed: boolean;
    }
}
declare module protocol {
    class ProtocolParam {
        id: any;
        fieldDict: Object;
        fieldList: Array<ProtocolField>;
        changeFieldList: Array<ProtocolField>;
        changeFlagsLength: number;
        constructor(id: number, fieldArray: Array<Array<any>>);
    }
    class ProtocolField {
        name: string;
        type: ProtocolParamType;
        fieldType: ProtocolFieldType;
        constructor(array: Array<any>);
        isOptional(): boolean;
        isRepeated(): boolean;
        isCustom(): boolean;
    }
    enum ProtocolParamType {
        required = 0,
        optional = 1,
        repeated = 2,
    }
    enum ProtocolFieldType {
        byte = 0,
        boolean = 1,
        int = 2,
        uint = 3,
        short = 4,
        ushort = 5,
        float = 6,
        double = 7,
        string = 8,
        bytes = 9,
        custom = 10,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回排行榜一页数据
 */
declare module protocol {
    class os_boss_rank_page_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        page: number;
        infoArr: Array<info_role_rank>;
        totalPage: number;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 开服boss排行请求排行榜一页的数据
 */
declare module protocol {
    class os_boss_rank_page_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        page: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 开服boss排行返回自己的信息
 */
declare module protocol {
    class os_boss_rank_my_info_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        rank: number;
        score: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 开服boss排行请求自己的信息
 */
declare module protocol {
    class os_boss_rank_my_info_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 开服活动列表加载
 */
declare module protocol {
    class open_server_activity_list_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: Array<info_commercial_activity>;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 官职升级回复
 */
declare module protocol {
    class office_uplv_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        officeLv: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 官职升级请求
 */
declare module protocol {
    class office_uplv_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 声望值改变同步
 */
declare module protocol {
    class office_reputation_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        val: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 登陆同步官位信息
 */
declare module protocol {
    class office_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        officeID: number;
        chopID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求最后一个捐红包的人是否在线
 */
declare module protocol {
    class notional_red_donate_online_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 升级返回
 */
declare module protocol {
    class neigong_uplv_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 内功升级
 */
declare module protocol {
    class neigong_uplv_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * //同步背景图编号
 */
declare module protocol {
    class neigong_bg_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        ID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 合服活动列表加载
 */
declare module protocol {
    class merger_server_activity_list_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: Array<info_commercial_activity>;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class mars_rebate_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: Array<info_mars_rebate>;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 侍卫返利返还元宝回复
 */
declare module protocol {
    class mars_rebate_return_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 侍卫返利返还元宝请求
 */
declare module protocol {
    class mars_rebate_return_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        marsID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领地战场景内数据同步
 */
declare module protocol {
    class manor_battle_scene_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        count: number;
        guildName: string;
        count_changed: boolean;
        guildName_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 获取领地战占有信息
 */
declare module protocol {
    class manor_battle_info_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        manorData: Array<info_manor_battle>;
        manorData_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 获取领地战占有信息
 */
declare module protocol {
    class manor_battle_info_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领地战进入
 */
declare module protocol {
    class manor_battle_enter_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入领地战
 */
declare module protocol {
    class manor_battle_enter_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        manorId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领地战数据同步
 */
declare module protocol {
    class manor_battle_data_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        awardState: number;
        manorData: Array<info_manor_battle>;
        awardState_changed: boolean;
        manorData_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 渡劫答题
 */
declare module protocol {
    class releve_dujie_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        arr: Array<number>;
        arr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class releve_dujie_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 转生修为值兑换
 */
declare module protocol {
    class relevel_cultivation_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 转生返回修为值
 */
declare module protocol {
    class relevel_cultivation_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 接扫渡劫后不转升下次转生前不用渡劫
 */
declare module protocol {
    class relevel_dujie_info_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        show: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领地战领奖
 */
declare module protocol {
    class manor_battle_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领地战领奖
 */
declare module protocol {
    class manor_battle_award_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 升级遗物
 */
declare module protocol {
    class relic_change_level_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 状态返回
 */
declare module protocol {
    class relic_change_level_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 升级返回
 */
declare module protocol {
    class relic_change_level_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        lv: number;
        val: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 遗物一键装备
 */
declare module protocol {
    class relic_equipment_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        source: Array<number>;
        target: Array<number>;
        source_changed: boolean;
        target_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 一键装备状态返回
 */
declare module protocol {
    class relic_equipment_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 遗物登陆同步等级
 */
declare module protocol {
    class relic_load_data_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        lv: number;
        val: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 遗物回收
 */
declare module protocol {
    class relic_recycle_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        itenPos: Array<number>;
        itenPos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 装备回收返回
 */
declare module protocol {
    class relic_recycle_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 购买数量信息
 */
declare module protocol {
    class mall_score_data_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        itemID: Array<number>;
        buyCnt: Array<number>;
        itemID_changed: boolean;
        buyCnt_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步商城刷新数据
 */
declare module protocol {
    class mall_refresh_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        refreshInfos: Array<info_mall_refresh>;
        refreshInfos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class mall_refresh_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class mall_refresh_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        mallType: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 提交限时任务回复
 */
declare module protocol {
    class limit_mission_submit_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 提交限时任务请求
 */
declare module protocol {
    class limit_mission_submit_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 限时任务完成人数
 */
declare module protocol {
    class limit_mission_num_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        stage: number;
        num: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 限时任务加载
 */
declare module protocol {
    class limit_mission_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: Array<info_condition>;
        lastTime: number;
        stage: number;
        num: number;
        award: boolean;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 限时任务更新
 */
declare module protocol {
    class limit_mission_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: Array<info_condition>;
        award: boolean;
        infoArr_changed: boolean;
        award_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 限时任务阶段奖励回复
 */
declare module protocol {
    class limit_mission_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        stage: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 限时任务阶段奖励请求
 */
declare module protocol {
    class limit_mission_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        stage: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class lie_bian_result extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        result: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class kill_boss_get_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class kill_boss_get_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class kill_boss_data_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: Array<info_kill_boss>;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步体力领取ID
 */
declare module protocol {
    class jiulong_sync_get_power_tbId extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        tbIdArr: Array<number>;
        tbIdArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步倒计时
 */
declare module protocol {
    class jiulong_physical_timer_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        onesec: number;
        allsec: number;
        curpower: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class robot_enter_map_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        mapID: number;
        activeID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class robot_move_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        x: number;
        y: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class robot_move_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 九龙山关卡结束通知
 */
declare module protocol {
    class jiulong_level_finish_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        isfirst: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 杀敌计数同步
 */
declare module protocol {
    class jiulong_kill_count_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        killCount: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 获取体力返回
 */
declare module protocol {
    class jiulong_get_power_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //获取体力
 */
declare module protocol {
    class jiulong_get_power_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入九龙山关卡回复
 */
declare module protocol {
    class jiulong_enter_level_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        level: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入关卡
 */
declare module protocol {
    class jiulong_enter_level_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        level: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 精英阁排名信息同步
 */
declare module protocol {
    class jing_ying_ge_rank_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        rankName: Array<string>;
        remainTime: number;
        bossState: number;
        rankName_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 精英阁进入返回
 */
declare module protocol {
    class jing_ying_ge_enter_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求进入精英阁
 */
declare module protocol {
    class jing_ying_ge_enter_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 精英阁当前层路线状态同步
 */
declare module protocol {
    class jing_ying_ge_direction_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        direction: number;
        remainTime: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步第九层信息
 */
declare module protocol {
    class jing_ying_ge_award_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        rank: number;
        rank_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class investment_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        receivePHR: Array<number>;
        copies: number;
        receivePHR_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class investment_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        receive: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 充值额外赠送的理财数据
 */
declare module protocol {
    class investment_info_ext_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        copies: number;
        extGivedArr: Array<number>;
        extGivedArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 祈福获取信息
 */
declare module protocol {
    class info_qifu_gain extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        dayget: number;
        count: number;
        lastcri: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 铸灵等级同步
 */
declare module protocol {
    class hreo_cast_soul_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        zhulingLV: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 节日活动列表加载
 */
declare module protocol {
    class holiday_activity_list_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: Array<info_commercial_activity>;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 购买返回结果
 */
declare module protocol {
    class hero_trial_buy_count_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //购买次数
 */
declare module protocol {
    class hero_trial_buy_count_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 奖励结构
 */
declare module protocol {
    class hero_toughen_reward extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        num: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 英雄历练数据加载
 */
declare module protocol {
    class hero_toughen_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        leftsec: number;
        heroexp: number;
        itemArr: Array<hero_toughen_reward>;
        itemArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 英雄历练领奖响应
 */
declare module protocol {
    class hero_toughen_get_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求奖励
 */
declare module protocol {
    class hero_toughen_get_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 英雄历练开始响应
 */
declare module protocol {
    class hero_toughen_begin_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求开始历练
 */
declare module protocol {
    class hero_toughen_begin_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class hero_sleep_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        sleep: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 宝石分解
 */
declare module protocol {
    class role_gem_decompose_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        pos: Array<number>;
        pos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 分解回复
 */
declare module protocol {
    class role_gem_decompose_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        val: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步宝石套装信息
 */
declare module protocol {
    class role_gem_suitinfo_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: Array<info_gem_suit_info>;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //待机请求
 */
declare module protocol {
    class hero_sleep_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //技能替换
 */
declare module protocol {
    class hero_skill_replace_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        skillID: number;
        newInfo: info_skill;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class hero_skill_remove_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        skillID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //同步英雄技能数据
 */
declare module protocol {
    class hero_skill_list_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: Array<info_skill>;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //技能改变同步
 */
declare module protocol {
    class hero_skill_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: info_skill;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class hero_select_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
        sex: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求选择英雄
 */
declare module protocol {
    class hero_select_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        sex: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class hero_rebirth_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 英雄转生请求
 */
declare module protocol {
    class hero_rebirth_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class hero_rebirth_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        cultivationCount: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 转生返回修为值
 */
declare module protocol {
    class hero_rebirth_cultivation_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 转生修为值兑换
 */
declare module protocol {
    class hero_rebirth_cultivation_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class hero_lock_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        spriteID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class hero_lock_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        spriteID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class hero_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: info_hero_base;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //同步英雄复活时间
 */
declare module protocol {
    class hero_load_reliveTime extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        reliveTime: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //英雄初始化完毕
 */
declare module protocol {
    class hero_init_end_syn extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 圣兽升级返回
 */
declare module protocol {
    class hero_holy_beast_lvup_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 圣兽升级
 */
declare module protocol {
    class hero_holy_beast_lvup_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 神器升级结果
 */
declare module protocol {
    class hero_god_weapon_lv_up_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 申请升级神器
 */
declare module protocol {
    class hero_god_weapon_lv_up_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        ID: number;
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 英雄神器上线初始化
 */
declare module protocol {
    class hero_god_weapon_init extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: Array<info_hero_god_weapon>;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 抵消时间结果
 */
declare module protocol {
    class hero_god_weapon_cost_time_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求花钱抵消时间等待
 */
declare module protocol {
    class hero_god_weapon_cost_time_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        ID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 英雄神器时间到激活神器
 */
declare module protocol {
    class hero_god_weapon_activate_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: Array<info_hero_god_weapon>;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class hero_equip_zhuhun_uplv_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class hero_equip_zhuhun_uplv_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        pos: number;
        flag: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 英雄装备槽强化回复
 */
declare module protocol {
    class hero_equip_strengthen_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 英雄装备槽强化请求
 */
declare module protocol {
    class hero_equip_strengthen_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        pos: number;
        flag: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 英雄装备槽加载同步
 */
declare module protocol {
    class hero_equip_strengthen_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: Array<info_equip_strengthen>;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 升级状态更新
 */
declare module protocol {
    class hero_equip_strengthen_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: info_equip_strengthen;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class hero_enable_skill_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class hero_enable_skill_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        category: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 升级请求状态回复
 */
declare module protocol {
    class hero_cloak_up_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //同步虚空幻境击杀怪物计数
 */
declare module protocol {
    class role_sycn_xkhj_kill_monster_count extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 披风升级请求
 */
declare module protocol {
    class hero_cloak_up_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        auto: number;
        auto_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class hero_cloak_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        wish: number;
        number: number;
        currten_show_app_id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class hero_change_mod_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        mod: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求改变英雄状态
 */
declare module protocol {
    class hero_change_mod_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        mod: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 火武魂升级请求
 */
declare module protocol {
    class role_warrior_soul_level_up_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 升级返回消息
 */
declare module protocol {
    class role_warrior_soul_level_up_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class role_warrior_soul_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: Array<info_role_warrior_soul>;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class hero_change_job_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class hero_change_job_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        itemid: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 铸灵升级回复
 */
declare module protocol {
    class hero_cast_soul_up_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 铸灵升级请求
 */
declare module protocol {
    class hero_cast_soul_up_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class runestone_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        posID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 符石槽位syn
 */
declare module protocol {
    class runestone_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        posArray: Array<number>;
        posArray_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 符石槽位升级请求
 */
declare module protocol {
    class runestone_upLv_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        pos: number;
        skillType: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 符石槽位升级回复
 */
declare module protocol {
    class runestone_upLv_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class hero_attr_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        attrArr: Array<info_role_attr>;
        attrArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class hangover_lucky_draw_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        ID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 遗物抽奖请求
 */
declare module protocol {
    class hangover_lucky_draw_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class hangover_lucky_draw_data_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        IDArr: Array<number>;
        time: number;
        isAuto: boolean;
        IDArr_changed: boolean;
        time_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //规定_web后台命令只能从逻辑服使用__需要同步到对应的跨服
 */
declare module protocol {
    class s2cs_web_msg_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        protoid: number;
        serverNum: number;
        webMsgData: egret.ByteArray;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 服务器之间传递的_角色_扩展_数据
 */
declare module protocol {
    class s2s_player_extend_info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        PlayerMailInfo: egret.ByteArray;
        PlayerAttrGroupDic: egret.ByteArray;
        userPartialInfo: egret.ByteArray;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 安全挂机请求
 */
declare module protocol {
    class safe_guaji_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 安全挂机返回
 */
declare module protocol {
    class safe_guaji_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class hangover_lucky_draw_data_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 能领取的奖励
 */
declare module protocol {
    class grade_award_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        idArr: Array<number>;
        idArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 神格升级
 */
declare module protocol {
    class godhood_upgrade_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 神格升级
 */
declare module protocol {
    class godhood_upgrade_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 神格兑换圣龙币
 */
declare module protocol {
    class godhood_exchange_saint_dragon_currency_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 神格兑换圣龙币
 */
declare module protocol {
    class godhood_exchange_saint_dragon_currency_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 神元兑换
 */
declare module protocol {
    class god_pulse_val_exchange_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 神元兑换
 */
declare module protocol {
    class god_pulse_val_exchange_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 神元兑换次数购买
 */
declare module protocol {
    class god_pulse_val_exchange_buy_count_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 很远兑换次数购买
 */
declare module protocol {
    class god_pulse_val_exchange_buy_count_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 神脉升级
 */
declare module protocol {
    class god_pulse_upgraed_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 神脉升级
 */
declare module protocol {
    class god_pulse_upgraed_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class god_pavilion_refresh_boss_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class god_pavilion_map_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        vipNum: number;
        freeNum: number;
        vipLv: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class god_pavilion_map_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        kind: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 荣耀征战三个玩法的开启时间
 */
declare module protocol {
    class glory_battle_time_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        manor_time: number;
        wu_shuang_time: number;
        sha_cheng_time: number;
        canApply: number;
        manor_time_changed: boolean;
        wu_shuang_time_changed: boolean;
        sha_cheng_time_changed: boolean;
        canApply_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 荣耀征战三个玩法的开启时间
 */
declare module protocol {
    class glory_battle_time_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        activeId: number;
        activeId_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 获取屠魔Boss info
 */
declare module protocol {
    class get_tumo_boss_info_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取状态
 */
declare module protocol {
    class get_grade_reward_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 可领取奖励的ID
 */
declare module protocol {
    class get_grade_reward_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class get_grade_reward_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        idArr: Array<number>;
        Lv: number;
        idArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class get_grade_reward_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        idArr: Array<number>;
        idArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 选择英雄披风显示外观
 */
declare module protocol {
    class select_hero_cloak_show_appearance_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        appearance_id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 选择英雄披风外观DI回应
 */
declare module protocol {
    class select_hero_cloak_show_appearance_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        select_appearance_id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 占领方人员显示数据回复
 */
declare module protocol {
    class gcz_role_show_load_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        infoArr: Array<info_role_show>;
        guildNameArr: Array<string>;
        startTime: number;
        endTime: number;
        infoArr_changed: boolean;
        guildNameArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 发送到跨服的登陆消息
 */
declare module protocol {
    class send_to_cross_login_info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        crossType: number;
        sig: string;
        sendToCrossPlayerInfo: send_to_cross_player_info;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 发送到开服的玩家信息
 */
declare module protocol {
    class send_to_cross_player_info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        PlayerInfo: egret.ByteArray;
        PlayerExData: s2s_player_extend_info;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 占领方人员显示数据请求
 */
declare module protocol {
    class gcz_role_show_load_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class Gate2Logic_CrossServerState extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        crossType: number;
        crossState: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 网关通知逻辑服跨服已连接
 */
declare module protocol {
    class Gate2Logic_Cross_Regist_res extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步逻辑服务器数据到跨服
 */
declare module protocol {
    class Gate2Cross_SyncLogicServerInfo extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        logicInfo: egret.ByteArray;
        serverNumber: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 洪荒boss回复
 */
declare module protocol {
    class flood_shortage_boss_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: Array<info_flood_shortage_boss>;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 洪荒boss请求
 */
declare module protocol {
    class flood_shortage_boss_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class flood_shortage_boss_load extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: Array<info_flood_shortage_boss>;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class flood_shortage_boss_cross_res_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleID: string;
        info: Array<info_flood_shortage_boss>;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 处理申请
 */
declare module protocol {
    class sha_cheng_battle_apply_handle_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        guildId: string;
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 处理申请
 */
declare module protocol {
    class sha_cheng_battle_apply_handle_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        applyList: Array<info_sha_cheng_apply>;
        joinList: Array<info_sha_cheng_join>;
        applyList_changed: boolean;
        joinList_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 沙城战查看联盟申请列表
 */
declare module protocol {
    class sha_cheng_battle_apply_list_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 沙城战查看联盟申请列表
 */
declare module protocol {
    class sha_cheng_battle_apply_list_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        applyList: Array<info_sha_cheng_apply>;
        applyList_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 沙城报名提示
 */
declare module protocol {
    class sha_cheng_battle_apply_notice_syn extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 沙城战申请加入联盟
 */
declare module protocol {
    class sha_cheng_battle_apply_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        camp: number;
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 沙城战申请加入联盟
 */
declare module protocol {
    class sha_cheng_battle_apply_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        applyStateCamp1: number;
        applyStateCamp2: number;
        applyStateCamp1_changed: boolean;
        applyStateCamp2_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入沙城
 */
declare module protocol {
    class sha_cheng_battle_enter_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入地图
 */
declare module protocol {
    class sha_cheng_battle_enter_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 沙城面板数据（改版后）
 */
declare module protocol {
    class sha_cheng_battle_info_new_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 沙城面板数据（改版后）
 */
declare module protocol {
    class sha_cheng_battle_info_new_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        isFirst: number;
        mergerCount: number;
        sha_cheng_time: number;
        guildName: string;
        member: Array<info_sha_cheng_member>;
        mergerCount_changed: boolean;
        guildName_changed: boolean;
        member_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 沙城战信息面板
 */
declare module protocol {
    class sha_cheng_battle_info_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 沙城战信息
 */
declare module protocol {
    class sha_cheng_battle_info_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        castellan: string;
        castellanGuild: string;
        guildIdCamp1: string;
        guildNameCamp1: string;
        guildLeaderrCamp1: string;
        applyStateCamp1: number;
        guildIdCamp2: string;
        guildNameCamp2: string;
        guildLeaderrCamp2: string;
        applyStateCamp2: number;
        joinList: Array<info_sha_cheng_join>;
        canApply: number;
        haveApply: number;
        castellan_changed: boolean;
        castellanGuild_changed: boolean;
        guildIdCamp1_changed: boolean;
        guildNameCamp1_changed: boolean;
        guildLeaderrCamp1_changed: boolean;
        applyStateCamp1_changed: boolean;
        guildIdCamp2_changed: boolean;
        guildNameCamp2_changed: boolean;
        guildLeaderrCamp2_changed: boolean;
        applyStateCamp2_changed: boolean;
        joinList_changed: boolean;
        canApply_changed: boolean;
        haveApply_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 沙城申请人被处理申请信息同步
 */
declare module protocol {
    class sha_cheng_battle_info_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        applyStateCamp1: number;
        applyStateCamp2: number;
        joinList: Array<info_sha_cheng_join>;
        applyStateCamp1_changed: boolean;
        applyStateCamp2_changed: boolean;
        joinList_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 沙城占领日志
 */
declare module protocol {
    class sha_cheng_battle_log_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 沙城日志
 */
declare module protocol {
    class sha_cheng_battle_log_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        logs: Array<info_wu_shuang_battle_log>;
        logs_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服请求本服数据
 */
declare module protocol {
    class flood_shortage_boss_cross_req_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 洪荒boss修改后给跨服同步
 */
declare module protocol {
    class flood_shortage_boss_cross_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        serverNumber: number;
        infos: Array<info_flood_shortage_boss>;
        infos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 时装回收返回
 */
declare module protocol {
    class fashion_recovery_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 沙城合服城主帮会名
 */
declare module protocol {
    class sha_cheng_merger_leaders_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 沙城合服城主帮会名
 */
declare module protocol {
    class sha_cheng_merger_leaders_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        name: Array<string>;
        sha_cheng_time: number;
        name_changed: boolean;
        sha_cheng_time_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 时装回收
 */
declare module protocol {
    class fashion_recover_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        posID: Array<number>;
        posID_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 兑换协议返回
 */
declare module protocol {
    class exchange_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 兑换请求
 */
declare module protocol {
    class exchange_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        num: number;
        operationID: number;
        operationID_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入全民除魔返回
 */
declare module protocol {
    class enter_tumo_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //进入屠魔
 */
declare module protocol {
    class enter_tumo_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        bossId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 每日是否可使用此物品
 */
declare module protocol {
    class energy_use_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        surplus: number;
        cardCount: number;
        surplus_changed: boolean;
        cardCount_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class energy_use_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        exp: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class energy_use_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        pos: number;
        type: number;
        multiple: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步龙魂属性
 */
declare module protocol {
    class dragon_soul_sync_attrs extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        attrTypes: Array<number>;
        attrVals: Array<number>;
        attrTypes_changed: boolean;
        attrVals_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //合成龙魂精华应答
 */
declare module protocol {
    class dragon_soul_smelt_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        selectEssenceTypeArray: Array<number>;
        selectEssenceTypeArray_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 龙魂熔炼
 */
declare module protocol {
    class dragon_soul_smelt_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        ItemType: number;
        selectEssenceTypeArray: Array<number>;
        selectEssenceTypeArray_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //确认按钮
 */
declare module protocol {
    class dragon_soul_ok extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class dragon_soul_ok_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回结果
 */
declare module protocol {
    class dragon_soul_baptize_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        attrType: Array<number>;
        attrVal: Array<number>;
        attrType_changed: boolean;
        attrVal_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 龙魂洗练
 */
declare module protocol {
    class dragon_soul_baptize_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        lockAttrIds: Array<number>;
        lockAttrIds_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //注魂返回
 */
declare module protocol {
    class dragon_soul_add_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //龙魂添加注魂值
 */
declare module protocol {
    class dragon_soul_add_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        dragon_soul_attr: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步日常玩法限时活跃活动数据
 */
declare module protocol {
    class DailyLimitActivity_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        week: number;
        activityIDarr: Array<number>;
        activityIDarr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步改变后活动状态
 */
declare module protocol {
    class DailyLimitActivity_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: Array<info_limitactivity>;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class daily_activity_mbcz_vote_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 信息改变推送
 */
declare module protocol {
    class shenlu_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: shenlu_exp_xiuwei_shenlu_info;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //膜拜投票（0表示鄙视1表示支持）
 */
declare module protocol {
    class daily_activity_mbcz_vote_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 主动推送同步修炼神炉信息
 */
declare module protocol {
    class shenLu_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: Array<shenlu_exp_xiuwei_shenlu_info>;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 修炼请求
 */
declare module protocol {
    class shenlu_practice_upgrade_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求回复修炼炉
 */
declare module protocol {
    class shenlu_practice_upgrade_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取修炼奖励
 */
declare module protocol {
    class shenlu_receive_reward_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 回复请求奖励
 */
declare module protocol {
    class shenlu_receive_reward_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 主动点击请求解锁
 */
declare module protocol {
    class shenlu_unlock_id_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 主动解锁id回复
 */
declare module protocol {
    class shenlu_unlock_id_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //支持率变化时同步给全服在线人
 */
declare module protocol {
    class daily_activity_mbcz_vote_rate_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        supportConut: number;
        againstConut: number;
        conut: number;
        times: number;
        state: number;
        isOpenDstx: boolean;
        supportConut_changed: boolean;
        againstConut_changed: boolean;
        conut_changed: boolean;
        times_changed: boolean;
        state_changed: boolean;
        isOpenDstx_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class daily_activity_mbcz_updata_exp_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //刷倍数（0表示一键十倍，1表示刷新奖励）
 */
declare module protocol {
    class daily_activity_mbcz_updata_exp_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class si_xiang_feng_yin_buy_buff_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        configID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class si_xiang_feng_yin_buy_buff_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class si_xiang_feng_yin_collect_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        configID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class si_xiang_feng_yin_collect_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        configID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class si_xiang_feng_yin_enter_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class si_xiang_feng_yin_enter_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class si_xiang_feng_yin_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        count: number;
        configID: Array<number>;
        configID_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class si_xiang_feng_yin_scene_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        flag: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class daily_activity_mbcz_open_dstx_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //城主开启大赦天下
 */
declare module protocol {
    class daily_activity_mbcz_open_dstx_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class daily_activity_mbcz_enter_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 参与膜拜城主活动
 */
declare module protocol {
    class daily_activity_mbcz_enter_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class dai_lian_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        ID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 开始代练请求
 */
declare module protocol {
    class dai_lian_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        ID: number;
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class dai_lian_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArray: Array<info_dai_lian>;
        dailianTime: number;
        infoArray_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class skill_nvqi_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        val: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class dai_lian_cur_time_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 打开面板时请求当前代练剩余时间
 */
declare module protocol {
    class dai_lian_cur_time_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class dai_lian_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: info_dai_lian;
        time: number;
        info_changed: boolean;
        time_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class dai_lian_add_time_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 增加代练时间
 */
declare module protocol {
    class dai_lian_add_time_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        time: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 加载城主形象回复
 */
declare module protocol {
    class da_mbcz_master_load_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        info: info_role_show;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 加载城主形象请求
 */
declare module protocol {
    class da_mbcz_master_load_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 组跨服聊天(正常逻辑服聊天发送到组跨服服务器)
 */
declare module protocol {
    class ctc_s2cs_chat_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        chatMessage: chat_message_syn;
        equipInfo: string;
        sendServerNum: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 圣龙战场_个人阶段奖励信息_同步
 */
declare module protocol {
    class slzc_get_stage_reward_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        canRewardId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 组跨服聊天(组跨服服务器聊天广播通知正常逻辑服)
 */
declare module protocol {
    class ctc_cs2s_chat_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        chatMessage: chat_message_syn;
        equipInfo: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服2逻辑服，公告同步
 */
declare module protocol {
    class cs2s_system_notice_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        noticeNo: number;
        msg: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服2逻辑服，邮件同步.跨服角色不在线，去对应的逻辑服找.
 */
declare module protocol {
    class cs2s_mails_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        mails: Array<cs2s_mail_info>;
        mails_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服2逻辑服,邮件里的物品
 */
declare module protocol {
    class cs2s_mail_item_info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        baseID: number;
        count: number;
        bind: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服2逻辑服,邮件
 */
declare module protocol {
    class cs2s_mail_info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleId: string;
        sender: string;
        title: string;
        content: string;
        awardGoldFree: number;
        awardGoldBind: number;
        awardVIPPointFree: number;
        awardVIPPointBind: number;
        items: Array<cs2s_mail_item_info>;
        items_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服到逻辑服-日常限时任务状态同步
 */
declare module protocol {
    class cs2s_daily_activity_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        activityId: number;
        activityState: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服初始化开始
 */
declare module protocol {
    class cross_init_start_syn extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服初始化结束
 */
declare module protocol {
    class cross_init_end_syn extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class cross_battleground_get_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class cross_battleground_get_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class cross_battleground_award_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        ids: Array<number>;
        ids_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class cross_battleground_award_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 官印装备回复
 */
declare module protocol {
    class chop_equip_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        chopID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 官印装备请求
 */
declare module protocol {
    class chop_equip_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        chopID: number;
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 聊天动作回复
 */
declare module protocol {
    class chat_action_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class smeltsoul_level_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class smeltsoul_level_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        lv: number;
        exp: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class smeltsoul_piece_exchange_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        pieceID: Array<number>;
        number: number;
        pieceID_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //兑换炼魂碎片
 */
declare module protocol {
    class smeltsoul_piece_exchange_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        val1: number;
        val2: number;
        pieceID: Array<number>;
        pieceID_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 炼魂封印激活
 */
declare module protocol {
    class smeltsoul_seal_activation_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        pieceID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //炼魂升级
 */
declare module protocol {
    class smeltsoul_seal_activation_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        pieceID: number;
        lv: number;
        pieceNum1: number;
        pieceNum2: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //炼魂数据同步信息
 */
declare module protocol {
    class smeltsoul_seal_group_info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        baseID: Array<number>;
        gpieceID: number;
        pieceNum: Array<number>;
        posIds: Array<number>;
        baseID_changed: boolean;
        pieceNum_changed: boolean;
        posIds_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class smeltsoul_seal_group_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infos: Array<smeltsoul_seal_group_info>;
        infos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 聊天动作请求
 */
declare module protocol {
    class chat_action_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        param: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 玩家登陆时同步玩家特权卡数据
 */
declare module protocol {
    class card_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        cardInfo: Array<info_card>;
        cardInfo_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class card_get_welfare_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取特权卡每日福利请求
 */
declare module protocol {
    class card_get_welfare_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 卡有变化时同步变化的数据
 */
declare module protocol {
    class card_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        cardInfo: Array<info_card>;
        cardInfo_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 激活卡回复
 */
declare module protocol {
    class card_activate_card_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 激活卡请求
 */
declare module protocol {
    class card_activate_card_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 购买全民屠魔进入次数
 */
declare module protocol {
    class buy_tumo_enter_count_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 购买全民屠魔进入次数
 */
declare module protocol {
    class buy_tumo_enter_count_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 碎银矿脉数据同步
 */
declare module protocol {
    class sui_yin_kuang_mai_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        count: number;
        startCount: number;
        tramcarOwner1: string;
        tramcarOwner2: string;
        tramcarOwner3: string;
        tramcarStat1: number;
        tramcarStat2: number;
        tramcarStat3: number;
        count_changed: boolean;
        startCount_changed: boolean;
        tramcarOwner1_changed: boolean;
        tramcarOwner2_changed: boolean;
        tramcarOwner3_changed: boolean;
        tramcarStat1_changed: boolean;
        tramcarStat2_changed: boolean;
        tramcarStat3_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 烧猪洞同步客户端击杀目标数量
 */
declare module protocol {
    class burn_pig_clone_update_data_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        killCount: number;
        bossCount: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入副本地图同步
 */
declare module protocol {
    class burn_pig_clone_enter_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        layer: number;
        time: number;
        isClear: number;
        total: number;
        kill: number;
        killboss: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 上线初始化
 */
declare module protocol {
    class burn_pig_clone_data_init extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        exp: number;
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领奖结果
 */
declare module protocol {
    class burn_pig_clone_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求领奖
 */
declare module protocol {
    class burn_pig_clone_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        multiple: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 积分
 */
declare module protocol {
    class boss_seal_score_load_sync extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArray: Array<info_condition>;
        infoArray_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class boss_seal_score_get_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class boss_seal_score_get_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 改变
 */
declare module protocol {
    class boss_seal_score_change_sync extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArray: Array<info_condition>;
        infoArray_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步消息
 */
declare module protocol {
    class boss_seal_load_sync extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArray: Array<info_condition>;
        completeArr: Array<number>;
        submitArr: Array<number>;
        infoArray_changed: boolean;
        completeArr_changed: boolean;
        submitArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 协议返回
 */
declare module protocol {
    class boss_seal_get_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取奖励
 */
declare module protocol {
    class boss_seal_get_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步封印条件数据变化
 */
declare module protocol {
    class boss_seal_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArray: Array<info_condition>;
        completeArr: Array<number>;
        infoArray_changed: boolean;
        completeArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 打开面板申请数据返回
 */
declare module protocol {
    class boss_reward_info_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 打开面板申请数据
 */
declare module protocol {
    class boss_reward_info_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * boss隐藏关卡同步
 */
declare module protocol {
    class boss_hide_clone_sync extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        overtime: number;
        kill: number;
        bossID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 挑战BOSS-装备掉落回复
 */
declare module protocol {
    class boss_drop_item_record_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        info: Array<info_boss_drop_item>;
        count: number;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 挑战BOSS-装备掉落请求
 */
declare module protocol {
    class boss_drop_item_record_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 重置天赋返回
 */
declare module protocol {
    class book_soul_reset_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        subJobID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 重置天赋
 */
declare module protocol {
    class book_soul_reset_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 天赋点信息同步
 */
declare module protocol {
    class book_soul_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        bookSoulID: Array<number>;
        bookSoulID_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 书魂-转职-返回
 */
declare module protocol {
    class book_soul_change_job_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        subJobID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 书魂-转职
 */
declare module protocol {
    class book_soul_change_job_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        subJobId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 书魂激活回复
 */
declare module protocol {
    class book_soul_activate_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 书魂激活请求
 */
declare module protocol {
    class book_soul_activate_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        booksoulID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 退出元宝大作战消息返回
 */
declare module protocol {
    class activity_yuanbaodazuozhan_quit_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 退出元宝大作战
 */
declare module protocol {
    class activity_yuanbaodazuozhan_quit_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入元宝大作战返回
 */
declare module protocol {
    class activity_yuanbaodazuozhan_enter_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入元宝大作战活动
 */
declare module protocol {
    class activity_yuanbaodazuozhan_enter_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步场景中的怪物信息
 */
declare module protocol {
    class activity_yuanbaodazuozhan_boss_state extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        count: number;
        state: number;
        time: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 激情泡点活动数据同步
 */
declare module protocol {
    class activity_jiqingpaodian_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        count: number;
        awardList: Array<info_role_attr>;
        multiply: number;
        count_changed: boolean;
        awardList_changed: boolean;
        multiply_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 退出激情泡点返回消息
 */
declare module protocol {
    class activity_jiqingpaodian_quit_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领奖回复
 */
declare module protocol {
    class preorder_get_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        orderID: number;
        orderType: number;
        orderDay: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入激情泡点返回消息
 */
declare module protocol {
    class activity_jiqingpaodian_enter_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 四象祭台波次同步
 */
declare module protocol {
    class sxjt_batch_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        batchNum: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 四象祭台守护兽等级变化
 */
declare module protocol {
    class sxjt_guardian_lv_change extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        posId: number;
        newLv: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 四象祭台信息同步
 */
declare module protocol {
    class sxjt_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        maxBatch: number;
        todayEnter: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 四象祭台麒麟血量同步
 */
declare module protocol {
    class sxjt_qilin_hp_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        unicornId: number;
        curtHp: number;
        maxHp: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 快速完成
 */
declare module protocol {
    class sxjt_quick_complete_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        completeType: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 四象祭台快速完成返回
 */
declare module protocol {
    class sxjt_quick_complete_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        awardId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 四象祭台发奖
 */
declare module protocol {
    class sxjt_show_award extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        batchNum: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 四象祭台使用技能结果
 */
declare module protocol {
    class sxjt_use_skill_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入激情泡点活动
 */
declare module protocol {
    class activity_jiqingpaodian_enter_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步下发所有活动每日刷新数据
 */
declare module protocol {
    class activity_info_daily_refresh_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infoArr: Array<info_activity_daily_refresh>;
        infoArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服信息
 */
declare module protocol {
    class sync_cross_info_to_logic_info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        crossOpenDay: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步跨服信息到逻辑服务器
 */
declare module protocol {
    class sync_cross_info_to_logic extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        crossInfo: sync_cross_info_to_logic_info;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 常用活动基本信息推送，尤其是副本类活动
 */
declare module protocol {
    class activity_info_base_sync extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        actID: number;
        surplusTime: number;
        killCount: number;
        monsterCount: number;
        reserve1: string;
        reserve2: string;
        reserve3: string;
        surplusTime_changed: boolean;
        killCount_changed: boolean;
        monsterCount_changed: boolean;
        reserve1_changed: boolean;
        reserve2_changed: boolean;
        reserve3_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 活跃度快速完成
 */
declare module protocol {
    class active_value_quickly_comple_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 活跃度快速完成
 */
declare module protocol {
    class active_value_quickly_comple_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        taskId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 玩家进入地图同步信息
 */
declare module protocol {
    class active_shenweimoyu_enter_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        BossType: number;
        Time: number;
        layers: number;
        maxFloor: number;
        BossType_changed: boolean;
        Time_changed: boolean;
        layers_changed: boolean;
        maxFloor_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 场景boss类型，0假1真
 */
declare module protocol {
    class active_mi_huo_dain_tang_boss_type extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 结束同步奖励
 */
declare module protocol {
    class sync_tumo_award extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        awardTableId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步除魔Boss信息
 */
declare module protocol {
    class sync_tumo_boss_info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        bossId: number;
        resfreshTime: number;
        hp: number;
        hp1: number;
        ownerName: string;
        resfreshTime_changed: boolean;
        hp_changed: boolean;
        hp1_changed: boolean;
        ownerName_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 屠魔Boss info数组
 */
declare module protocol {
    class sync_tumo_boss_infos extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        infos: Array<sync_tumo_boss_info>;
        infos_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步时间和boss状态入口关闭时间5分钟1房间选择事件30s2活动剩余时间3
 */
declare module protocol {
    class active_mi_hun_dian_tang_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        time: number;
        bossState: number;
        floor: number;
        tineType: number;
        time_changed: boolean;
        bossState_changed: boolean;
        floor_changed: boolean;
        tineType_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 成就称号激活返回
 */
declare module protocol {
    class achievement_title_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        titleID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 成就称号激活请求
 */
declare module protocol {
    class achievement_title_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        titleID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 成就数据加载
 */
declare module protocol {
    class achievement_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: Array<info_condition>;
        id: number;
        modelIdArr: Array<number>;
        info_changed: boolean;
        modelIdArr_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 成就数据改变
 */
declare module protocol {
    class achievement_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        info: Array<info_condition>;
        id: number;
        lv: number;
        modelId: number;
        info_changed: boolean;
        id_changed: boolean;
        lv_changed: boolean;
        modelId_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取成就奖励回复
 */
declare module protocol {
    class achievement_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: number;
        id_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取成就奖励请求
 */
declare module protocol {
    class achievement_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 全民饮酒卷轴类型
 */
declare module protocol {
    const enum EnumYinjiuReelType {
        /**
         * 普通卷轴
         */
        noraml = 1,
        /**
         * 高级卷轴
         */
        advanced = 2,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求购买机器人陪练数量
 */
declare module protocol {
    class team_buy_robot_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        ID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 购买机器人陪练结果
 */
declare module protocol {
    class team_buy_robot_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        count: number;
        ID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 押镖枚举
 */
declare module protocol {
    const enum EnumYaBiaoState {
        /**
         *
         */
        none = 0,
        /**
         * 完成
         */
        complete = 1,
        /**
         * 放弃
         */
        give_up = 2,
        /**
         * 超时
         */
        time_out = 3,
        /**
         * 被击碎
         */
        smashed = 4,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumWorldBossState {
        /**
         * 刷新
         */
        normal = 0,
        /**
         * 击杀
         */
        down = 1,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 未知暗殿npc类型
 */
declare module protocol {
    const enum EnumUnKonwDark {
        /**
         * 未知
         */
        unknow = 0,
        /**
         * 任务类型1
         */
        type_1 = 1,
        /**
         * 任务类型2
         */
        type_2 = 2,
        /**
         * 任务类型3（普通）
         */
        type_3 = 3,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumUnitType2 {
        /**
         * 小怪
         */
        normal = 4001,
        /**
         * BOSS
         */
        boss = 4002,
        /**
         * 精英
         */
        elite = 4003,
        /**
         * 人形
         */
        person = 4004,
        /**
         * 矿
         */
        mine = 4005,
        /**
         * 镖车
         */
        escort = 4006,
        /**
         * 转生类型
         */
        reincrnation = 4010,
        /**
         * 守卫比奇活动boss
         */
        swbq_activity_boss = 4011,
        /**
         * 稀有boss
         */
        rare_boss = 4020,
        /**
         * 营地战旗
         */
        ying_di_flag = 5001,
        /**
         * 广场战旗
         */
        guang_chang_flag = 5002,
        /**
         * 神武状元旗
         */
        sw_flag = 5003,
        /**
         * 密探尸体
         */
        sw_corpse = 5004,
        /**
         * 炼狱迷宫宝箱
         */
        box_lymg = 5005,
        /**
         * 材料副本宝箱
         */
        box_clfb = 5006,
        /**
         * 帮会篝火（点着）
         */
        guild_fire = 5007,
        /**
         * 帮会个人篝火
         */
        guild_person_fire = 5008,
        /**
         * 斩将夺旗
         */
        kill_capture_flag = 5009,
        /**
         * 龙旗
         */
        dragon_flag = 5012,
        /**
         * 虎旗
         */
        tiger_flag = 5013,
        /**
         * 鹰旗
         */
        eagle_flag = 5014,
        /**
         * 超级采集宝箱
         */
        super_collect_box = 5015,
        /**
         * 采集时限宝箱
         */
        collect_timelimit_box = 5016,
        /**
         * 超级采集宝箱
         */
        general_collect_box = 5017,
        /**
         * 跨服争霸怪物类型
         */
        kfzb_bossA = 6001,
        /**
         * 跨服争霸怪物类型
         */
        kfzb_bossB = 6002,
        /**
         * 跨服争霸怪物类型
         */
        kfzb_bossC = 6003,
        /**
         * 跨服争霸怪物类型
         */
        kfzb_bossD = 6004,
        /**
         * 火墙
         */
        fire_wall = 9001,
        /**
         * 血战沙城营地战旗
         */
        xue_zhan_sha_cheng_yd_flag = 9101,
        /**
         * 血战沙城广场战旗
         */
        xue_zhan_sha_cheng_gc_flag = 9102,
        /**
         * 禁军大刀守卫
         */
        dadao = 10001,
        /**
         * 禁军弓箭手
         */
        gongjian = 10002,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumTranscriptUnitTrype {
        /**
         *
         */
        none = 0,
        /**
         * 天灯
         */
        sky_lantern = 1,
        /**
         * 棺材
         */
        coffin = 2,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 副本类型
 */
declare module protocol {
    const enum EnumTranscriptType {
        /**
         * 神舰
         */
        god_ship = 1,
        /**
         * 九龙山
         */
        jiu_long_shan = 2,
        /**
         * 帝陵遗迹
         */
        di_ling_yi_ji = 3,
        /**
         * 英雄密室
         */
        ying_xiong_mi_shi = 4,
        /**
         * 转生副本
         */
        zhuan_sheng_fu_ben = 12,
        /**
         * 血战沙城
         */
        xue_zhan_sha_cheng = 14,
        /**
         * 猎魔幻狱
         */
        lie_mo_huan_yu = 15,
        /**
         * 战神宝库
         */
        zhan_shen_bao_ku = 16,
        /**
         * 经验副本
         */
        jing_yan_fu_ben = 18,
        /**
         * 玉佩副本
         */
        yu_pei = 19,
        /**
         * 神石副本
         */
        shen_shi = 20,
        /**
         * 龙珠副本
         */
        long_zhu = 21,
        /**
         * 宝石副本
         */
        bao_shi = 22,
        /**
         * 强化石副本
         */
        qiang_hua_shi = 23,
        /**
         * 如意副本
         */
        ru_yi = 24,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步组队副本数据
 */
declare module protocol {
    class team_clone_init_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        newRole: number;
        newSiShenG: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求列表总数
 */
declare module protocol {
    class team_clone_list_num_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        cloneID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回客户端总数量
 */
declare module protocol {
    class team_clone_list_num_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        cloneID: number;
        num: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求组队副本平台列表
 */
declare module protocol {
    class team_clone_list_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        cloneID: number;
        page: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回组队平台列表
 */
declare module protocol {
    class team_clone_list_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        list: Array<info_team_clone>;
        cloneID: number;
        page: number;
        list_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求匹配
 */
declare module protocol {
    class team_clone_pair_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        cloneID: number;
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求匹配结果
 */
declare module protocol {
    class team_clone_pair_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        type: number;
        opened: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步当前队伍进入副本得准备状态
 */
declare module protocol {
    class team_clone_ready_list_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        stateList: Array<info_team_clone_ready>;
        roleID: string;
        errState: number;
        stateList_changed: boolean;
        roleID_changed: boolean;
        errState_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 队员是否准备
 */
declare module protocol {
    class team_clone_ready_member_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        ready: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 队长广播给队员准备开启副本弹界面
 */
declare module protocol {
    class team_clone_ready_notice_syn extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 队长请求准备开启副本全队广播
 */
declare module protocol {
    class team_clone_ready_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        cloneID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求复活
 */
declare module protocol {
    class team_clone_relive_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 复活结果
 */
declare module protocol {
    class team_clone_relive_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 快速进入组队副本
 */
declare module protocol {
    class team_clone_shortcut_enter_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        tarCloneID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 组队副本快捷进入结果
 */
declare module protocol {
    class team_clone_shortcut_enter_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 设置组队副本目标ID
 */
declare module protocol {
    class team_clone_target_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        ID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步组队副本目标变更
 */
declare module protocol {
    class team_clone_target_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        ID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求传送至NPC处
 */
declare module protocol {
    class team_clone_trans_npc_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        ID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * //副本时间同步类型
 */
declare module protocol {
    const enum EnumTranscriptSyncTime {
        /**
         * 副本时长
         */
        duration = 1,
        /**
         * 结束等待退出
         */
        exit_wait_quit = 2,
        /**
         * 等待创建怪物
         */
        wait_create_monster = 3,
        /**
         * 杀死所有怪物时间
         */
        kill_all_monster = 4,
        /**
         * 等待创建Boss时间
         */
        wait_create_boss = 5,
        /**
         * 杀死所有Boss时间
         */
        kill_all_boss = 6,
        /**
         * 等待创建箱子
         */
        wait_create_box = 7,
        /**
         * 采集箱子时间
         */
        collect_box = 8,
        /**
         * 超级箱子创建时间
         */
        wait_super_box_create = 9,
        /**
         * 准备时间
         */
        ready_time = 10,
        /**
         * 结束倒计时
         */
        end_cound_down = 11,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 我要变强功能类型
 */
declare module protocol {
    const enum EnumToStongType {
        /**
         * 无
         */
        none = 0,
        /**
         * 角色披风
         */
        role_cloak = 2,
        /**
         * 角色装备
         */
        role_equip = 3,
        /**
         * 角色强化
         */
        role_strong = 5,
        /**
         * 角色玉佩
         */
        role_yupei = 6,
        /**
         * 角色神石
         */
        role_shenshi = 7,
        /**
         * 角色如意
         */
        role_ruyi = 8,
        /**
         * 角色龙珠
         */
        role_longzhu = 9,
        /**
         * 角色炼魂
         */
        role_lianhun = 11,
        /**
         * 角色宝石
         */
        role_gem = 12,
        /**
         * 角色斗笠
         */
        role_hat = 13,
        /**
         * 贪狼命装
         */
        role_equip_vice_tanlang = 14,
        /**
         * 巨门命装
         */
        role_equip_vice_jumen = 15,
        /**
         * 祿存明裝
         */
        role_equip_vice_lucun = 16,
        /**
         * 龙魂
         */
        role_dragon_soul = 17,
        /**
         * 功勋
         */
        role_feats = 18,
        /**
         * 角色炼神
         */
        role_lianshen = 19,
        /**
         * 角色神脉
         */
        role_shenmai = 20,
        /**
         * 角色战宠
         */
        role_zhanchong = 21,
        /**
         * 装备精炼
         */
        role_equipRefine = 22,
        /**
         * 武魂
         */
        role_warrior_soul = 23,
        /**
         * 神武
         */
        role_shenwu = 24,
        /**
         * 新龙魂
         */
        role_longhun = 25,
        /**
         * 魂牌
         */
        role_hunpai = 26,
        /**
         * 英雄披风
         */
        hero_cloak = 102,
        /**
         * 英雄铸灵
         */
        hero_zhuling = 103,
        /**
         * 英雄装备
         */
        hero_equip = 104,
        /**
         * 英雄强化
         */
        hero_strong = 105,
        /**
         * 英雄境界
         */
        hero_jingjie = 107,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 称号类型
 */
declare module protocol {
    const enum EnumTitleType {
        /**
         *
         */
        none = 0,
        /**
         * 普通称号
         */
        normalTitle = 1,
        /**
         * 高级称号
         */
        specialTitle = 2,
        /**
         * 活动称号
         */
        activeTitle = 3,
        /**
         * 场景称号
         */
        mapTitle = 4,
        /**
         * 跨服称号
         */
        crossTitle = 5,
        /**
         * 战宠护卫称号
         */
        petTitle = 6,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumTeamMode {
        /**
         * 无状态
         */
        none = 0,
        /**
         * 自动组队
         */
        auto = 1,
        /**
         * 手动组队
         */
        manual = 2,
        /**
         * 拒绝组队
         */
        refuse = 3,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 组队副本状态
 */
declare module protocol {
    const enum EnumTeamCloneState {
        /**
         * 无
         */
        nothing = 0,
        /**
         * 自动匹配
         */
        pair = 1,
        /**
         * 准备进入副本
         */
        readyEnter = 2,
        /**
         * 副本内
         */
        cloneing = 3,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 组队副本异常枚举
 */
declare module protocol {
    const enum EnumTeamCloneErrState {
        /**
         * 成功
         */
        ok = 0,
        /**
         * 等级不足
         */
        err_lv = 1,
        /**
         * 转生等级不足
         */
        err_rlv = 2,
        /**
         * 所在地图异常
         */
        err_map = 3,
        /**
         * 进入次数
         */
        err_count = 4,
        /**
         * 开服时间
         */
        err_open_day = 5,
        /**
         * 玩家拒绝
         */
        player_refuse = 6,
        /**
         * 挑战难度错误
         */
        diff_err = 7,
        /**
         * 准备进入副本时掉线
         */
        enter_offline = 8,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumTargetSelect {
        /**
         * 无
         */
        none = 0,
        /**
         * 目标
         */
        target = 1,
        /**
         * 位置
         */
        pos = 2,
        /**
         * 方向
         */
        dir = 3,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumTalentCondition {
        /**
         * 指定ID投放点数
         */
        id_num = 1,
        /**
         * 指定系别投放点数
         */
        type_num = 2,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 扫荡副本类型
 */
declare module protocol {
    const enum EnumSweepType {
        /**
         * 神舰副本
         */
        shenjian = 1,
        /**
         * 九龙山
         */
        jiulongshan = 2,
        /**
         * 英雄密室
         */
        yingxiongmishi = 3,
        /**
         * 帝陵遗迹
         */
        dilingyiji = 4,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumSuitType {
        /**
         * 无
         */
        none = 0,
        /**
         * 装备槽位强化套装
         */
        strengthen = 1,
        /**
         * 宝石套装
         */
        gem = 2,
        /**
         * 帮会套装
         */
        guild = 3,
        /**
         * 魂装(原:神装套装)
         */
        god = 4,
        /**
         * 翅膀套装
         */
        wing = 5,
        /**
         * 普通装备套装
         */
        equip = 6,
        /**
         * 装备强化
         */
        equipIntensify = 7,
        /**
         * 遗物套装
         */
        relic = 8,
        /**
         * 英雄装备套装
         */
        hero_equip = 10,
        /**
         * 武魂套装
         */
        warrior_soul = 11,
        /**
         * 副装圣装(原:副装贪婪套装)
         */
        vice_equip_tanlang = 12,
        /**
         * 副装十二生肖(原:副装巨门套装)
         */
        vice_equip_jumen = 13,
        /**
         * 副装命装(副装禄存套装)
         */
        vice_equip_lucun = 14,
        /**
         * 英雄刻印套装
         */
        hero_keyin = 15,
        /**
         * 英雄神装
         */
        hero_god = 16,
        /**
         * 英雄神装
         */
        hero_gem = 17,
        /**
         * 英雄强化套装
         */
        hero_strengthen = 18,
        /**
         * 炼魂碎片套装
         */
        lian_hun = 19,
        /**
         * 圣印套装
         */
        seals = 20,
        /**
         * 魂牌套装(暂废)
         */
        hun_pai = 21,
        /**
         * 战纹套装(暂废)
         */
        dragon_vein = 22,
        /**
         * 符文套装(暂废)
         */
        fu_wen = 23,
        /**
         * 特戒套装
         */
        te_jie = 24,
        /**
         * 副装铭文套装
         */
        vice_equip_mingwen = 26,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumSubJob {
        /**
         * 未知
         */
        unknown = 0,
        /**
         * 猎魔者
         */
        lie_mo_zhe = 1,
        /**
         * 狂战士
         */
        kuang_zhan_shi = 2,
        /**
         * 元素师
         */
        yuan_su_shi = 3,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumSpriteType {
        /**
         * 未知
         */
        none = 0,
        /**
         * 角色
         */
        person = 1,
        /**
         * 宠物
         */
        pet = 2,
        /**
         * 护卫/战宠
         */
        mars = 3,
        /**
         * 怪物
         */
        monster = 4,
        /**
         * NPC
         */
        npc = 5,
        /**
         * 守卫
         */
        guard = 6,
        /**
         * 掉落物
         */
        drop = 7,
        /**
         * 陷阱
         */
        trap = 8,
        /**
         * 装饰
         */
        deco = 9,
        /**
         * 禁军
         */
        jin_jun = 10,
        /**
         * 任务战神
         */
        mission_mars = 11,
        /**
         * 道士狗,注意:如果道士狗原类型是pet,后被跟宠占用，如需道士狗，需检查所有pet的地方
         */
        dao_pet = 12,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumSpriteState {
        /**
         * 正常
         */
        normal = 0,
        /**
         * 未激活
         */
        nonactivated = 1,
        /**
         * 激活中
         */
        activating = 2,
        /**
         * 挖矿
         */
        mine = 3,
        /**
         * 采集
         */
        collect = 4,
        /**
         * 摆摊
         */
        stall = 5,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumSpriteRelation {
        /**
         * 无
         */
        none = 0,
        /**
         * 自己
         */
        self = 1,
        /**
         * 友好
         */
        friend = 2,
        /**
         * 敌对
         */
        hostile = 3,
        /**
         * 中立
         */
        neutral = 4,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumSpriteEnter {
        /**
         * 正常进入
         */
        normal = 1,
        /**
         * 掉落道具跳跃
         */
        birth = 2,
        /**
         * 传送进入
         */
        transfer = 3,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 角色竞技中的竞技类型
 */
declare module protocol {
    const enum EnumSportType {
        /**
         * 等级竞技
         */
        level = 1,
        /**
         * 披风竞技
         */
        pifeng = 2,
        /**
         * 龙珠竞技
         */
        longzhu = 3,
        /**
         * 如意竞技
         */
        ruyi = 4,
        /**
         * 英雄等级
         */
        level_hero = 5,
        /**
         * 英雄披风
         */
        hero_pifeng = 8,
        /**
         * 神格
         */
        role_shenge = 9,
        /**
         * 神脉
         */
        role_shenmai = 10,
        /**
         * 宝石
         */
        sport_gem = 11,
        /**
         * 龙魂竞技
         */
        sport_longhun = 12,
        /**
         * 神装竞技
         */
        shen_zhaung = 13,
        /**
         * 神阶竞技
         */
        shen_jie = 14,
        /**
         * 跨服日常竞技
         */
        ri_chang = 15,
        /**
         * 跨服饮酒
         */
        drink_wine = 16,
        /**
         * 觉醒竞技
         */
        role_jue_xing = 17,
        /**
         * 装备竞技
         */
        role_equip = 18,
        /**
         * 转生竞技
         */
        role_relevel = 19,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 开服活动—竞技奖励条件类型
 */
declare module protocol {
    const enum EnumSportCondition {
        /**
         * 等级
         */
        Level = 1,
        /**
         * 转生等级
         */
        ReLevel = 2,
        /**
         * 翅膀等级
         */
        WingLevel = 3,
        /**
         * 龙珠等级
         */
        DragonpearlLevel = 4,
        /**
         * 如意等级
         */
        Ruyi = 5,
        /**
         * 官职竞技
         */
        PostAthletics = 6,
        /**
         * 英雄等级
         */
        HeroLevel = 7,
        /**
         * 英雄转生等级
         */
        HeroReLevel = 8,
        /**
         * 英雄披风竞技
         */
        HeroCloak = 9,
        /**
         * 神格
         */
        role_shenge = 10,
        /**
         * 神脉
         */
        role_shenmai = 11,
        /**
         * 宝石
         */
        sport_gem = 12,
        /**
         * 龙魂
         */
        dragon_soul = 13,
        /**
         * 觉醒等级
         */
        jue_xing = 18,
        /**
         * 装备等级
         */
        equip = 19,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 一些特殊功能的单位ID，比如火墙
 */
declare module protocol {
    const enum EnumSpecialUnitID {
        /**
         * 火墙1
         */
        firewall1 = 9,
        /**
         * 火墙2
         */
        firewall2 = 10,
        /**
         * 传送阵
         */
        transfer_point = 11,
        /**
         * 泡点1
         */
        pao_dian1 = 12,
        /**
         * 泡点2
         */
        pao_dian2 = 13,
        /**
         * 答案黄圈
         */
        answer_yellow = 14,
        /**
         * 答案蓝圈
         */
        answer_blue = 15,
        /**
         * 黄金矿
         */
        gold_mine = 16,
        /**
         * 采集圈
         */
        collect_area = 17,
        /**
         * 安全区
         */
        safe_region = 18,
        /**
         * 帮会篝火
         */
        guild_campfire1 = 19,
        /**
         * 帮会篝火
         */
        guild_campfire2 = 20,
        /**
         * 个人篝火
         */
        self_campfire1 = 21,
        /**
         * 个人篝火
         */
        self_campfire2 = 22,
        /**
         * 个人篝火
         */
        self_campfire3 = 23,
        /**
         * 个人篝火
         */
        self_campfire4 = 24,
        /**
         * 墓碑
         */
        grave = 25,
        /**
         * 异界裂缝
         */
        farplane_gap = 26,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumSmelterType {
        /**
         * 无
         */
        none = 0,
        /**
         * 玉佩
         */
        jade_pandant = 1,
        /**
         * 神石
         */
        shen_shi = 2,
        /**
         * 龙珠
         */
        long_zhu = 3,
        /**
         * 如意
         */
        ru_yi = 4,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 圣龙战场采集物类型
 */
declare module protocol {
    const enum EnumSlzcCollectType {
        /**
         * 低级圣龙印记
         */
        lowLevel = 1,
        /**
         * 中级圣龙印记
         */
        middleLevel = 2,
        /**
         * 高级圣龙印记
         */
        highLevel = 3,
        /**
         * 超级圣龙印记
         */
        superLevel = 4,
        /**
         * 圣龙之怒(增加buff、整批刷新、提前预告)
         */
        ultimateLevel = 100,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumSkillShape {
        /**
         * 未知
         */
        none = 0,
        /**
         * 点
         */
        single = 1,
        /**
         * 线
         */
        line = 2,
        /**
         * 圆形
         */
        square = 3,
        /**
         * 扇形
         */
        fan = 4,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumSkillReleaseType {
        /**
         * 手动
         */
        active = 1,
        /**
         * 自动
         */
        auto = 2,
        /**
         * 被动
         */
        passive = 3,
        /**
         * 延迟
         */
        delay = 4,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 技能类型
 */
declare module protocol {
    const enum EnumSkillCategory {
        /**
         * 无技能
         */
        NONE = 0,
        /**
         * 反弹加血/吸血加血
         */
        ADD_BLOOD = 1,
        /**
         * 战士默认
         */
        ZHAN_DEFAULT = 100,
        /**
         * 刺杀
         */
        CI_SHA = 101,
        /**
         * 半月
         */
        BAN_YUE = 102,
        /**
         * 冲撞
         */
        CRASH = 103,
        /**
         * 烈火
         */
        LIE_HUO = 104,
        /**
         * 开天斩
         */
        KAI_TIAN_ZHAN = 105,
        /**
         * 狮子吼
         */
        SHI_ZI_HOU = 106,
        /**
         * 擒龙手
         */
        QIN_LONG_SHOU = 107,
        /**
         * 逐日
         */
        ZHU_RI = 108,
        /**
         * 流星火雨（战士）
         */
        LIU_XING_ZHAN = 207,
        /**
         * 法师默认
         */
        FA_DEFAULT = 200,
        /**
         * 雷电
         */
        LEI_DIAN = 201,
        /**
         * 抗拒火环
         */
        KANG_JU = 202,
        /**
         * 火墙
         */
        HUO_QIANG = 203,
        /**
         * 魔法盾
         */
        MO_FA_DUN = 204,
        /**
         * 冰咆哮
         */
        BING_PAO_XIAO = 205,
        /**
         * 虚无形体
         */
        XU_WU = 206,
        /**
         * 流星火雨
         */
        LIU_XIN = 208,
        /**
         * 地狱雷光
         */
        DI_YU_LEI_GUANG = 209,
        /**
         * 道士默认
         */
        DAO_DEFAULT = 300,
        /**
         * 灵魂火符
         */
        HUO_FU = 301,
        /**
         * 圣甲术
         */
        SHENG_JIA = 302,
        /**
         * 群疗
         */
        QUN_LIAO = 303,
        /**
         * 群隐
         */
        QUN_YIN = 304,
        /**
         * 群毒
         */
        QUN_DU = 305,
        /**
         * 召唤神兽
         */
        ZHAO_SEHN_SHOU = 306,
        /**
         * 气波功
         */
        QI_BO = 307,
        /**
         * 飓风破
         */
        JU_FENG_PO = 308,
        /**
         * 真气
         */
        ZHEN_QI = 309,
        /**
         * 挖矿
         */
        WA_KUANG = 401,
        /**
         * 吸血
         */
        XI_XUE = 402,
        /**
         * 反伤
         */
        FAN_SHANG = 403,
        /**
         * 神圣伤害
         */
        SHEN_SHENG_SHANG_HAI = 404,
        /**
         * 中毒
         */
        ZHONG_DU = 405,
        /**
         * 怪物群体治疗
         */
        GUAI_WU_QUN_LIAO = 601,
        /**
         * 战宠狂暴
         */
        ZHAN_CHONG_KUANG_BAO = 2401,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumShiTuTaskType {
        /**
         * 等级
         */
        lv = 1,
        /**
         * 转生
         */
        lv_r = 2,
        /**
         * 龙心
         */
        dragon_heart = 3,
        /**
         * 玉佩
         */
        yu_pei = 4,
        /**
         * 神石
         */
        shen_shi = 5,
        /**
         * 如意
         */
        ru_yi = 6,
        /**
         * 翅膀
         */
        wing = 7,
        /**
         * 登陆
         */
        login = 8,
        /**
         * 活跃度
         */
        active_value = 9,
        /**
         * 在线时长
         */
        online_long = 10,
    }
}
/**
 * File is automatically generated, Please do not modify
 * //通知客户端发送奖励类型
 */
declare module protocol {
    const enum EnumSendAwardType {
        /**
         * 守卫盟重奖励
         */
        shou_wei_meng_zhong = 1,
        /**
         * 斩将夺旗
         */
        zhan_jiang_duo_qi = 2,
        /**
         * 英雄试炼
         */
        yingz_xiong_shi_lian = 3,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 场景UI枚举(每个功能叠加1000)
 */
declare module protocol {
    const enum EnumSceneUiType {
        /**
         * 通用
         */
        unknown = 0,
        /**
         * 泡点场景UI1，活动类型+00*
         */
        pao_dian = 101,
        /**
         * 神威魔狱信息面板UI
         */
        shen_wei_mo_yu = 201,
        /**
         * 元宝大作战
         */
        yan_bao_da_zuo_zhan = 301,
        /**
         * 个人boss
         */
        private_boss = 401,
        /**
         * 帮会boss
         */
        guild_boss = 501,
        /**
         * 组队烧猪1
         */
        team_shao_zhu1 = 601,
        /**
         * 组队烧猪2
         */
        team_shao_zhu2 = 602,
        /**
         * 精英阁前八层
         */
        jing_ying_ge_8 = 701,
        /**
         * 精英阁十层
         */
        jing_ying_ge_10 = 702,
        /**
         * 帮会炼魔
         */
        lian_mo = 801,
        /**
         * 材料副本
         */
        cai_liao_fu_ben = 901,
        /**
         * 深渊大厅
         */
        shen_yuan_da_ting = 1001,
        /**
         * 帮会篝火
         */
        guild_fire = 1101,
        /**
         * 挖矿
         */
        wa_kuang = 1201,
        /**
         * 迷魂殿堂
         */
        mi_hun_dian_tang = 1301,
        /**
         * 钳虫巢穴
         */
        qian_chong_chao_xue = 1401,
        /**
         * 遗忘秘境（1到4层）
         */
        yi_wang_mi_jing = 1501,
        /**
         * 遗忘秘境（最后一层）
         */
        yi_wang_mi_jing_top_floor = 1502,
        /**
         * 旋云之巅
         */
        xuan_yun_zhi_dian = 1601,
        /**
         * 答题
         */
        da_ti = 1701,
        /**
         * 生存战场
         */
        sheng_cun_zhan_chang = 1801,
        /**
         * boss之家
         */
        boss_home_scene = 1901,
        /**
         * 战神宝库(原:转生神殿)
         */
        zhuan_sheng_dian_tang = 2001,
        /**
         * 领地战
         */
        manor_battle = 2101,
        /**
         * 玛雅殿堂
         */
        ma_ya_dian_tang = 2201,
        /**
         * 无双战
         */
        wu_shuang_battle = 2301,
        /**
         * 未知暗殿
         */
        wei_zhi_an_dian = 2401,
        /**
         * 沙城战（沙城）
         */
        sha_cheng_battle = 2501,
        /**
         * 沙城战（皇宫）
         */
        sha_cheng_battle_palace = 2502,
        /**
         * 怪物攻城
         */
        guai_wu_gong_cheng = 2601,
        /**
         * 押镖
         */
        ya_biao = 2701,
        /**
         * 四神宫
         */
        four_temple = 2801,
        /**
         * 帮会-押镖
         */
        guild_ya_biao = 2901,
        /**
         * 通天塔左侧面板
         */
        tongtianta = 3001,
        /**
         * 帮会日常任务副本
         */
        guild_ri_chang_ren_wu = 3101,
        /**
         * 碎银矿脉
         */
        sui_yin_kuang_mai = 3201,
        /**
         * 山贼入侵
         */
        shan_zei_ru_qin = 3301,
        /**
         * 虚幻洞窟
         */
        xu_huan_dong_ku = 3401,
        /**
         * 帮会日常任务1
         */
        guild_mission_clone_1 = 3501,
        /**
         * 帮会日常任务2
         */
        guild_mission_clone_2 = 3502,
        /**
         * 帮会日常任务3
         */
        guild_mission_clone_3 = 3503,
        /**
         * 帮派禁地1
         */
        guild_forbid_area = 3504,
        /**
         * 至尊宝藏boss
         */
        supremacy_treasure = 3601,
        /**
         * 材料盛宴
         */
        material_feast = 3602,
        /**
         * 元宝盛宴
         */
        yuan_bao_sheng_yan = 3603,
        /**
         * 材料盛宴
         */
        cai_liao_sheng_yan = 3604,
        /**
         * boss隐藏关卡
         */
        boss_hide_clone = 3701,
        /**
         * 心魔大殿场景
         */
        xin_mo_da_dian = 3702,
        /**
         * 帝陵遗迹场景
         */
        di_ling_yi_ji = 3703,
        /**
         * 英雄密室场景
         */
        ying_xiong_mi_shi = 3704,
        /**
         * 神阁宝库场景
         */
        shen_ge_bao_ku = 3705,
        /**
         * 神舰副本场景
         */
        shen_jian_fu_ben = 3706,
        /**
         * 虚空幻境
         */
        xu_kong_huan_jing = 3801,
        /**
         * 洞窟探宝
         */
        cave_treasure = 3805,
        /**
         * 守卫盟重
         */
        shou_wei_meng_zhong = 3901,
        /**
         * 远古神殿
         */
        yuan_gu_shen_dian = 3902,
        /**
         * 斩将夺旗
         */
        zhan_jiang_duo_qi = 4001,
        /**
         * 英雄试炼
         */
        ying_xiong_shi_lian = 4101,
        /**
         * 天降洪福
         */
        tian_jiang_hong_fu = 4201,
        /**
         * 全民屠魔
         */
        quan_min_tu_mo = 4301,
        /**
         * 九龙山
         */
        jiu_long_shan = 4401,
        /**
         * 沙城
         */
        sha_cheng = 4402,
        /**
         * 皇宫
         */
        huang_gong = 4403,
        /**
         * 帮会BOSS1
         */
        guild_boss_1 = 4421,
        /**
         *
         */
        guild_boss_2 = 4422,
        /**
         *
         */
        guild_boss_3 = 4423,
        /**
         *
         */
        guild_boss_4 = 4424,
        /**
         *
         */
        guild_boss_5 = 4425,
        /**
         *
         */
        guild_boss_6 = 4426,
        /**
         * 卧龙大殿
         */
        wo_long_da_dian = 4430,
        /**
         * 斗兽场
         */
        dou_shou_chang = 4431,
        /**
         * 迷惘密室
         */
        mi_wang_mi_shi = 4432,
        /**
         * 强化石
         */
        qiang_hua_shi = 4433,
        /**
         * 裂变之灾
         */
        lie_bian_zhi_zai = 4434,
        /**
         * 等级副本
         */
        deng_ji_fu_ben = 4435,
        /**
         * 囚魔之路
         */
        prisoner_road = 4436,
        /**
         * 藏宝图书库采集
         */
        treasure_book = 4440,
        /**
         * 藏宝图缉盗
         */
        treasure_jidao = 4441,
        /**
         * 万魔殿
         */
        wan_mo_dian = 4442,
        /**
         * 四象封印
         */
        si_xiang_feng_yin = 4450,
        /**
         * 生化战场
         */
        biochem_battle = 4451,
        /**
         * 猎魔幻狱
         */
        lie_mo_huan_yu = 4452,
        /**
         * 神域探宝
         */
        shen_yu_tan_bao = 4453,
        /**
         * 守卫比奇
         */
        shouw_wei_bi_qi = 4454,
        /**
         * 神龙秘境
         */
        fairy_dragon_worship = 4455,
        /**
         * 四象祭台
         */
        si_xiang_ji_tai = 4456,
        /**
         * 屠魔猎场
         */
        tumo_hunting = 4460,
        /**
         * 圣域龙灵
         */
        sheng_yu_long_ling = 4470,
        /**
         * 血战沙城
         */
        xue_zhan_sha_cheng = 4480,
        /**
         * 福利地图
         */
        map_of_welfare = 4490,
        /**
         * 龙魂副本
         */
        dragon_up = 4491,
        /**
         * 跨服争霸(GVG1)
         */
        kua_fu_zheng_ba = 4492,
        /**
         * 玲珑塔
         */
        ling_long_tower = 4493,
        /**
         * 经验副本
         */
        jing_yan = 4494,
        /**
         * Boss盛宴
         */
        feast_boss = 4495,
        /**
         * 圣龙战场(GVG2)
         */
        sheng_long_zhan_chang = 4496,
        /**
         * 稀有boss
         */
        rare_boss = 4497,
        /**
         * 帮会守护
         */
        bang_hui_shou_hu = 4498,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumSceneRule {
        /**
         * 禁止PK(安全区)
         */
        cant_pk = 1,
        /**
         * 禁止穿人
         */
        cant_cross_player = 2,
        /**
         * 禁止穿怪
         */
        cant_cross_monster = 3,
        /**
         * 禁止骑乘
         */
        cant_ride = 4,
        /**
         * 允许摆摊
         */
        can_stall = 5,
        /**
         * 限制使用技能
         */
        limit_skill = 6,
        /**
         * 限制使用道具
         */
        limit_item = 7,
        /**
         * 传送(触发传送)
         */
        transfer = 8,
        /**
         * 播放音乐
         */
        play_audio_music = 9,
        /**
         * 播放音效
         */
        play_audio_effect = 10,
        /**
         * 显示提示信息
         */
        show_msg = 11,
        /**
         * 禁止使用技能
         */
        cant_skill = 12,
        /**
         * 禁止移动
         */
        cant_move = 13,
        /**
         * 禁止丢弃
         */
        cant_drop = 14,
        /**
         * 禁止原地复活
         */
        cant_relive_stand = 15,
        /**
         * 死亡不掉落物品
         */
        cant_dead_drop = 16,
        /**
         * 自由PK区域(PK不影响罪恶)
         */
        not_guilty = 17,
        /**
         * 禁止传送（此区域禁止传出）
         */
        cant_transfer = 18,
        /**
         * 禁止自动挂机
         */
        cant_auto = 19,
        /**
         * 禁止天人合一
         */
        cant_team_transfer = 20,
        /**
         * 禁止好友传送(此区域禁止召唤好友)
         */
        cant_friend_transfer = 21,
        /**
         * 加速回复PK值
         */
        speed_pk_val = 22,
        /**
         * 当前地图不可切换攻击模式
         */
        cant_change_pk_mode = 23,
        /**
         * 禁止仇人追踪
         */
        cant_find_enemy = 24,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 场景按钮名(每个功能叠加1000)
 */
declare module protocol {
    const enum EnumSceneBtName {
        /**
         * 神威泡点退出按钮
         */
        shen_wei_pao_dian_exit = 1001,
        /**
         * 神威魔狱_退出
         */
        shen_wei_mo_yu_exit = 2001,
        /**
         * 神威魔狱_领奖
         */
        shen_wei_mo_yu_award = 2002,
        /**
         * 元宝大作战退出按钮
         */
        yuan_bao_da_zuo_zhan_exit = 3001,
        /**
         * 个人boss退出
         */
        private_boss_exit = 4001,
        /**
         * 个人boss领奖
         */
        private_boss_award = 4002,
        /**
         * 个人boss双倍领奖
         */
        private_boss_double_award = 4003,
        /**
         * 帮会boss退出
         */
        guild_boss_exit = 5001,
        /**
         * 组队烧猪退出按钮
         */
        team_shao_zhu_exit = 6001,
        /**
         * 精英阁退出
         */
        jing_ying_ge_exit = 7001,
        /**
         * 材料副本退出
         */
        cai_liao_fu_ben_exit = 8001,
        /**
         * 材料副本领取奖励
         */
        cai_liao_fu_ben_get_award = 8002,
        /**
         * 材料副本双倍领奖
         */
        cai_liao_fu_ben_get_double_award = 8003,
        /**
         * 材料副本释放技能
         */
        cai_liao_fu_ben_skill = 8004,
        /**
         * 深渊大厅退出
         */
        shen_yuan_da_ting_exit = 9001,
        /**
         * 心魔大殿退出
         */
        xinmo_exit = 9010,
        /**
         * 帮会篝火放下火堆
         */
        guild_person_fire_put = 10001,
        /**
         * 退出帮会地图
         */
        guild_map_exit = 10002,
        /**
         * 迷魂殿堂_退出
         */
        mi_hun_dian_tang_exit = 11001,
        /**
         * 低级矿石回收
         */
        di_kuang_shi_recovery = 12001,
        /**
         * 低级挖矿退出
         */
        di_kuang_shi_exit = 12002,
        /**
         * 钳虫巢穴退出
         */
        qian_chong_chao_xue_exit = 13001,
        /**
         * 遗忘秘境退出按钮
         */
        yi_wang_mi_jing_exit = 14001,
        /**
         * 旋云之巅退出
         */
        xuan_yun_zhi_dian_exit = 15001,
        /**
         * 旋云之巅复活
         */
        xuan_yun_zhi_dian_resurgence = 15002,
        /**
         * 生存战场退出
         */
        sheng_cun_zhan_chang_exit = 16001,
        /**
         * 退出答题
         */
        da_ti_exit = 17001,
        /**
         * boss之家退出
         */
        boss_home_exit = 18001,
        /**
         * 转生神殿退出
         */
        zhuan_sheng_shen_dian_exit = 19001,
        /**
         * 领地战退出
         */
        manor_battle_exit = 20001,
        /**
         * 玛雅殿堂退出
         */
        Ma_Ya_Dian_Tang_exit = 21001,
        /**
         * 无双战退出
         */
        wu_shuang_battle_exit = 22001,
        /**
         * 押镖护送
         */
        ya_biao_husong = 23001,
        /**
         * 押镖求援
         */
        ya_biao_qiuyuan = 23002,
        /**
         * 押镖放弃
         */
        ya_biao_fangqi = 23003,
        /**
         * 押镖传送
         */
        ya_biao_translate = 23004,
        /**
         * 组队属性BOSS退出
         */
        four_temple_quit = 24001,
        /**
         * 帮会-押镖护送
         */
        guild_biao_husong = 25001,
        /**
         * 帮会-押镖退出
         */
        guild_biao_exit = 25002,
        /**
         * 帮会禁地开启
         */
        guild_forbid_open = 25003,
        /**
         * 帮会禁地退出
         */
        guild_forbid_exit = 25004,
        /**
         * 通天塔退出按钮
         */
        tongtianta_quit = 26001,
        /**
         * 通天塔下一层
         */
        tongtianta_next = 26002,
        /**
         * 通天塔再次挑战
         */
        tongtianta_again = 26003,
        /**
         * 帮会日常任务副本退出
         */
        guild_ri_chang_ren_wu_exit = 27001,
        /**
         * 碎银矿脉退出
         */
        sui_yin_kuang_mai_exit = 28001,
        /**
         * 虚幻洞窟退出
         */
        xu_huan_dong_ku_exit = 29001,
        /**
         * 帮会日常任务副本退出
         */
        guild_mission_clone_quit = 30001,
        /**
         * 至尊宝藏退出
         */
        supremacy_treasure_exit = 31001,
        /**
         * 神威魔狱前往npc
         */
        shen_wei_mo_yu_move_npc = 31002,
        /**
         * boss隐藏关卡退出
         */
        boss_hide_clone_exit = 32001,
        /**
         * 帝陵遗迹退出
         */
        di_ling_yi_ji_exit = 32002,
        /**
         * 英雄密室退出
         */
        ying_xiong_mi_shi_exit = 32003,
        /**
         * 神阁宝库退出
         */
        shen_ge_bao_ku_exit = 32004,
        /**
         * 神阁宝库刷Boss
         */
        shen_ge_bao_ku_refresh_boss = 32005,
        /**
         * 神舰副本退出
         */
        shen_jian_fu_ben_exit = 32006,
        /**
         * 虚空幻境退出
         */
        xu_kong_huan_jing_exit = 33007,
        /**
         * 虚空幻境领取奖励
         */
        xu_kong_huan_jing_get_award = 33008,
        /**
         * 洞窟探宝退出
         */
        cave_treasure_exit = 34001,
        /**
         * 盛宴活动退出
         */
        sheng_yan_exit = 34009,
        /**
         * 守卫盟重退出
         */
        shou_wei_meng_zhong_exit = 35001,
        /**
         * 斩将夺旗退出
         */
        zhan_jiang_duo_qi_exit = 36001,
        /**
         * 英雄试炼退出
         */
        ying_xiong_shi_lian_exit = 36002,
        /**
         * 英雄试炼领取奖励
         */
        ying_xiong_shi_lian_get_award = 36003,
        /**
         * 天降洪福
         */
        tian_jiang_hong_fu_exit = 37001,
        /**
         * 全民屠魔退出
         */
        quan_min_tu_mo_exit = 38001,
        /**
         * 卧龙大殿退出
         */
        wo_long_da_dian_exit = 38002,
        /**
         * 卧龙山庄退出
         */
        wo_long_shan_zhuang_exit = 38003,
        /**
         * 斗兽场退出
         */
        dou_shou_chang_exit = 38004,
        /**
         * 斗兽场花钱通关
         */
        dou_shou_chang_buy = 38005,
        /**
         * 迷惘密室退出
         */
        mi_wang_mishi_exit = 38006,
        /**
         * 强化石副本退出
         */
        qiang_hua_shi_exit = 38007,
        /**
         * 强化石副本单倍领奖
         */
        qiang_hua_shi_award = 38008,
        /**
         * 强化石副本双倍领奖
         */
        qiang_hua_shi_double_award = 38009,
        /**
         * 裂变之灾退出
         */
        lie_bian_zhi_zai_exit = 38010,
        /**
         * 裂变之灾单倍领奖
         */
        lie_bian_zhi_zai_award = 38011,
        /**
         * 裂变之灾双倍领奖
         */
        lie_bian_zhi_zai_double_award = 38012,
        /**
         * 等级副本退出
         */
        deng_ji_fu_ben_exit = 38013,
        /**
         * 囚魔之路退出
         */
        prisoner_road_exit = 38014,
        /**
         * 藏宝图缉盗退出
         */
        treasure_jidao_exit = 38015,
        /**
         * 藏宝图缉盗挂机
         */
        treasure_jidao_guaji = 38016,
        /**
         * 藏宝图书库退出
         */
        treasure_book_exit = 38017,
        /**
         * 藏宝图书库购买
         */
        treasure_book_buy = 38018,
        /**
         * 万魔殿
         */
        wan_mo_dian_exit = 38019,
        /**
         * 四象封印
         */
        si_xiang_feng_yin = 38020,
        /**
         * 四象封印前往下一层
         */
        si_xiang_feng_yin_next = 38021,
        /**
         * 生化战场
         */
        biochem_battle = 38022,
        /**
         * 退出猎魔幻狱副本
         */
        lie_mo_huan_yu_exit = 38023,
        /**
         * 单倍领取猎魔幻狱奖励
         */
        lie_mo_huan_yu_award = 38024,
        /**
         * 双倍领取猎魔幻狱奖励
         */
        lie_mo_huan_yu_award_double = 38025,
        /**
         * 远古神殿退出
         */
        yuan_gu_shen_dian_exit = 39001,
        /**
         * 远古神殿进入
         */
        yuan_gu_shen_dian_join = 39002,
        /**
         * 龙域退出
         */
        dragon_area_exit = 39003,
        /**
         * 四象祭台退出
         */
        si_xiang_ji_tai_exit = 39004,
        /**
         * 神域探宝退出
         */
        shen_yu_tan_bao_exit = 39005,
        /**
         * 守卫比奇退出
         */
        shouw_wei_bi_qi_exit = 39006,
        /**
         * 四象祭台守护兽按钮1
         */
        si_xiang_ji_tai_guardian_1 = 39007,
        /**
         * 四象祭台守护兽按钮2
         */
        si_xiang_ji_tai_guardian_2 = 39008,
        /**
         * 四象祭台守护兽按钮3
         */
        si_xiang_ji_tai_guardian_3 = 39009,
        /**
         * 四象祭台守护兽按钮4
         */
        si_xiang_ji_tai_guardian_4 = 39010,
        /**
         * 四象祭台技能按钮
         */
        si_xiang_ji_tai_use_skill = 39011,
        /**
         * 四象祭台结算按钮
         */
        si_xiang_ji_tai_jie_suan = 39012,
        /**
         * 守卫比奇领取奖励1
         */
        shou_wei_bi_qi_award_1 = 39013,
        /**
         * 守卫比奇领取奖励2
         */
        shou_wei_bi_qi_award_2 = 39014,
        /**
         * 守卫比奇领取奖励3
         */
        shou_wei_bi_qi_award_3 = 39015,
        /**
         * 屠魔猎场退出
         */
        tumo_hunting_exit = 39101,
        /**
         * 屠魔猎场领取奖励
         */
        tumo_hunting_get_award = 39102,
        /**
         * 圣域龙灵退出
         */
        sheng_yu_long_ling_exit = 39201,
        /**
         * 血战沙城退出
         */
        xue_zhan_sha_cheng_exit = 39210,
        /**
         * 占领领地旗帜
         */
        xue_zhan_sha_chang_ling_di = 39211,
        /**
         * 占领广场旗帜
         */
        xue_zhan_sha_chang_guang_chang = 39212,
        /**
         * 福利地图退出
         */
        welfare_map_exit = 39213,
        /**
         * 龙魂升阶副本退出
         */
        dragon_up_exit = 39214,
        /**
         * 跨服争霸(GVG1)活动副本退出
         */
        kua_fu_zheng_ba_exit = 39215,
        /**
         * 跨服争霸(GVG1)活动领取奖励
         */
        kua_fu_zheng_ba_get_award = 39216,
        /**
         * 玲珑塔退出
         */
        ling_long_tower_exit = 39217,
        /**
         * 经验副本退出
         */
        jing_yan_fu_ben_exit = 39218,
        /**
         * Boss盛宴退出
         */
        feast_boss_exit = 39301,
        /**
         * 圣龙战场((GVG2)活动退出
         */
        sheng_long_zhan_chang_exit = 40001,
        /**
         * 圣龙战场((GVG2)活动击杀奖励领取
         */
        sheng_long_zhan_chang_get_kill_reward = 40002,
        /**
         * 退出稀有boss副本
         */
        rare_boss_exit = 41001,
        /**
         * 帮会守护推出按钮
         */
        bang_hui_shou_hu_exit = 41002,
        /**
         * 帮会篝火退出
         */
        bang_hui_gou_huo_exit = 41003,
        /**
         * 经验副本召唤普通守卫
         */
        jing_yan_pu_tong = 41004,
        /**
         * 经验副本召唤精英守卫
         */
        jing_yan_jing_ying = 41005,
        /**
         * 经验副本开始
         */
        jing_yan_open = 41006,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 人物周常数据枚举
 */
declare module protocol {
    const enum EnumRoleWeeklyData {
        /**
         * 无意义
         */
        none = 0,
        /**
         * 玩家周总活跃值
         */
        week_total_active_value = 1,
        /**
         * 周活跃奖励枚举1
         */
        week_active_award_1 = 2,
        /**
         * 周活跃奖励枚举2
         */
        week_active_award_2 = 3,
        /**
         * 挖宝领取宝箱次数
         */
        mine_box_count_normal = 4,
        /**
         * 挖宝次数
         */
        mine_count_normal = 5,
        /**
         * 挖宝幸运值
         */
        mine_luck_count = 6,
        /**
         * 帮会boss进入时间戳
         */
        guild_boss_enter_time = 7,
        /**
         * 帮会boss进入次数
         */
        guild_boss_enter_count = 8,
        /**
         * 工资周数量
         */
        week_wages_count = 9,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumRoleRelationType {
        /**
         * 删除
         */
        remove = 0,
        /**
         * 好友
         */
        friend = 1,
        /**
         * 黑名单
         */
        black = 2,
        /**
         * 仇人
         */
        enemy = 3,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumRoleRank {
        /**
         * 等级榜 1
         */
        level = 0,
        /**
         * 战神榜 2
         */
        zhan = 1,
        /**
         * 法神榜 2
         */
        fa = 2,
        /**
         * 道神榜 2
         */
        dao = 3,
        /**
         * 神翼榜 1
         */
        wing = 4,
        /**
         * 神武榜
         */
        shen_wu_val = 5,
        /**
         * 魅力榜 1
         */
        mei_li = 6,
        /**
         * 战斗力榜 1
         */
        zhan_li = 7,
        /**
         * 巅峰榜 1
         */
        dian_feng = 8,
        /**
         * 英雄战力排行榜
         */
        hero = 9,
        /**
         * 转生榜
         */
        re_level = 10,
        /**
         * 角色等级榜（转生优先）
         */
        role_level = 100,
        /**
         * 英雄等级榜
         */
        hero_level = 101,
        /**
         * 如意等级榜
         */
        ruyi_level = 102,
        /**
         * 龙珠等级榜
         */
        longzhu_level = 103,
        /**
         * 英雄披风
         */
        hero_pifeng = 104,
        /**
         * 神格榜
         */
        role_shenge = 105,
        /**
         * 神脉榜
         */
        role_shenmai = 106,
        /**
         * 宝石
         */
        sport_gem = 107,
        /**
         * 生肖排行榜 (减速抗性优先)
         */
        shengxiao = 108,
        /**
         * 觉醒等级榜
         */
        jue_xing = 109,
        /**
         * 装备总等级榜
         */
        equip = 110,
        /**
         * 龙魂(切割)排行榜
         */
        long_hun = 111,
        /**
         * 天关榜 1
         */
        tian_guan = 1001,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumRoleOnceData {
        /**
         * 所有
         */
        all = -1,
        /**
         * 无
         */
        none = 0,
        /**
         * 天关挑战的层数(已废弃)
         */
        tian_guan_ceng = 1001,
        /**
         * 天关挑战所用时间(已废弃)
         */
        tian_guan_time = 1002,
        /**
         * 天关挑战1重奖励领取标记(已废弃)
         */
        tian_guan_chong_award1 = 1011,
        /**
         * 天关挑战2重奖励领取标记(已废弃)
         */
        tian_guan_chong_award2 = 1012,
        /**
         * 天关挑战3重奖励领取标记(已废弃)
         */
        tian_guan_chong_award3 = 1013,
        /**
         * 天关挑战4重奖励领取标记(已废弃)
         */
        tian_guan_chong_award4 = 1014,
        /**
         * 天关挑战5重奖励领取标记(已废弃)
         */
        tian_guan_chong_award5 = 1015,
        /**
         * 天关挑战6重奖励领取标记(已废弃)
         */
        tian_guan_chong_award6 = 1016,
        /**
         * 天关挑战7重奖励领取标记(已废弃)
         */
        tian_guan_chong_award7 = 1017,
        /**
         * 天关挑战已通关的重数
         */
        tgn_chong = 1020,
        /**
         * 天关挑战1重奖励领取标记
         */
        tgn_chong_award1 = 1021,
        /**
         * 天关挑战2重奖励领取标记
         */
        tgn_chong_award2 = 1022,
        /**
         * 天关挑战3重奖励领取标记
         */
        tgn_chong_award3 = 1023,
        /**
         * 天关挑战4重奖励领取标记
         */
        tgn_chong_award4 = 1024,
        /**
         * 天关挑战5重奖励领取标记
         */
        tgn_chong_award5 = 1025,
        /**
         * 天关挑战6重奖励领取标记
         */
        tgn_chong_award6 = 1026,
        /**
         * 天关挑战7重奖励领取标记
         */
        tgn_chong_award7 = 1027,
        /**
         * 天关挑战8重奖励领取标记
         */
        tgn_chong_award8 = 1028,
        /**
         * 天关挑战9重奖励领取标记
         */
        tgn_chong_award9 = 1029,
        /**
         * 天关挑战10重奖励领取标记
         */
        tgn_chong_award10 = 1030,
        /**
         * 天关挑战11重奖励领取标记
         */
        tgn_chong_award11 = 1031,
        /**
         * 天关挑战12重奖励领取标记
         */
        tgn_chong_award12 = 1032,
        /**
         * 天关挑战13重奖励领取标记
         */
        tgn_chong_award13 = 1033,
        /**
         * 天关挑战14重奖励领取标记
         */
        tgn_chong_award14 = 1034,
        /**
         * 天关挑战15重奖励领取标记
         */
        tgn_chong_award15 = 1035,
        /**
         * 天关挑战16重奖励领取标记
         */
        tgn_chong_award16 = 1036,
        /**
         * 天关挑战17重奖励领取标记
         */
        tgn_chong_award17 = 1037,
        /**
         * 天关挑战18重奖励领取标记
         */
        tgn_chong_award18 = 1038,
        /**
         * 天关挑战19重奖励领取标记
         */
        tgn_chong_award19 = 1039,
        /**
         * 天关挑战20重奖励领取标记
         */
        tgn_chong_award20 = 1040,
        /**
         * 微端奖励
         */
        micro_client_login_award = 1101,
        /**
         * 收藏奖励
         */
        favourite_game_award = 1102,
        /**
         * 首次红名奖励
         */
        ren_name_award = 1104,
        /**
         * 迅雷奖励
         */
        platform_Thunder = 1105,
        /**
         * 602
         */
        platform_602 = 1106,
        /**
         * 迅雷登陆奖励
         */
        thunder_login_award = 1107,
        /**
         * 天赋重置
         */
        talent_chongzhi = 1201,
        /**
         * 未知暗殿暗箱奖励1
         */
        wzad_award_1 = 1301,
        /**
         * 未知暗殿暗箱奖励2
         */
        wzad_award_2 = 1302,
        /**
         * 未知暗殿暗箱奖励3
         */
        wzad_award_3 = 1303,
        /**
         * 未知暗殿暗箱奖励4
         */
        wzad_award_4 = 1304,
        /**
         * 未知暗殿暗箱奖励5
         */
        wzad_award_5 = 1305,
        /**
         * 祈福系统暴击随机数(金币)
         */
        qifu_rand = 2001,
        /**
         * 祈福系统暴击随机数(绑元)
         */
        qifu_rand2 = 2002,
        /**
         * 祈福第一次标志
         */
        qifu_first = 2003,
        /**
         * 最后获取到的公共邮件时间
         */
        public_mail_last_time = 2101,
        /**
         * 个人副本-盟重地牢最大星级
         */
        di_lao_star = 3001,
        /**
         * 个人副本-蛇谷探险最大星级
         */
        she_gu_star = 3002,
        /**
         * 个人副本-沃玛大厅最大星级
         */
        wo_ma_star = 3003,
        /**
         * 个人副本-石墓试练最大星级
         */
        shi_mu_star = 3004,
        /**
         * 个人副本-祖玛神殿最大星级
         */
        zu_ma_star = 3005,
        /**
         * 个人副本-僵尸密洞最大星级
         */
        jiang_shi_star = 3006,
        /**
         * 个人高级副本-宝石宝藏最大星级
         */
        bao_zang_star = 3007,
        /**
         * 个人高级副本-皇陵甬道最大星级
         */
        huang_ling_star = 3008,
        /**
         * 个人高级副本-机关圣城最大星级
         */
        sheng_cheng_star = 3009,
        /**
         * 个人副本-盟重地牢星级奖励领取标记
         */
        di_lao_award = 3011,
        /**
         * 个人副本-蛇谷探险星级奖励领取标记
         */
        she_gu_award = 3012,
        /**
         * 个人副本-沃玛大厅星级奖励领取标记
         */
        wo_ma_award = 3013,
        /**
         * 个人副本-石墓试练星级奖励领取标记
         */
        shi_mu_award = 3014,
        /**
         * 个人副本-祖玛神殿星级奖励领取标记
         */
        zu_ma_award = 3015,
        /**
         * 个人副本-僵尸密洞星级奖励领取标记
         */
        jiang_shi_award = 3016,
        /**
         * 个人高级副本-宝石宝藏星级奖励领取标记
         */
        bao_zang_award = 3017,
        /**
         * 个人高级副本-皇陵甬道星级奖励领取标记
         */
        huang_ling_award = 3018,
        /**
         * 个人高级副本-机关圣城星级奖励领取标记
         */
        sheng_cheng_awrd = 3019,
        /**
         * 神武当前等级
         */
        shenwu_curr_lv = 4001,
        /**
         * 藏宝图完成次数
         */
        treasure_complete_count = 4002,
        /**
         * 灰名开始时间/秒
         */
        hm_gray_start_time = 4100,
        /**
         * 上次减少pkval的时间
         */
        hm_pkval_last_time = 4101,
        /**
         * 禁言类型
         */
        jin_yan_type = 4200,
        /**
         * 禁言途径
         */
        jin_yan_way = 4201,
        /**
         * 禁言结束时间
         */
        jin_yan_end_time = 4202,
        /**
         * 押镖保险
         */
        yabiao_insurance = 4301,
        /**
         * 正在押镖的镖车id
         */
        yabiao_id = 4302,
        /**
         * 押镖开始时间
         */
        yabiao_start_time = 4304,
        /**
         * 镖车精灵id
         */
        yabiao_sprit_id = 4305,
        /**
         * 总共挖宝次数
         */
        mine_total_count = 4401,
        /**
         * 第一次挖宝给予指定物品标志
         */
        mine_first_item = 4402,
        /**
         * 第一次使用元宝挖宝
         */
        mine_first_money = 4403,
        /**
         * 主线任务boss给装备1
         */
        maintask_boss_give1 = 4404,
        /**
         * 主线任务boss给装备2
         */
        maintask_boss_give2 = 4405,
        /**
         * 特惠礼包一
         */
        open_server_activity_tehui_gift1 = 5001,
        /**
         * 特惠礼包二
         */
        open_server_activity_tehui_gift2 = 5002,
        /**
         * 特惠礼包三
         */
        open_server_activity_tehui_gift3 = 5003,
        /**
         * 特惠礼包四
         */
        open_server_activity_tehui_gift4 = 5004,
        /**
         * 特惠礼包五
         */
        open_server_activity_tehui_gift5 = 5005,
        /**
         * 跨服特惠礼包一
         */
        cross_open_server_activity_tehui_gift1 = 5101,
        /**
         * 跨服特惠礼包二
         */
        cross_open_server_activity_tehui_gift2 = 5102,
        /**
         * 跨服特惠礼包三
         */
        cross_open_server_activity_tehui_gift3 = 5103,
        /**
         * 跨服特惠礼包四
         */
        cross_open_server_activity_tehui_gift4 = 5104,
        /**
         * 桃源兑换
         */
        tao_yuan_dui_huan = 6000,
        /**
         * 经验炼制已使用次数
         */
        exp_smelt_use_count = 6001,
        /**
         * 经验炼制当前是开启【0未开启，1已开启，2功能关闭】
         */
        exp_smelt_is_open = 6002,
        /**
         * 通天塔当前次数
         */
        tong_tian_tower_cur_floor = 6003,
        /**
         * 通天塔BOSS状态
         */
        tong_tian_tower_boss_state = 6004,
        /**
         * 360特权奖励1
         */
        pf_360_privilege_award1 = 7001,
        /**
         * 360特权奖励2
         */
        pf_360_privilege_award2 = 7002,
        /**
         * 360特权奖励3
         */
        pf_360_privilege_award3 = 7003,
        /**
         * 360特权奖励4
         */
        pf_360_privilege_award4 = 7004,
        /**
         * 360特权奖励5
         */
        pf_360_privilege_award5 = 7005,
        /**
         * 360特权重置时间
         */
        pf_360_privilege_reset = 7101,
        /**
         * 帮会创建推荐状态
         */
        guild_creage_recommend = 8001,
        /**
         * 帮会加入状态推荐
         */
        guild_join_recommend = 8002,
        /**
         * 首次加入帮会公告
         */
        guild_join_mail = 8003,
        /**
         * 搜狗皮肤奖励状态
         */
        pf_sogou_skin_reward = 9002,
        /**
         * 搜狗大厅奖励状态
         */
        pf_sogou_hall_reward = 9003,
        /**
         * 书的id （ 通过id查表获得等阶 等级）
         */
        sky_book_id = 9102,
        /**
         * 火龙之心等级
         */
        hero_dragon_heart_level = 9103,
        /**
         * 幸运转盘-玩家当前可兑换次数
         */
        luck_turntable_count = 10001,
        /**
         * 幸运转盘-玩家抽奖剩余次数
         */
        luck_lottery_surplus_count = 10002,
        /**
         * 首冲大礼
         */
        first_recharge = 11001,
        /**
         * 组队属性BOSS通关最高层
         */
        team_four_temple_layer = 12001,
        /**
         * 炼制开启时间
         */
        exp_refine_open_time = 12002,
        /**
         * 组队副本执行新手期标记
         */
        team_clone_new_role = 12003,
        /**
         * 组队副本执行新手期标记四神宫
         */
        team_clone_new_role_ssg = 12004,
        /**
         * 推送-首冲59级气泡
         */
        push_first_pay_59 = 13001,
        /**
         * 推送-首冲60级气泡
         */
        push_first_pay_60 = 13002,
        /**
         * 推送-特权V1-前7天
         */
        push_privilege_v1_7day = 13101,
        /**
         * 推送-VIPv3-前7天
         */
        push_vip_v3_7day = 13201,
        /**
         * 推送-金币-前7天
         */
        push_gold_7day = 13301,
        /**
         * 推送-羽毛-前7天
         */
        push_feather_7day = 13302,
        /**
         * 遗物套装公告
         */
        suit_relic_show = 13303,
        /**
         * 武魂红色等级
         */
        role_warrior_soul_level_red = 14001,
        /**
         * 武魂绿色等级
         */
        role_warrior_soul_level_green = 14002,
        /**
         * 武魂蓝色等级
         */
        role_warrior_soul_level_blue = 14003,
        /**
         * 武魂黄色等级
         */
        role_warrior_soul_level_yellow = 14004,
        /**
         * 神阁刷新Boss消费金额
         */
        god_pavilion_consume_money = 15001,
        /**
         * 特权卡重置标记
         */
        card_reset = 16001,
        /**
         * 斗兽场首次登陆
         */
        colosseum_count = 16002,
        /**
         * 强化副本是否可以扫荡标记
         */
        qiang_hua_can_sweep = 17001,
        /**
         * 伏魔副本是否可以扫荡标记
         */
        fu_mo_can_sweep = 17002,
        /**
         * 裂变之灾是否可以扫荡标记
         */
        lie_bian_zhi_zai_sweep = 17003,
        /**
         * 玉佩可扫荡标记
         */
        yu_pei_sweep = 17004,
        /**
         * 神石可扫荡标记
         */
        shen_shi_sweep = 17005,
        /**
         * 龙珠可扫荡标记
         */
        long_zhu_sweep = 17006,
        /**
         * 如意可扫荡标记
         */
        ru_yi_sweep = 17007,
        /**
         * 迷惘密室可扫荡标记
         */
        mi_wang_mi_shi_sweep = 17008,
        /**
         * vip大放送领取标记
         */
        vip_notice_award_gear = 17009,
        /**
         * 第一次装备穿戴齐
         */
        first_time_dress_equip_full = 17010,
        /**
         * 进入的福利地图时间
         */
        welfare_map_enter_time = 17011,
        /**
         * 是否主线盟重边防标识
         */
        mz_border_istrunk_flag = 17012,
        /**
         * 地图击杀连击数量
         */
        informKill_count = 17013,
        /**
         * 超级符文炼制
         */
        super_fuwenlianzhi = 17014,
        /**
         * 翻牌标记
         */
        extract_card_flag = 17015,
        /**
         * 创建过帮会的标记
         */
        guild_has_create = 17016,
        /**
         * 全民饮酒次数_普通饮酒
         */
        quan_min_yin_jiu_times_normal = 17017,
        /**
         * 跨服全民饮酒抽奖总次数(个人)
         */
        quan_min_yin_jiu_all_times = 17018,
        /**
         * 跨服日常完成次数
         */
        cross_ri_chang_tiems = 17019,
        /**
         * 经验副本是否可以扫荡标记
         */
        jing_yan_can_sweep = 17020,
        /**
         * 免费翻牌每轮使用次数
         */
        extract_card_free_count = 17021,
        /**
         * 非免费翻牌每轮使用次数
         */
        extract_card_no_free_count = 17022,
        /**
         * 人物参加最高帮会得等级
         */
        guild_top_lv = 17023,
        /**
         * 完成过一次玉佩副本
         */
        yu_pei_complete = 17024,
        /**
         * 完成过一次神石副本
         */
        shen_shi_complete = 17025,
        /**
         * 完成过一次龙珠副本
         */
        long_zhu_complete = 17026,
        /**
         * 完成过一次如意副本
         */
        ru_yi_complete = 17027,
        /**
         * 完成过一次宝石副本
         */
        bao_shi_complete = 17028,
        /**
         * 完成过一次强化石副本
         */
        qiang_hua_shi_complete = 17029,
        /**
         * 任务所有的帮会贡献
         */
        guild_all_gong_xian = 17030,
        /**
         * 经验副本领奖标记
         */
        jing_yan_award_flag = 17031,
        /**
         * 全民饮酒次数_高级饮酒
         */
        quan_min_yin_jiu_times_advance = 17032,
        /**
         * 是否是第一次进入经验副本
         */
        jing_yan_fu_ben_first = 17033,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumRoleDailyData {
        /**
         * 所有
         */
        all = -1,
        /**
         * 无
         */
        none = 0,
        /**
         * 道具使用次数枚举开始
         */
        item_use_count_start = 1,
        /**
         * 聚灵珠使用状态
         */
        item_energy_use = 5,
        /**
         * 道具使用次数枚举结束
         */
        item_use_count_end = 1000,
        /**
         * 每日首次挖宝10次
         */
        daily_first_mine = 1001,
        /**
         * vip每日buff奖励
         */
        vip_buff_award = 1002,
        /**
         * 普通挖宝次数
         */
        mine_count_normal = 1003,
        /**
         * 普通挖宝宝箱个数
         */
        mine_box_count_normal = 1004,
        /**
         * 兑换修为每日次数
         */
        cultivation_count = 1005,
        /**
         * 极致装备强化每日次数标记
         */
        ace_equip_intensify = 1006,
        /**
         * 除魔任务完成次数
         */
        chu_mo_count = 1101,
        /**
         * 封魔岭完成次数
         */
        feng_mo_ling = 1102,
        /**
         * 天关每日挑战次数
         */
        tian_guan_count = 1103,
        /**
         * 除魔任务购买次数
         */
        chu_mo_buy_count = 1104,
        /**
         * 每日神武任务奖励领取标记
         */
        sw_mission_award_flag = 1105,
        /**
         * 每日活跃值
         */
        daily_activte_value = 1106,
        /**
         * 挖矿任务完成次数
         */
        wa_kuang_count = 1107,
        /**
         * 卧龙伏魔完成次数
         */
        wo_long_fu_mo_count = 1108,
        /**
         * 天关购买次数
         */
        tian_guan_buy_count = 1109,
        /**
         * 个人副本-盟重地牢
         */
        private_clone_di_lao = 1301,
        /**
         * 个人副本-蛇谷探险
         */
        private_clone_she_gu = 1302,
        /**
         * 个人副本-沃玛大厅
         */
        private_clone_wo_ma = 1303,
        /**
         * 个人副本-石墓试练
         */
        private_clone_shi_mu = 1304,
        /**
         * 个人副本-祖玛神殿
         */
        private_clone_zu_ma = 1305,
        /**
         * 个人副本-僵尸密洞
         */
        private_clone_jiang_shi = 1306,
        /**
         * 个人高级副本-宝石宝藏
         */
        private_clone_bao_shi = 1307,
        /**
         * 个人高级副本-皇陵甬道
         */
        private_clone_huang_ling = 1308,
        /**
         * 个人高级副本-机关圣城
         */
        private_clone_sheng_cheng = 1309,
        /**
         * 绑定金币祈福次数
         */
        qifu_bindgold_count = 1401,
        /**
         * 绑定元宝祈福次数
         */
        qifu_bindmoney_count = 1402,
        /**
         * 祈福得到的绑定金币
         */
        qifu_bindgold_num = 1403,
        /**
         * 祈福得到的绑定元宝
         */
        qifu_bindmoney_num = 1404,
        /**
         * 荣誉系统领取俸禄次数
         */
        rongyu_get_award = 1501,
        /**
         * 雷霆副本进入次数
         */
        leiting_enter_count = 1601,
        /**
         * 英雄冢进入次数
         */
        ying_xiong_zhong_count = 1701,
        /**
         * 幻境进入次数
         */
        huan_jing_count = 1801,
        /**
         * 囚魔之路1当天最大层数
         */
        qiu_mo_zhi_lu_1_ceng = 1901,
        /**
         * 囚魔之路2当天最大层数
         */
        qiu_mo_zhi_lu_2_ceng = 1902,
        /**
         * 囚魔之路3当天最大层数
         */
        qiu_mo_zhi_lu_3_ceng = 1903,
        /**
         * 押镖次数
         */
        yabiao_count = 2001,
        /**
         * 押镖刷新次数
         */
        yabiao_refresh_count = 2002,
        /**
         * 刷新前镖车id
         */
        yabiao_currid = 2003,
        /**
         * 中级挖矿持续时间
         */
        dig_mine_have_time_normal = 2101,
        /**
         * 高级挖矿持续时间
         */
        dig_mine_have_time_hight = 2102,
        /**
         * 挖矿精力
         */
        dig_mine_energy = 2103,
        /**
         * 活跃度一
         */
        active_award_one = 2201,
        /**
         * 活跃度二
         */
        active_award_two = 2202,
        /**
         * 活跃度三
         */
        active_award_three = 2203,
        /**
         * 活跃度四
         */
        active_award_four = 2204,
        /**
         * 炼狱迷宫物品1兑换次数
         */
        lymg_count1 = 2301,
        /**
         * 炼狱迷宫物品2兑换次数
         */
        lymg_count2 = 2302,
        /**
         * 炼狱迷宫物品3兑换次数
         */
        lymg_count3 = 2303,
        /**
         * 炼狱迷宫物品4兑换次数
         */
        lymg_count4 = 2304,
        /**
         * 炼狱迷宫物品5兑换次数
         */
        lymg_count5 = 2305,
        /**
         * 帮会押镖次数
         */
        bhyb_count = 2401,
        /**
         * 银卡
         */
        silver_card_daily_gift = 2501,
        /**
         * 金卡
         */
        gold_card_daily_gift = 2502,
        /**
         * 至尊卡
         */
        supreme_card_daily_gift = 2503,
        /**
         * 特权卡聚灵珠限制
         */
        card_energy_count = 2504,
        /**
         * 追魂殿次数
         */
        zhu_hui_dian_count = 2601,
        /**
         * 桃源之门兑换次数
         */
        tao_yuan_dui_huan_count = 2701,
        /**
         * 魔金密室兑换数量
         */
        mo_jin_dui_huan_count = 2801,
        /**
         * 九子封魔次数
         */
        jiu_zhi_feng_mo_count = 2901,
        /**
         * 暗箱掉落次数
         */
        role_black_box_drop = 2902,
        /**
         * 暗箱死亡次数
         */
        role_black_box_dead = 2903,
        /**
         * 所有帮会个人捐献每日最大数量
         */
        guild_donate_max = 3001,
        /**
         * 深渊迷阵1
         */
        shen_yuan_mi_zhen_count1 = 3101,
        /**
         * 深渊迷阵2
         */
        shen_yuan_mi_zhen_count2 = 3102,
        /**
         * 深渊迷阵3
         */
        shen_yuan_mi_zhen_count3 = 3103,
        /**
         * 360特权奖励
         */
        pf_360_tequan_1 = 3201,
        /**
         * 神武任务完成次数
         */
        sw_task_comple_count = 3202,
        /**
         * 今日神武殿堂活动参与标志
         */
        sw_active_enter_sign = 3203,
        /**
         * 360卫士加速特权奖励
         */
        pf_360_accelerate = 3204,
        /**
         * 今日是否已经有过登陆的标志
         */
        login_sign = 3205,
        /**
         * 激情泡点当日进入标志
         */
        jqpd_active_enter_sign = 3206,
        /**
         * 元宝大作战进入次数
         */
        ybdzz_activity_count = 3207,
        /**
         * 每日挖宝次数
         */
        mine_day_count = 3301,
        /**
         * 开服活动探宝大礼领取标志
         */
        mine_getaward_flag = 3302,
        /**
         * 帮会boss1领取状态
         */
        guild_boss_1_award = 3401,
        /**
         * 帮会boss2领取状态
         */
        guild_boss_2_award = 3402,
        /**
         * 帮会boss3领取状态
         */
        guild_boss_3_award = 3403,
        /**
         * 帮会boss4领取状态
         */
        guild_boss_4_award = 3404,
        /**
         * 帮会boss5领取状态
         */
        guild_boss_5_award = 3405,
        /**
         * 帮会boss6领取状态
         */
        guild_boss_6_award = 3406,
        /**
         * 帮会boss7领取状态
         */
        guild_boss_7_award = 3407,
        /**
         * 帮会守护个人领取标记
         */
        guild_ward_flag = 3408,
        /**
         * 帮会禁地进入次数
         */
        guild_forbid_count = 3411,
        /**
         * 八卦活动1层领取标记
         */
        ba_gua_ceng_1_lq_flag = 3501,
        /**
         * 八卦活动2层领取标记
         */
        ba_gua_ceng_2_lq_flag = 3502,
        /**
         * 八卦活动3层领取标记
         */
        ba_gua_ceng_3_lq_flag = 3503,
        /**
         * 八卦活动4层领取标记
         */
        ba_gua_ceng_4_lq_flag = 3504,
        /**
         * 八卦活动5层领取标记
         */
        ba_gua_ceng_5_lq_flag = 3505,
        /**
         * 八卦活动6层领取标记
         */
        ba_gua_ceng_6_lq_flag = 3506,
        /**
         * 八卦活动7层领取标记
         */
        ba_gua_ceng_7_lq_flag = 3507,
        /**
         * 八卦活动排行奖励领取标记
         */
        ba_gua_lq_flag = 3508,
        /**
         * 通天塔进行次数
         */
        tong_tian_tower_count = 3600,
        /**
         * 资源战类型1兑换次数
         */
        zi_yuan_get_count1 = 3701,
        /**
         * 资源战类型2兑换次数
         */
        zi_yuan_get_count2 = 3702,
        /**
         * 资源战类型3兑换次数
         */
        zi_yuan_get_count3 = 3703,
        /**
         * 资源战类型4兑换次数
         */
        zi_yuan_get_count4 = 3704,
        /**
         * 资源战类型5兑换次数
         */
        zi_yuan_get_count5 = 3705,
        /**
         * 资源战个人积分
         */
        zi_yuan_role_score = 3706,
        /**
         * 物品回收经验上限
         */
        item_recyle_exp_max = 3707,
        /**
         * 神威魔狱1层领取标志
         */
        active_shenweimoyu_1_flag = 3801,
        /**
         * 神威魔狱2层领取标志
         */
        active_shenweimoyu_2_flag = 3802,
        /**
         * 神威魔狱3层领取标志
         */
        active_shenweimoyu_3_flag = 3803,
        /**
         * 神威魔狱4层领取标志
         */
        active_shenweimoyu_4_flag = 3804,
        /**
         * 神威魔狱5层领取标志
         */
        active_shenweimoyu_5_flag = 3805,
        /**
         * 神威魔狱6层领取标志
         */
        active_shenweimoyu_6_flag = 3806,
        /**
         * 神威魔狱7层领取标志
         */
        active_shenweimoyu_7_flag = 3807,
        /**
         * 神威魔狱8层领取标志
         */
        active_shenweimoyu_8_flag = 3808,
        /**
         * 神威魔狱9层领取标志
         */
        active_shenweimoyu_9_flag = 3809,
        /**
         * 神威魔狱10层领取标志
         */
        active_shenweimoyu_10_flag = 3810,
        /**
         * 帮会建设捐献金币次数
         */
        guild_build_donate_gold = 3811,
        /**
         * 帮会建设捐献元宝次数
         */
        guild_build_donate_money = 3812,
        /**
         * 帮会免费上香次数
         */
        guild_pray_free_num = 3813,
        /**
         * 帮会元宝上香次数
         */
        guild_pray_money_num = 3814,
        /**
         * 神威魔狱进入的最大层
         */
        active_shenweimoyu_ceng = 3815,
        /**
         * 帮会任务完成次数
         */
        guild_mission_count = 3816,
        /**
         * 组队烧猪进入次数
         */
        active_team_shao_zhu_count = 3817,
        /**
         * 组队烧猪基础经验
         */
        team_shao_zhu_exp = 3818,
        /**
         * 组队属性BOSS
         */
        team_four_temple = 3819,
        /**
         * 特权卡人物死亡次数
         */
        card_role_die_count = 3820,
        /**
         * 特权卡人物死亡阈值
         */
        card_role_die_value_count = 3821,
        /**
         * 全民红包领取次数
         */
        national_red_vip_count = 3822,
        /**
         * 活动_虚幻洞窟参加标志
         */
        aticve_join_xuan_huan_dong_ku = 3823,
        /**
         * 好友召唤次数
         */
        relation_call = 3824,
        /**
         * 经验神炉次数
         */
        exp_shenlu_count = 3825,
        /**
         * 修为神炉次数
         */
        xiuwei_shenlu_count = 3826,
        /**
         * 经验炼制次数
         */
        exp_refine_daily_count = 3827,
        /**
         * 组队副本每日匹配机器人计数
         */
        team_clone_refine_daily_count = 3828,
        /**
         * 玉佩副本
         */
        yu_pei = 3834,
        /**
         * 神石副本
         */
        shen_shi = 3835,
        /**
         * 龙珠副本
         */
        long_zhu = 3837,
        /**
         * 如意副本
         */
        ru_yi = 3838,
        /**
         * 心魔密室材料提交次数
         */
        xinmo_submit_count = 3840,
        /**
         * 心魔密室2
         */
        xinmo_submit_count2 = 3841,
        /**
         * 心魔密室3
         */
        xinmo_submit_count3 = 3842,
        /**
         * 玉佩副本扫荡完成
         */
        yu_pei_sweep_complete = 3843,
        /**
         * 神石副本扫荡完成
         */
        shen_shi_sweep_complete = 3844,
        /**
         * 龙珠副本扫荡完成
         */
        long_zhu_sweep_complete = 3845,
        /**
         * 如意副本扫荡完成
         */
        ru_yi_sweep_complete = 3846,
        /**
         * 宝石副本扫荡完成
         */
        new_bao_shi_sweep_complete = 3847,
        /**
         * 强化石副本扫荡完成
         */
        new_qiang_hua_shi_sweep_complete = 3848,
        /**
         * 新宝石副本
         */
        new_bao_shi = 3849,
        /**
         * 新强化石副本
         */
        new_qiang_hua_shi = 3850,
        /**
         * 帮会商店购买次数(中间禁止插入使用)
         */
        guild_mall_start = 4000,
        /**
         * 帮会商店购买次数(中间禁止插入使用)
         */
        guild_mall_end = 5000,
        /**
         * 英雄修为兑换次数
         */
        hero_cultivation_count = 5708,
        /**
         * 帝陵遗迹1进入次数
         */
        mausoleum_historical_site_count1 = 5709,
        /**
         * 帝陵遗迹2进入次数
         */
        mausoleum_historical_site_count2 = 5710,
        /**
         * 帝陵遗迹3进入次数
         */
        mausoleum_historical_site_count3 = 5711,
        /**
         * 帝陵遗迹4进入次数
         */
        mausoleum_historical_site_count4 = 5712,
        /**
         * 帝陵遗迹5进入次数
         */
        mausoleum_historical_site_count5 = 5713,
        /**
         * 帝陵遗迹6进入次数
         */
        mausoleum_historical_site_count6 = 5714,
        /**
         * 帝陵遗迹7进入次数
         */
        mausoleum_historical_site_count7 = 5715,
        /**
         * 帝陵遗迹8进入次数
         */
        mausoleum_historical_site_count8 = 5716,
        /**
         * 帝陵遗迹9进入次数
         */
        mausoleum_historical_site_count9 = 5717,
        /**
         * 帝陵遗迹10进入次数
         */
        mausoleum_historical_site_count10 = 5718,
        /**
         * 帝陵遗迹进11入次数
         */
        mausoleum_historical_site_count11 = 5719,
        /**
         * 英雄密室1进入次数
         */
        hero_adytum_count1 = 5720,
        /**
         * 英雄密室2进入次数
         */
        hero_adytum_count2 = 5721,
        /**
         * 英雄密室3进入次数
         */
        hero_adytum_count3 = 5722,
        /**
         * 英雄密室4进入次数
         */
        hero_adytum_count4 = 5723,
        /**
         * 英雄密室5进入次数
         */
        hero_adytum_count5 = 5724,
        /**
         * 英雄密室6进入次数
         */
        hero_adytum_count6 = 5725,
        /**
         * 英雄密室7进入次数
         */
        hero_adytum_count7 = 5726,
        /**
         * 英雄密室8进入次数
         */
        hero_adytum_count8 = 5727,
        /**
         * 英雄密室9进入次数
         */
        hero_adytum_count9 = 5728,
        /**
         * 英雄密室10进入次数
         */
        hero_adytum_count10 = 5729,
        /**
         * 英雄密室11进入次数
         */
        hero_adytum_count11 = 5730,
        /**
         * 神阁宝库进入次数
         */
        god_pavilion_ount = 5731,
        /**
         * 神阁宝库VIP进入次数
         */
        god_pavilion_vip_ount = 5732,
        /**
         * 书魂任务接受次数
         */
        book_soul_mission_count = 5733,
        /**
         * 每次活动饮酒次数
         */
        item_use_yinjiu = 5734,
        /**
         * 押镖材料提交次数
         */
        yabiao_material_commit = 5735,
        /**
         * 洞窟探宝进入次数
         */
        cave_treasure_count = 5736,
        /**
         * 守卫盟重进入次数
         */
        shouweimengzhong_count = 5737,
        /**
         * 集字有礼提交次数
         */
        ji_zi_you_li = 5738,
        /**
         * 盟重边防最大次数
         */
        meng_zhong_bian_fang_max_count = 5739,
        /**
         * 盟重边防当前次数
         */
        meng_zhong_bian_fang_cur_count = 5740,
        /**
         * 盟重边防购买次数
         */
        meng_zhong_bian_fang_buy_count = 5741,
        /**
         * 英雄试炼次数
         */
        hero_trial_count = 5742,
        /**
         * 英雄试炼最大次数
         */
        hero_trial_max_count = 5743,
        /**
         * 火龙任务次数
         */
        fiery_dragon_mission_count = 5744,
        /**
         * 角色聚灵珠使用次数
         */
        role_enery_use_count = 5745,
        /**
         * 英雄聚灵珠使用次数
         */
        hero_enery_use_count = 5746,
        /**
         * 角色转生丹(小)使用次数
         */
        role_rebirth_use_count = 5747,
        /**
         * 英雄转生丹(小)使用次数
         */
        hero_rebirth_use_count = 5748,
        /**
         * 全民屠魔使用次数
         */
        quan_min_tu_mo_use_count = 5749,
        /**
         * 全民屠魔购买次数
         */
        quan_min_tu_mo_buy_count = 5750,
        /**
         * 火龙任务刷新次数
         */
        fiery_dragon_mission_refresh_count = 5751,
        /**
         * 主线任务角色聚灵珠(中)使用次数
         */
        mission_role_enery_use_count = 5755,
        /**
         * 烤火领取内功罐次数普通
         */
        wlsz_kaohuo_normal = 5756,
        /**
         * 烤火领取内功罐次数高级
         */
        wlsz_kaohuo_advanced = 5757,
        /**
         *
         */
        wlsz_ag_box = 5758,
        /**
         * 跨服战场挖矿任务次数
         */
        kfzc_wk_mission_count = 5759,
        /**
         * 跨服战场挖矿任务状态
         */
        kfzc_wk_mission_state = 5760,
        /**
         * 跨服战场每次任务挖矿次数
         */
        kfzc_wk_mission_wkcount = 5761,
        /**
         * 角色转生丹(中)使用次数
         */
        role_rebirth_use_count_1 = 5762,
        /**
         * 角色转生丹(大)使用次数
         */
        role_rebirth_use_count_2 = 5763,
        /**
         * 角色转生丹(超)使用次数
         */
        role_rebirth_use_count_3 = 5764,
        /**
         * 英雄转生丹(中)使用次数
         */
        hero_rebirth_use_count_1 = 5765,
        /**
         * 英雄转生丹(大)使用次数
         */
        hero_rebirth_use_count_2 = 5766,
        /**
         * 英雄转生丹(超)使用次数
         */
        hero_rebirth_use_count_3 = 5767,
        /**
         * 凝元次数
         */
        get_god_pulse_val_use_count = 5768,
        /**
         * 凝元购买次数
         */
        get_god_pulse_val_buy_count = 5769,
        /**
         * 圣龙币兑换次数
         */
        get_saint_dragon_currency_count = 5770,
        /**
         * 迷惘密室进入次数
         */
        mi_wang_mi_shi_enter_count = 5771,
        /**
         * 强化石副本每日完成次数
         */
        qiang_hua_shi_count = 5772,
        /**
         * 裂变之灾副本每日完成次数
         */
        lie_bian_zhi_zai_count = 5773,
        /**
         * 等级副本当天进入次数
         */
        level_fu_ben = 5774,
        /**
         * 斗兽场进入次数
         */
        dou_shou_chang_count = 5775,
        /**
         * 求魔之路领取最大层标记
         */
        prisoner_road = 5776,
        /**
         * 是否是一天中第一次参加匹配
         */
        cross_match_day_is_frist = 5777,
        /**
         * 四象封印次数
         */
        si_xiang_feng_yin_count = 5779,
        /**
         * 神武试炼计数
         */
        shen_wu_shi_lian_count = 5780,
        /**
         * 武魂重置次数
         */
        wu_hun_reset_count = 5781,
        /**
         * 天降洪福次数
         */
        tian_jiang_hong_fu_count = 5782,
        /**
         * 跨服盟重边防当前次数
         */
        cross_meng_zhong_bian_fang_cur_count = 5783,
        /**
         * 跨服盟重边防最大次数
         */
        cross_meng_zhong_bian_fang_max_count = 5784,
        /**
         * 神龙封禅次数
         */
        dragon_god_feng_chan_count = 5785,
        /**
         * 神龙祭拜次数
         */
        dragon_god_ji_bai_count = 5786,
        /**
         * 神龙封禅暴击之后次数
         */
        dragon_god_feng_chan_crit_later = 5787,
        /**
         * 特权卡每日抵消掉落次数
         */
        card_role_unDrop_count = 5788,
        /**
         * 挖矿可用累计时长
         */
        kuang_total_time = 5789,
        /**
         * 挖矿时长
         */
        kuang_used_time = 5790,
        /**
         * 血战沙城进入次数
         */
        xue_zhan_sha_cheng_count = 5800,
        /**
         * 工资每天数量
         */
        wages_count = 5801,
        /**
         * 掉落保底暗箱次数
         */
        drop_black_equip_box_count = 5802,
        /**
         * 挖矿推送次数
         */
        kuang_ts_count = 5803,
        /**
         * 使用的符文免费次数
         */
        fuwen_free = 5804,
        /**
         * 翻牌道具使用次数
         */
        extract_cart_item_use = 5805,
        /**
         * 战神宝库挑战次数
         */
        mars_treasury_challenge_times = 5806,
        /**
         * 秘境探索购买次数
         */
        mijing_tansuo_buy_times = 5807,
        /**
         * 每日礼包
         */
        recharge_day_gift = 5808,
        /**
         * 是否是首次登陆
         */
        is_day_first_load = 5809,
        /**
         * 帮会假boss攻击次数
         */
        guild_fack_boss_attack_count = 5810,
        /**
         * 帮会假boss购买次数
         */
        guild_fack_boss_buy_count = 5811,
        /**
         * 帮会建设捐献物品次数
         */
        guild_build_donate_item = 5812,
        /**
         * 跨服饮酒券购买次数(元宝)
         */
        cross_yinjiu_quan_buy_times_yb = 5813,
        /**
         * 跨服饮酒券购买次数(钻石)
         */
        cross_yinjiu_quan_buy_times_money = 5814,
        /**
         * 帮会建设捐献物品2次数
         */
        guild_build_donate_item_2 = 5815,
        /**
         * 玲珑塔扫荡次数
         */
        ll_tower_sweep_count = 5816,
        /**
         * 商业化推送每日状态
         */
        push_window_state = 5817,
        /**
         * 经验副本次数
         */
        jing_yan_fu_ben = 5818,
        /**
         * 收费第几轮翻牌
         */
        extract_card_wheels = 5821,
        /**
         * 免费第几轮翻牌
         */
        extract_card_wheels_free = 5822,
        /**
         * 掘金次数（元宝
         */
        gold_digger_gold_count = 5823,
        /**
         * 掘金次数（钻石
         */
        gold_digger_money_count = 5824,
        /**
         * 玲珑塔挑战次数
         */
        ll_tower_chal_count = 5825,
        /**
         * 稀有boss领取排行奖励次数
         */
        boss_rank_award_count = 5826,
        /**
         * 死亡掉落物品保护次数
         */
        dead_drop_out_item_protect_count = 5827,
        /**
         * 神武任务完成次数
         */
        shenwu_mission_complete_count = 5828,
        /**
         * 限时活动进入次数
         */
        limit_active_join_count = 5829,
        /**
         * 求魔之路进入
         */
        qiu_mo_zhi_lu_enter = 5830,
        /**
         * 时间个人暗箱掉落记录时间戳1
         */
        time_drop_check_count_1 = 5831,
        /**
         * 时间个人暗箱掉落记录时间戳2
         */
        time_drop_check_count_2 = 5832,
        /**
         * 工资系统可领取钱数
         */
        wages_money_count = 5833,
        /**
         * 工资系统总积分
         */
        wages_all_score = 5834,
        /**
         * 工资系统已经领取得钱
         */
        wages_has_get = 5835,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 统一的奖励领取状态
 */
declare module protocol {
    const enum EnumRewardState {
        /**
         * 未知的
         */
        unknown = -1,
        /**
         * 未领取（可领取）
         */
        can_receive = 0,
        /**
         * 未完成的
         */
        not_complete = 1,
        /**
         * 已领取的
         */
        received = 2,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumReliveType {
        /**
         * 复活点复活
         */
        back = 0,
        /**
         * 原地复活
         */
        stand = 1,
        /**
         * 营地复活
         */
        ying_di = 2,
        /**
         * 广场复活
         */
        guang_chang = 3,
        /**
         * 旋云之巅元宝立即复活
         */
        xuan_yun_zhi_dian = 4,
        /**
         * 活动免费原地复活
         */
        active_free_relive = 5,
        /**
         * 组队副本免费复活
         */
        team_clone_free_relive = 6,
        /**
         * 组队副本花钱复活
         */
        team_clone_cost_relive = 7,
        /**
         * 通天塔复活
         */
        tongtianta_relive = 8,
        /**
         * 屠魔猎场复活
         */
        tumo_hunting_relive = 9,
        /**
         * 跨服争霸(GVG1)复活
         */
        kua_fu_zheng_ba_relive = 10,
        /**
         * 圣龙战场(GVG2)复活
         */
        sheng_long_zhan_chang_relive = 11,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 公告显示类型(玩家个人操作左下角，系统操作顶部)
 */
declare module protocol {
    const enum EnumRecoveryType {
        /**
         * 无操作
         */
        None = 0,
        /**
         * 公告限时类型左下角
         */
        ShowLeftQuarter = 1,
        /**
         * 公告类型顶部
         */
        ShowTop = 2,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumRecharge {
        /**
         * 无充值
         */
        none = 0,
        /**
         * 充值条件未领取
         */
        submit_recharge = 1,
        /**
         * 充值已领取
         */
        complete = 2,
        /**
         * 等级条件未领取
         */
        submit_level = 3,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumPTZoneAward {
        /**
         *
         */
        none = 0,
        /**
         * 新手礼包
         */
        primary = 1,
        /**
         * 成长等级礼包
         */
        grow_level = 2,
        /**
         * 每日活跃
         */
        daily_active = 3,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumPTYellowAward {
        /**
         *
         */
        none = 0,
        /**
         * 新手礼包
         */
        primary = 1,
        /**
         * 成长等级礼包
         */
        grow_level = 2,
        /**
         * 每日等级
         */
        daily_level = 3,
        /**
         * 每日年费
         */
        daily_year = 4,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumProfitType {
        /**
         * 无
         */
        none = 0,
        /**
         * 属性
         */
        attribute = 1,
        /**
         * 物品相关
         */
        item = 2,
        /**
         * 英雄属性相关
         */
        hero_attribute = 3,
        /**
         * 特殊显示字符串描述
         */
        special_text = 4,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 个人boss类型
 */
declare module protocol {
    const enum EnumPrivateBossType {
        /**
         * 普通boss
         */
        normal = 1,
        /**
         * 精英boss
         */
        elite = 2,
        /**
         * 特权卡boss
         */
        privilegeCard = 3,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 个人boos挑战开启条件
 */
declare module protocol {
    const enum EnumPrivateBossOpenType {
        /**
         * 无条件
         */
        none = 0,
        /**
         * 通关其他boss副本
         */
        pass_other_stage = 1,
        /**
         * 拥有特权卡
         */
        has_privilege_card = 2,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 测试热更协议
 */
declare module protocol {
    class test_hotfix_protocol_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class test_hotfix_protocol_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 个人boss通关类型
 */
declare module protocol {
    const enum EnumPrivateBoosPassType {
        /**
         * 未通关
         */
        not_pass = 0,
        /**
         * 普通通关
         */
        pass_normal = 1,
        /**
         * 完美通关
         */
        pass_perfect = 2,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 预购类型
 */
declare module protocol {
    const enum EnumPreOrderType {
        /**
         * 黄金预购
         */
        Type1 = 1,
        /**
         * 豪华预购
         */
        Type2 = 2,
        /**
         * 至尊预购
         */
        Type3 = 3,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumPosChangeReason {
        /**
         * 普通
         */
        normal = 0,
        /**
         * 传送点
         */
        teleport = 1,
        /**
         * 技能
         */
        skill = 2,
        /**
         * 道具
         */
        item = 3,
        /**
         * 复活
         */
        relive = 4,
        /**
         * 重连成功
         */
        reconnect = 5,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumPKState {
        /**
         * 正常
         */
        normal = 0,
        /**
         * 主动攻击
         */
        initiative = 1,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumPKMode {
        /**
         * 未定义
         */
        none = 0,
        /**
         * 和平
         */
        peace = 1,
        /**
         * 全体
         */
        all = 2,
        /**
         * 组队
         */
        team = 3,
        /**
         * 帮会
         */
        guild = 4,
        /**
         * 阵营
         */
        camp = 5,
        /**
         * 善恶
         */
        good_and_evil = 6,
        /**
         * 服务器模式
         */
        serviceCamp = 7,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 头像，头像框激活消费类型
 */
declare module protocol {
    const enum EnumOpenHeadPicExpenditureType {
        /**
         *
         */
        None = 0,
        /**
         * 钻石
         */
        money = 1,
        /**
         * 元宝
         */
        gold = 2,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 离线挂机状态
 */
declare module protocol {
    const enum EnumOfflineState {
        /**
         * 关闭离线挂机
         */
        off = 0,
        /**
         * 开启离线挂机
         */
        on = 1,
    }
}
/**
 * File is automatically generated, Please do not modify
 * NPC的UI类型(每个功能叠加1)
 */
declare module protocol {
    const enum EnumNpcUiType {
        /**
         * 无UI
         */
        none = 0,
        /**
         * 错误UI
         */
        error = 1,
        /**
         * 神威泡点
         */
        shen_wei_pao_dian = 10,
        /**
         * 元宝大作战
         */
        yuan_bao_da_zuo_zhan = 11,
        /**
         * 神威魔狱
         */
        shen_wei_mo_yu = 12,
        /**
         * 神威魔狱下一层
         */
        shen_wei_mo_yu_next_floor = 13,
        /**
         * 神威魔狱退出
         */
        shen_wei_mo_yu_exit = 14,
        /**
         * 精英阁领奖
         */
        jing_ying_ge_award = 15,
        /**
         * 精英阁
         */
        jing_ying_ge = 16,
        /**
         * 深渊大厅
         */
        shen_yuan_da_ting = 17,
        /**
         * 材料副本
         */
        cai_liao_fu_ben = 18,
        /**
         * 帮会地图
         */
        guild_map = 19,
        /**
         * 帮会篝火
         */
        guild_fire = 20,
        /**
         * 帮会个人篝火
         */
        guild_person_fire = 21,
        /**
         * 迷魂殿堂
         */
        mi_hun_dian_tang_sense = 22,
        /**
         * 迷魂殿堂外单位ui
         */
        mi_hun_dian_tang = 23,
        /**
         * 挖矿
         */
        wa_kuang = 24,
        /**
         * 钳虫巢穴
         */
        qian_chong_chao_xue = 25,
        /**
         * 遗忘秘境进入
         */
        yi_wang_mi_jing_enter = 26,
        /**
         * 遗忘秘境下一层
         */
        yi_wang_mi_jing_next_floor = 27,
        /**
         * 遗忘秘境退出
         */
        yi_wang_mi_jing_exit = 28,
        /**
         * 旋云之巅
         */
        xuan_yun_zhi_dian = 29,
        /**
         * 答题1
         */
        da_ti_1 = 30,
        /**
         * 答题2
         */
        da_ti_2 = 31,
        /**
         * 生存战场
         */
        shegn_cun_zhan_chang = 32,
        /**
         * boss之家
         */
        boss_home = 33,
        /**
         * boss之家1
         */
        boss_home_1 = 34,
        /**
         * boss之家2层
         */
        boss_home_2 = 35,
        /**
         * boss之家3层
         */
        boss_home_3 = 36,
        /**
         * 战神宝库(原:转生神殿)
         */
        zhuan_sheng_shen_dian = 37,
        /**
         * 玛雅殿堂
         */
        ma_ya_dian_tang = 38,
        /**
         * 玛雅殿堂_4层NPC进入5层
         */
        ma_ya_dian_tang_4_floor = 39,
        /**
         * 未知暗殿
         */
        wei_zhi_an_dian = 40,
        /**
         * 沙城战皇宫管理员
         */
        sha_cheng_battle = 43,
        /**
         * 镖车接取
         */
        biao_che_get = 44,
        /**
         * 镖车领奖
         */
        biao_che_award = 45,
        /**
         * 组队属性BOSS
         */
        four_temple = 46,
        /**
         * 帮会镖车接取
         */
        guild_biao_che_get = 47,
        /**
         * 组队烧猪npc
         */
        team_clone_shao_pig = 48,
        /**
         * 碎银矿脉
         */
        sui_yin_kuang_mai = 49,
        /**
         * 山贼入侵
         */
        shan_zei_ru_qin = 50,
        /**
         * 虚幻洞窟
         */
        xu_huan_dong_ku = 51,
        /**
         * 虚幻洞窟_宝箱NPC
         */
        xu_huan_dong_ku_bao_xiang_npc = 52,
        /**
         * 虚幻洞窟_野猪A
         */
        xu_huan_dong_ku_ye_zhu_A = 53,
        /**
         * 虚幻洞窟_野猪B
         */
        xu_huan_dong_ku_ye_zhu_B = 54,
        /**
         * 虚幻洞窟_超帅骷髅
         */
        xu_huan_dong_ku_kulou = 55,
        /**
         * 虚幻洞窟_钉耙猫
         */
        xu_huan_dong_ku_ding_pa_mao = 56,
        /**
         * 虚幻洞窟_金矿NPC
         */
        xu_huan_dong_ku_ye_gold_npc = 57,
        /**
         * 虚幻洞窟_神秘宝藏6
         */
        xu_huan_dong_ku_ye_treasure_box = 58,
        /**
         * 密室boss1
         */
        secret_boss_1 = 59,
        /**
         * 密室boss2
         */
        secret_boss_2 = 60,
        /**
         * 密室boss3
         */
        secret_boss_3 = 61,
        /**
         * 密室boss4
         */
        secret_boss_4 = 62,
        /**
         * 密室boss5
         */
        secret_boss_5 = 63,
        /**
         * 密室boss6
         */
        secret_boss_6 = 64,
        /**
         * 密室boss7
         */
        secret_boss_7 = 65,
        /**
         * 帮会押镖进入地图
         */
        guild_biao_che_enter = 66,
        /**
         * 密室boss8
         */
        secret_boss_8 = 67,
        /**
         * 密室boss9
         */
        secret_boss_9 = 68,
        /**
         * 密室boss10
         */
        secret_boss_10 = 69,
        /**
         * 卧龙山庄_烟火坑
         */
        wo_long_shan_zhuang_yan_huo = 70,
        /**
         * boss隐藏关卡npc
         */
        boss_hide_clone_npc = 71,
        /**
         * boss隐藏关卡
         */
        boss_hide_clone = 72,
        /**
         * 心魔大殿
         */
        xin_mo_da_dian = 73,
        /**
         * 帝陵遗迹
         */
        di_ling_yi_ji = 74,
        /**
         * 英雄密室
         */
        ying_xiong_mi_shi = 75,
        /**
         * 神阁宝库
         */
        shen_ge_baoku_npc = 76,
        /**
         * 神舰副本
         */
        shen_jian_fu_ben = 77,
        /**
         * 挖矿提交
         */
        wa_kuang_ti_jiao = 78,
        /**
         * 虚空幻境
         */
        xu_kong_huan_jing = 79,
        /**
         * 洞窟探宝
         */
        cave_treasure = 80,
        /**
         * 押镖材料提交
         */
        ya_biao_commit = 81,
        /**
         * 守卫盟重
         */
        shou_wei_meng_zhong = 82,
        /**
         * 斩将夺旗
         */
        zhan_jiang_duo_qi = 83,
        /**
         * 密道老人沙城进入
         */
        gcz_laoren_shacheng_enter = 84,
        /**
         * 密道老人密道进入
         */
        gcz_laoren_midao_enter = 85,
        /**
         * 密道老人密道进入1
         */
        gcz_laoren_midao_enter1 = 86,
        /**
         * 英雄试炼
         */
        ying_xiong_shi_lian = 87,
        /**
         * 天降洪福
         */
        tian_jiang_hong_fu = 88,
        /**
         * 全民屠魔
         */
        quan_min_tu_mo = 89,
        /**
         * 治疗npc
         */
        health_npc = 90,
        /**
         * 卧龙秘境NPC
         */
        wo_long_mi_jing_npc = 91,
        /**
         * 卧龙山庄_银箱子
         */
        wo_long_shan_zhuang_ag_box = 92,
        /**
         * 卧龙山庄_金箱子
         */
        wo_long_shan_zhuang_gold_box = 93,
        /**
         * 卧龙山庄_烤火
         */
        wo_long_shan_zhuang_kao_huo = 94,
        /**
         * 卧龙山庄go比奇
         */
        wo_long_shan_zhuang_go_bi_qi = 95,
        /**
         * 斗兽场
         */
        dou_shou_chang = 96,
        /**
         * 斗兽场1
         */
        dou_shou_chang_1 = 97,
        /**
         * 迷惘密室
         */
        mi_wang_mi_shi = 98,
        /**
         * 强化石副本
         */
        qiang_hua_shi = 99,
        /**
         * 裂变之灾
         */
        lie_bian_zhi_zai = 100,
        /**
         * 等级副本
         */
        deng_ji_fu_ben = 101,
        /**
         * 囚魔之路
         */
        prisoner_road = 102,
        /**
         * 万魔殿
         */
        wan_mo_dian = 103,
        /**
         * 四象封印
         */
        si_xiang_feng_yin = 104,
        /**
         * 四象封印buff
         */
        si_xiang_feng_yin_buff = 105,
        /**
         * 生化战场
         */
        biochemical_battle = 106,
        /**
         * 远古神殿NpcUI
         */
        yuan_gu_shen_dian = 107,
        /**
         * 神龙祭拜
         */
        fairy_dragon_worship = 108,
        /**
         * 神域探宝
         */
        shen_yu_tan_bao = 109,
        /**
         * 四象祭台
         */
        si_xiang_ji_tai = 110,
        /**
         * 守卫比奇
         */
        shou_wei_bi_qi = 111,
        /**
         * 屠魔猎场
         */
        tumo_hunting = 112,
        /**
         * 血战沙城
         */
        xue_zhan_sha_cheng = 113,
        /**
         * 跨服争霸(GVG1)
         */
        kua_fu_zheng_ba = 114,
        /**
         * 圣龙战场(GVG2)
         */
        sheng_long_zhan_chang = 115,
        /**
         * 经验副本
         */
        jing_yan = 116,
    }
}
/**
 * File is automatically generated, Please do not modify
 * NPC按钮名(每个功能叠加1000)
 */
declare module protocol {
    const enum EnumNpcBtName {
        /**
         * 神威泡点进入
         */
        shen_wei_pao_dian_enter = 1001,
        /**
         * 神威魔狱_下一层
         */
        shen_wei_mo_yu_next_floor = 2001,
        /**
         * 神威魔狱_退出
         */
        shen_wei_mo_yu_exit = 2002,
        /**
         * 神威魔狱_进入
         */
        shen_wei_mo_yu_enter = 2003,
        /**
         * 元宝大作战进入
         */
        yuan_bao_da_zuo_zhan_enter = 3001,
        /**
         * 精英阁领奖
         */
        jing_ying_ge_award = 4001,
        /**
         * 精英阁进入下层
         */
        jing_ying_ge_next = 4002,
        /**
         * 精英阁进入
         */
        jing_ying_ge_enter = 4003,
        /**
         * 深渊大厅进入
         */
        shen_yuan_da_ting_enter = 5001,
        /**
         * 帮会地图进入
         */
        guild_map_enter = 6001,
        /**
         * 帮会篝火领取火堆
         */
        guild_fire_take = 7001,
        /**
         * 帮会篝火助燃
         */
        guild_person_fire_help = 8001,
        /**
         * 迷魂殿堂_去2图
         */
        mi_hun_dian_tang_map_2 = 9001,
        /**
         * 迷魂殿堂_去3图
         */
        mi_hun_dian_tang_map_3 = 9002,
        /**
         * 迷魂殿堂_去4图
         */
        mi_hun_dian_tang_map_4 = 9003,
        /**
         * 迷魂殿堂_去5图
         */
        mi_hun_dian_tang_map_5 = 9004,
        /**
         * 迷魂殿堂_去6图
         */
        mi_hun_dian_tang_map_6 = 9005,
        /**
         * 迷魂殿堂_去7图
         */
        mi_hun_dian_tang_map_7 = 9006,
        /**
         * 迷魂殿堂_去8图
         */
        mi_hun_dian_tang_map_8 = 9007,
        /**
         * 迷魂殿堂_去9图
         */
        mi_hun_dian_tang_map_9 = 9008,
        /**
         * 迷魂殿堂_退出
         */
        mi_hun_dian_tang_map_exit = 9009,
        /**
         * 迷魂殿堂_进入
         */
        mi_hun_dian_tang_enter = 9010,
        /**
         * 低级矿石_进入
         */
        di_ji_kuang_shi_enter = 10001,
        /**
         * 钳虫巢穴进入
         */
        qian_chong_chao_xue_enter = 10101,
        /**
         * 遗忘秘境进入
         */
        yi_wang_mi_jing_enter = 11001,
        /**
         * 遗忘秘境下一层
         */
        yi_wang_mi_jing_next_floor = 11002,
        /**
         * 遗忘秘境退出
         */
        yi_wang_mi_jing_exit = 11003,
        /**
         * 旋云之巅进入
         */
        xuan_yun_zhi_dian_enter = 12001,
        /**
         * 旋云之巅退出
         */
        xuan_yun_zhi_dian_exit = 12002,
        /**
         * 答题榜单
         */
        da_ti_bang_dan = 13001,
        /**
         * 答题开始
         */
        da_ti_begin = 13002,
        /**
         * 榜单1
         */
        da_ti_bang_dan1 = 13003,
        /**
         * 答题开始1
         */
        da_ti_begin1 = 13004,
        /**
         * 生存战场
         */
        sheng_cun_zhan_chang_enter = 14001,
        /**
         * boss之家进入
         */
        boss_home_enter = 15001,
        /**
         * boss之家下一层
         */
        boss_home_next_floor = 15002,
        /**
         * boss之家退出
         */
        boss_home_exit = 15003,
        /**
         * 转生神殿1层
         */
        zhuan_sheng_shen_dian_enter_1 = 16001,
        /**
         * 转生神殿2层
         */
        zhuan_sheng_shen_dian_enter_2 = 16002,
        /**
         * 转生神殿3层
         */
        zhuan_sheng_shen_dian_enter_3 = 16003,
        /**
         * 转生神殿4层
         */
        zhuan_sheng_shen_dian_enter_4 = 16004,
        /**
         * 转生神殿5层
         */
        zhuan_sheng_shen_dian_enter_5 = 16005,
        /**
         * 转生神殿6层
         */
        zhuan_sheng_shen_dian_enter_6 = 16006,
        /**
         * 转生神殿7层
         */
        zhuan_sheng_shen_dian_enter_7 = 16007,
        /**
         * 转生神殿8层
         */
        zhuan_sheng_shen_dian_enter_8 = 16008,
        /**
         * 转生神殿9层
         */
        zhuan_sheng_shen_dian_enter_9 = 16009,
        /**
         * 玛雅殿堂进入
         */
        ma_ya_dian_tang_enter = 17001,
        /**
         * 玛雅殿堂进入1
         */
        ma_ya_dian_tang_enter1 = 17002,
        /**
         * 玛雅殿堂进入2
         */
        ma_ya_dian_tang_enter2 = 17003,
        /**
         * 玛雅殿堂进入3
         */
        ma_ya_dian_tang_enter3 = 17004,
        /**
         * 玛雅殿堂进入4
         */
        ma_ya_dian_tang_enter4 = 17005,
        /**
         * 未知暗殿1进入
         */
        wei_zhi_an_dian_enter_1 = 18001,
        /**
         * 未知暗殿2进入
         */
        wei_zhi_an_dian_enter_2 = 18002,
        /**
         * 未知暗殿3进入
         */
        wei_zhi_an_dian_enter_3 = 18003,
        /**
         * 未知暗殿4进入
         */
        wei_zhi_an_dian_enter_4 = 18004,
        /**
         * 未知暗殿5
         */
        wei_zhi_an_dian_enter_5 = 18005,
        /**
         * 沙城战进入皇宫
         */
        sha_cheng_battle_palace_enter = 19001,
        /**
         * 帮会-接取镖车
         */
        guild_ya_biao_get = 20001,
        /**
         * 帮会-押镖进入地图
         */
        guild_ya_biao_enter = 20002,
        /**
         * 碎银矿脉进入
         */
        sui_yin_kuang_mai_enter = 21001,
        /**
         * 山贼入侵
         */
        shan_zei_ru_qin = 22001,
        /**
         * 虚幻洞窟进入
         */
        xu_huan_dong_ku_enter = 23001,
        /**
         * 虚幻洞窟_宝箱NPC
         */
        xu_huan_dong_ku_baoxiang = 23002,
        /**
         * 虚幻洞窟_帮我A
         */
        xu_huan_dong_ku_help_A = 23003,
        /**
         * 虚幻洞窟_帮我B
         */
        xu_huan_dong_ku_help_B = 23004,
        /**
         * 虚幻洞窟_骷髅
         */
        xu_huan_dong_ku_kulou = 23005,
        /**
         * 虚幻洞窟_钉耙猫随机奖品
         */
        xu_huan_dong_ku_suiji = 23006,
        /**
         * 虚幻洞窟_金矿
         */
        xu_huan_dong_ku_jinkuang = 23007,
        /**
         * 虚幻洞窟_神秘宝藏(宝箱6事件)
         */
        xu_huan_dong_ku_ye_treasure_box = 23008,
        /**
         * 进入密室boss
         */
        secret_boss_enter = 24001,
        /**
         * 卧龙山庄_开始燃放烟火
         */
        wo_long_shan_zhuang_yan_huo_start = 25001,
        /**
         * 进入boss隐藏关卡
         */
        boss_hide_clone_enter = 26001,
        /**
         * 心魔大殿1
         */
        xin_mo_da_dian1 = 27001,
        /**
         * 心魔大殿2
         */
        xin_mo_da_dian2 = 27002,
        /**
         * 心魔大殿3
         */
        xin_mo_da_dian3 = 27003,
        /**
         * 心魔大殿4
         */
        xin_mo_da_dian4 = 27004,
        /**
         * 心魔密室
         */
        xin_mo_mi_shi = 27009,
        /**
         * 帝陵遗迹1
         */
        di_ling_yi_ji1 = 28001,
        /**
         * 帝陵遗迹2
         */
        di_ling_yi_ji2 = 28002,
        /**
         * 帝陵遗迹3
         */
        di_ling_yi_ji3 = 28003,
        /**
         * 帝陵遗迹4
         */
        di_ling_yi_ji4 = 28004,
        /**
         * 帝陵遗迹5
         */
        di_ling_yi_ji5 = 28005,
        /**
         * 帝陵遗迹6
         */
        di_ling_yi_ji6 = 28006,
        /**
         * 帝陵遗迹7
         */
        di_ling_yi_ji7 = 28007,
        /**
         * 帝陵遗迹8
         */
        di_ling_yi_ji8 = 28008,
        /**
         * 帝陵遗迹9
         */
        di_ling_yi_ji9 = 28009,
        /**
         * 帝陵遗迹10
         */
        di_ling_yi_ji10 = 28010,
        /**
         * 帝陵遗迹11
         */
        di_ling_yi_ji11 = 28011,
        /**
         * 英雄密室1
         */
        ying_xiong_mi_mishi1 = 29001,
        /**
         * 英雄密室2
         */
        ying_xiong_mi_mishi2 = 29002,
        /**
         * 英雄密室3
         */
        ying_xiong_mi_mishi3 = 29003,
        /**
         * 英雄密室4
         */
        ying_xiong_mi_mishi4 = 29004,
        /**
         * 英雄密室5
         */
        ying_xiong_mi_mishi5 = 29005,
        /**
         * 英雄密室6
         */
        ying_xiong_mi_mishi6 = 29006,
        /**
         * 英雄密室7
         */
        ying_xiong_mi_mishi7 = 29007,
        /**
         * 英雄密室8
         */
        ying_xiong_mi_mishi8 = 29008,
        /**
         * 英雄密室9
         */
        ying_xiong_mi_mishi9 = 29009,
        /**
         * 英雄密室10
         */
        ying_xiong_mi_mishi10 = 29010,
        /**
         * 英雄密室11
         */
        ying_xiong_mi_mishi11 = 29011,
        /**
         * 神阁宝库
         */
        shen_ge_bao_ku_enter = 30000,
        /**
         * 如意副本进入
         */
        ru_yi_enter = 30001,
        /**
         * 神石副本进入
         */
        shen_shi_enter = 30002,
        /**
         * 龙珠副本进入
         */
        long_zhu_enter = 30003,
        /**
         * 玉佩副本进入
         */
        yu_pei_enter = 30004,
        /**
         * 新宝石副本进入
         */
        new_bao_shi_enter = 30005,
        /**
         * 矿石提交
         */
        kuang_shi_ti_jiao_enter = 30006,
        /**
         * 洞窟探宝
         */
        cave_treasure = 30007,
        /**
         * 押镖提交信物
         */
        ya_biao_commit_token = 30010,
        /**
         * 押镖提交信物1
         */
        ya_biao_commit_token1 = 30011,
        /**
         * 强化石副本进入
         */
        new_qiang_hua_shi_enter = 30020,
        /**
         * 远古神殿
         */
        yuan_gu_shen_dian = 39001,
        /**
         * 斩将夺旗进入
         */
        zhan_jiang_duo_qi_enter = 40001,
        /**
         * 元宝盛宴进入
         */
        yuan_bao_sheng_yan_enter = 40010,
        /**
         * 英雄试炼
         */
        ying_xiong_shi_lian = 40020,
        /**
         * 天降洪湖
         */
        tian_jiang_hong_fu = 40030,
        /**
         * 全民屠魔进入
         */
        quan_min_tu_mo_enter1 = 40040,
        /**
         * 全民屠魔进入
         */
        quan_min_tu_mo_enter2 = 40041,
        /**
         * 全民屠魔进入
         */
        quan_min_tu_mo_enter3 = 40042,
        /**
         * 全民屠魔进入
         */
        quan_min_tu_mo_enter4 = 40043,
        /**
         * 全民屠魔进入
         */
        quan_min_tu_mo_enter5 = 40044,
        /**
         * 全民屠魔进入
         */
        quan_min_tu_mo_enter6 = 40045,
        /**
         * 全民屠魔进入
         */
        quan_min_tu_mo_enter7 = 40046,
        /**
         * 全民屠魔进入
         */
        quan_min_tu_mo_enter8 = 40047,
        /**
         * 全民屠魔进入
         */
        quan_min_tu_mo_enter9 = 40048,
        /**
         * 全民屠魔进入
         */
        quan_min_tu_mo_enter10 = 40049,
        /**
         * 卧龙山庄返回比奇
         */
        wo_long_shan_zhuang_go_bi_qi = 40050,
        /**
         * 卧龙秘境npc按钮1
         */
        wo_long_mi_jing_npc1 = 40051,
        /**
         * 卧龙山庄烤火内功石1
         */
        wo_long_shan_zhuang_stone1 = 40052,
        /**
         * 卧龙山庄烤火内功石2
         */
        wo_long_shan_zhuang_stone2 = 40053,
        /**
         * 绑元治疗
         */
        health_bind_money = 40054,
        /**
         * 元宝治疗
         */
        health_money = 40055,
        /**
         * 卧龙秘境npc按钮2
         */
        wo_long_mi_jing_npc2 = 40056,
        /**
         * 斗兽场进入
         */
        dou_shou_chang_enter = 40057,
        /**
         * 迷惘密室进入
         */
        mi_wang_mi_shi_enter = 40058,
        /**
         * 强化是副本进入
         */
        qiang_hua_shi_enter = 40060,
        /**
         * 裂变之灾进入
         */
        lie_bian_zhi_zai_enter = 40061,
        /**
         * 囚魔之路进入
         */
        prisoner_road_enter = 40062,
        /**
         * 万魔殿
         */
        wan_mo_dian = 40063,
        /**
         * 生化战场
         */
        biochemical_battle = 40064,
        /**
         * 猎魔幻狱
         */
        lie_mo_huan_yu = 40065,
        /**
         * 神域探宝
         */
        shen_yu_tan_bao = 40066,
        /**
         * 守卫比奇
         */
        shou_wei_bi_qi = 40067,
        /**
         * 神龙秘境
         */
        fairy_dragon_worship = 40068,
        /**
         * 四象祭台进入
         */
        si_xiang_ji_tai_enter = 40069,
        /**
         * 屠魔猎场进入
         */
        tumo_hunting_enter = 40101,
        /**
         * 血战沙城进入
         */
        Xue_Zhan_Sha_cheng_Enter = 40200,
        /**
         * 跨服争霸进入(GVG1)
         */
        kua_fu_zheng_ba_enter = 40201,
        /**
         * 圣龙战场进入(GVG2)
         */
        sheng_long_zhan_chang_enter = 41001,
        /**
         * 帮会篝火令牌兑换
         */
        bang_hui_gou_huo_award = 41002,
        /**
         * 经验副本进入
         */
        jing_yan_enter = 41003,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumNoticeType {
        /**
         * 无
         */
        none = 0,
        /**
         * 一级公告
         */
        one_level_notice = 1,
        /**
         * 二级公告
         */
        two_level_notice = 2,
        /**
         * 三级公告
         */
        three_level_notice = 3,
        /**
         * alert提示
         */
        alert_notice = 4,
        /**
         * 鼠标提示
         */
        mouse_notice = 5,
        /**
         * 固定位置提示
         */
        fixedPos_notice = 6,
        /**
         * 重要提示
         */
        important_notice = 7,
        /**
         * 强化到12星后公告
         */
        forge_notice = 8,
        /**
         * 创建帮会
         */
        create_guild_1 = 9,
        /**
         * 击杀Boss公告
         */
        kill_boss = 10,
        /**
         * 成功加入帮会{帮会名}
         */
        join_guild_my_notice = 11,
        /**
         * 玩家加入帮会后，帮会返回公告
         */
        join_guild_you_notice = 12,
        /**
         * 任命职位后帮会返回公告：{0}被{1}任命为{2}
         */
        appoint_guild_notice = 13,
        /**
         * 罢免后帮会频道返回公告
         */
        recall_guild_notice = 14,
        /**
         * 禅让帮主后公告
         */
        wang_guild_notice = 15,
        /**
         * 脱离帮会
         */
        leave_guild_notice = 16,
        /**
         * 帮主点击解散帮会后
         */
        disband_guild_notice = 17,
        /**
         * 帮主成功修改帮会公告
         */
        modify_guild_notice = 18,
        /**
         * 成功发起帮会战
         */
        war_guild_notice = 19,
        /**
         * 帮会战结束
         */
        warend_guild_notice = 20,
        /**
         * 帮会等级提升
         */
        upgrade_guild_notice = 21,
        /**
         * 玩家死亡提示：在{地图名}发生恶性斗殴事件，玩家{击杀者}把玩家{被击杀者}砍成重伤！！！
         */
        kill_player_notice = 22,
        /**
         * 玩家张三捐赠装备屠龙刀获得100点贡献值
         */
        guild_donation_item = 23,
        /**
         * 玩家张三消耗100点贡献值兑换装备屠龙刀
         */
        guild_exchange_item = 24,
        /**
         * 玩家张三捐赠10000金币获得10点贡献值
         */
        guild_donation_money = 25,
        /**
         * {0}帮会的土豪{1}有钱任性！随手一甩就是{2}元宝红包！
         */
        guild_redPackage_send = 26,
        /**
         * 土豪{0}有钱任性！随手一甩就是{1}元宝红包！
         */
        redPackage_send = 27,
        /**
         * 贡献值-1500，当前贡献值15000
         */
        guild_reduce_value = 28,
        /**
         * 贡献值+1500，当前贡献值15000
         */
        guild_add_value = 29,
        /**
         * 祝福成功，幸运+1
         */
        lucky_add = 30,
        /**
         * 祝福失败，幸运-1
         */
        lucky_reduce = 31,
        /**
         * 您的幸运值未改变
         */
        lucky_unchange = 32,
        /**
         * 没有穿戴武器，不能使用
         */
        no_equip = 33,
        /**
         * 魂珠碎片+1，当前数量250，还可使用：30次
         */
        itemUse_notice_1 = 34,
        /**
         * 今日使用次数已满
         */
        itemUse_notice_2 = 35,
        /**
         * 您拥有的金币已达上限，无法使用
         */
        attr_full = 36,
        /**
         * {0}成为VIP，享受VIP特权礼包！
         */
        vip_notice_1 = 37,
        /**
         * 领取vip大礼包
         */
        vip_notice_2 = 38,
        /**
         * 宝藏公告
         */
        mine_notice = 39,
        /**
         * {某人}成功领取开服活动{等级竞技}{70级}礼包，获得海量奖励！
         */
        open_server_athletics_level = 40,
        /**
         * {某人}成功领取开服活动{神装礼包}，获得全套极品装备！
         */
        open_server_special = 41,
        /**
         * {某人}将翅膀提升至五阶，实力大增！
         */
        wing_level = 42,
        /**
         * {0}{1}上线了!【称号】+【名字】
         */
        special_player_online_2 = 44,
        /**
         * BOSS刷新公告
         */
        boss_relive = 45,
        /**
         * 帮会财富+1500，当前贡献值1500
         */
        guild_money_value = 46,
        /**
         * {0}成功领取价值8888元宝的【首冲大礼】，实力飞速提升！
         */
        recharge_first_value = 47,
        /**
         * {0}成功领取价值<font color="#ff3131">{1}</font>元宝【每日充值大礼包】
         */
        get_daily_recharge_award_2 = 48,
        /**
         * {0}成功领取价值8888元宝的【首冲大礼】，实力飞速提升！{我也要领}
         */
        recharge_first_get_value = 49,
        /**
         * {0}成功领取价值<font color="#ff3131">{1}</font>元宝【每日充值大礼包】{2}
         */
        get_daily_recharge_award_3 = 50,
        /**
         * xxx（玩家名称）成功领取全民BOSS中的xxx（经典、暗之、禁地、终极）BOSS礼包
         */
        popular_boss_value = 51,
        /**
         * xxx（玩家名称）成功领取全民BOSS中的xxx（经典、暗之、禁地、终极）BOSS礼包{我也领取}
         */
        popular_boss_get_value = 52,
        /**
         * {0}通过经验炼制获得了{1}经验值，等级飞速提升！{我也炼制}
         */
        refine_exp_value = 53,
        /**
         * {0}成功领取开服活动{特惠礼包特定表里有描述}{我也领取}
         */
        open_server_get_special = 54,
        /**
         * {0}成功领取开服活动翅膀竞技{1}
         */
        open_server_athletics_wing = 55,
        /**
         * {0}成功领取开服活动龙心竞技{1}
         */
        open_server_athletics_dragon = 56,
        /**
         * {0}成功领取开服活动狼牙竞技{1}
         */
        open_server_athletics_wolf = 57,
        /**
         * {0}成功领取开服活动等级竞技{1}{2}
         */
        open_server_athletics_level_get = 58,
        /**
         * {0}成功领取开服活动翅膀竞技{1}{2}
         */
        open_server_athletics_wing_get = 59,
        /**
         * {0}成功领取开服活动龙心竞技{1}{2}
         */
        open_server_athletics_dragon_get = 60,
        /**
         * {0}成功领取开服活动狼牙竞技{1}{2}
         */
        open_server_athletics_wolf_get = 61,
        /**
         * 玩家{0}成功激活龙魂护卫，击杀BOSS效率倍增！{1}
         */
        mars_activate_101 = 62,
        /**
         * 玩家{0}成功激活鹰卫，升级效率翻倍{1}
         */
        mars_activate_103 = 63,
        /**
         * 玩家{0}使用{1}在比奇城召唤出{2},请大家前往击杀
         */
        summon_boss = 64,
        /**
         * 恭喜沙城城主{0}成功领取沙城争霸奖励！
         */
        sha_cheng_zheng_ba_award = 65,
        /**
         * 对方等级低于XX级，无法被攻击
         */
        role_other_limit_pk = 66,
        /**
         * 当前地图无法召唤护卫
         */
        map_call_mars = 67,
        /**
         * 等级低于50级，无法攻击敌人
         */
        role_oneself_limit_pk = 68,
        /**
         * 怪物{0}出现在{1}，前往击杀可掉落星珠
         */
        star_elite_relive = 70,
        /**
         * 护体神盾消失
         */
        htsd_vanish = 71,
        /**
         * 玩家{0}被踢出帮会
         */
        guild_kikc_member = 72,
        /**
         * 冲撞力不足
         */
        chongzhuang_wuli = 73,
        /**
         * 玩家{0}成功激活{1}，成就霸业，指日可待！我也开通
         */
        privilege_get = 74,
        /**
         * 恭喜玩家{0},在传奇大礼中，排名荣升至第{1}名
         */
        legendary_gift_ranking = 75,
        /**
         * 合成公告
         */
        compound_inlay = 76,
        /**
         * 玩家{0}成功激活虎卫，升级效率翻倍{1}
         */
        mars_activate_102 = 77,
        /**
         * 当前地图新手保护等级为{0}
         */
        pk_protect_level = 78,
        /**
         * 当前地图{0}级才可进行PK
         */
        pk_limit_level = 79,
        /**
         * 特戒复活公告
         */
        tejie_fuhuo = 80,
        /**
         * //恭喜玩家{0},在传奇大礼中，排名荣升至第{1}名
         */
        blood_gift_ranking = 81,
        /**
         * 运气好天也挡不住！恭喜玩家{0}在本次{1}中，获得幸运大奖！
         */
        lotto_notice = 82,
        /**
         * 恭喜玩家{0},在盛宴排行中，排名荣升至第{1}名
         */
        expense_gift_ranking = 83,
        /**
         * {0}行侠仗义,神功大成获得{1}称号！
         */
        shenwu_notice = 87,
        /**
         * 、成功向XXX帮会发起帮会战，帮会战持续时间3小时，期间击杀敌对帮会玩家不会产生PK值
         */
        guild_rival_role_3 = 88,
        /**
         * XXX帮会向本帮发起帮会战，帮会战持续时间3小时，期间击杀敌对帮会玩家不会产生PK值
         */
        guild_rival_other_3 = 89,
        /**
         * 与XXX帮会的帮会战已经结束；
         */
        guild_rival_over = 90,
        /**
         * 帮会玩家{0}在运镖时路遇劫匪，请求援助！{1}
         */
        yabiao_guild_help = 91,
        /**
         * 恭喜玩家{0}成功将神翼升至{1}，实力飞升先人一步！
         */
        wing_upgrade = 92,
        /**
         * 玩家{0}开始押运黄金镖车，祝一路顺风！
         */
        yabiao_gold = 93,
        /**
         * 今日聚灵珠剩余使用:{0}次
         */
        itemUse_energy = 94,
        /**
         * 城主开启“大赦天下”2级公告
         */
        master_open_dstx_two = 95,
        /**
         * 城主开启“大赦天下”3级公告
         */
        master_open_dstx_three = 96,
        /**
         * 押镖公告
         */
        yabiao_notice2 = 97,
        /**
         * 帮会押镖公告1
         */
        guild_yabiao_notice1 = 98,
        /**
         * 帮会押镖公告2
         */
        guild_yabiao_notice2 = 99,
        /**
         * 帮会押镖公告3
         */
        guild_yabiao_notice3 = 100,
        /**
         * 帮会押镖公告4
         */
        guild_yabiao_notice4 = 101,
        /**
         * 技能熟练度增加
         */
        skill_proficiency = 102,
        /**
         * 玩家{0}成功领取神装礼包，获得全套华丽装备！
         */
        te_hui_gift_notice1_1 = 103,
        /**
         * 玩家{0}成功领取神装礼包，获得全套华丽装备！{1}
         */
        te_hui_gift_notice1_3 = 104,
        /**
         * 玩家{0}成功领取神翼礼包，翅膀升阶轻松愉快！
         */
        te_hui_gift_notice2_1 = 105,
        /**
         * 玩家{0}成功领取神翼礼包，翅膀升阶轻松愉快！{1}
         */
        te_hui_gift_notice2_3 = 106,
        /**
         * 玩家{0}成功领取至尊礼包，装备精炼易如反掌！
         */
        te_hui_gift_notice3_1 = 107,
        /**
         * 玩家{0}成功领取至尊礼包，装备精炼易如反掌！{1}
         */
        te_hui_gift_notice3_3 = 108,
        /**
         * 玩家{0}成功领取主宰礼包，极品转生武器到手，从此横行玛法！
         */
        te_hui_gift_notice4_1 = 109,
        /**
         * 玩家{0}成功领取主宰礼包，极品转生武器到手，从此横行玛法！{1}
         */
        te_hui_gift_notice4_3 = 110,
        /**
         * 帮会boss开启
         */
        guild_boss_open = 111,
        /**
         * 帮会boss被击杀
         */
        guild_boss_dead = 112,
        /**
         * 帮会boss活动结束
         */
        guild_boss_over = 113,
        /**
         * VIP玩家{0}进入<font color="#33a5ff">BOSS之家一层</font>,通过热砂荒漠NPC BOSS之家即可进入{1}
         */
        boss_home = 114,
        /**
         * 在{0}发生恶性斗殴事件,玩家{1}痛打了玩家{2}，场面触目惊心！
         */
        role_kill_normal = 130,
        /**
         * 在{0}玩家{1}击败了恶贯满盈的玩家{2}，成功为民除害！
         */
        role_kill_red = 131,
        /**
         * 玩家{0}在{1}被{2}击败了,维护玛法大陆和平人人有责
         */
        jin_jun_kill_normal = 132,
        /**
         * 恶贯满盈的玩家{0}在{1}被{2}击败了,快去看看掉了啥装备!
         */
        jin_jun_kill_red = 133,
        /**
         * 强化成功！本次强化增加{0}祝福值
         */
        equip_strengthen_get_wish = 134,
        /**
         * {0}将全身装备强化+{1}，获得大量强化星级属性加成！【2级】
         */
        equip_strengthen_2 = 138,
        /**
         * {0}成功通过天关第{1}重，获得高级宝石奖励，自身属性大幅提升！
         */
        tian_guan_max_notice2 = 139,
        /**
         * {0}成功领取{1}级等级竞技奖励，获得高级装备及聚灵珠奖励！
         */
        athletics_level_2 = 141,
        /**
         * {0}成功领取{1}阶翅膀竞技奖励，获得海量羽毛奖励！
         */
        athletics_wing_2 = 142,
        /**
         * {0}成功领取{1}星龙珠竞技奖励，获得大量龙珠碎片奖励！
         */
        athletics_dragon_ball_2 = 143,
        /**
         * {0}成功领取{1}星如意竞技奖励，获得大量如意碎片奖励！
         */
        athletics_ruyi_2 = 144,
        /**
         * {0}使用聚灵珠（大），获得海量经验值奖励！聚灵珠（大）可从积分商城兑换获得
         */
        energy_da_2 = 145,
        /**
         * {0}使用聚灵珠（超），获得海量经验值奖励！聚灵珠（极）可通过物品合成获得
         */
        energy_chao_2 = 146,
        /**
         * {0}使用聚灵珠（极），获得海量经验值奖励！聚灵珠（极）可通过物品合成获得
         */
        energy_ji_2 = 147,
        /**
         * 在{0}发生恶性斗殴事件,玩家{1}痛打了玩家{2}，场面触目惊心！
         */
        role_kill_normal2 = 148,
        /**
         * {0}购买带刀侍卫，虐杀BOSS、速刷任务，实力飞速提升！
         */
        mars_2 = 149,
        /**
         * {0}完成限时任务第1阶段所有任务，领取华丽转生装备，实力大幅提升！
         */
        time_limit_task_1_2 = 150,
        /**
         * {0}完成限时任务第2阶段所有任务，领取强力翅膀技能书，实力大幅提升！
         */
        time_limit_task_2_2 = 151,
        /**
         * {0}完成限时任务第3阶段所有任务，领取高级稀有宝石奖励，实力大幅提升！
         */
        time_limit_task_3_2 = 152,
        /**
         * {0}完成今日所有活跃度，获取大量活跃值及稀有道具奖励，活跃值可用于提升神兵等级【2级】
         */
        val_award_2 = 153,
        /**
         * {0}将全身装备强化+{1}，获得大量强化星级属性加成！{2}【3级】
         */
        equip_strengthen_3 = 154,
        /**
         * {0}成功通过天关第{1}重，获得高级宝石奖励，自身属性大幅提升！{2}
         */
        tian_guan_max_notice = 155,
        /**
         * {0}成功领取{1}级等级竞技奖励，获得高级装备及聚灵珠奖励！{2}
         */
        athletics_level_3 = 157,
        /**
         * {0}成功领取{1}阶翅膀竞技奖励，获得海量羽毛奖励！{2}
         */
        athletics_wing_3 = 158,
        /**
         * {0}成功领取{1}星龙珠竞技奖励，获得大量龙珠碎片奖励！{2}
         */
        athletics_dragon_ball_3 = 159,
        /**
         * {0}成功领取{1}星如意竞技奖励，获得大量如意碎片奖励！{2}
         */
        athletics_ruyi_3 = 160,
        /**
         * {0}使用聚灵珠（大），获得海量经验值奖励！聚灵珠（大）可从积分商城兑换获得{1}
         */
        energy_da_3 = 161,
        /**
         * {0}使用聚灵珠（超），获得海量经验值奖励！聚灵珠（极）可通过物品合成获得{1}
         */
        energy_chao_3 = 162,
        /**
         * {0}使用聚灵珠（极），获得海量经验值奖励！聚灵珠（极）可通过物品合成获得{1}
         */
        energy_ji_3 = 163,
        /**
         * {0}购买带刀侍卫，虐杀BOSS、速刷任务，实力飞速提升！{1}
         */
        mars_3 = 164,
        /**
         * {0}完成限时任务第1阶段所有任务，领取华丽转生装备，实力大幅提升！{1}
         */
        time_limit_task_1_3 = 165,
        /**
         * {0}完成限时任务第2阶段所有任务，领取强力翅膀技能书，实力大幅提升！{1}
         */
        time_limit_task_2_3 = 166,
        /**
         * {0}完成限时任务第3阶段所有任务，领取高级稀有宝石奖励，实力大幅提升！{1}
         */
        time_limit_task_3_3 = 167,
        /**
         * {0}完成今日所有活跃度，获取大量活跃值及稀有道具奖励，活跃值可用于提升神兵等级{1}【3级】
         */
        val_award_3 = 168,
        /**
         * 在{0}玩家{1}击败了恶贯满盈的玩家{2}，成功为民除害！
         */
        role_kill_red2 = 169,
        /**
         * {0}成功领取全民BOSS中的{1}礼包,获得高级装备奖励!
         */
        popular_boss_2 = 171,
        /**
         * 恭喜{0}抽到{1},人品突破天际！
         */
        Brand_2 = 172,
        /**
         * 恭喜{0}抽到{1},人品突破天际！
         */
        Brand_3 = 173,
        /**
         * 合服活动神秘商店已刷新!
         */
        merge_secret_store_3 = 176,
        /**
         * 合服活动神秘商店已刷新!
         */
        merge_secret_store_1 = 177,
        /**
         * {0}行过拜师礼，成为了{1}的徒弟！
         */
        st_build_relation_2 = 178,
        /**
         * {0}行过拜师礼，成为了{1}的徒弟！
         */
        st_build_relation_3 = 179,
        /**
         * 本次飞升增加{0}点祝福值
         */
        smelter_brand = 180,
        /**
         * {0}在全民庆典充值排行中夺得第{1}名
         */
        recharge_rank_one_1 = 181,
        /**
         * {0}在全民庆典充值排行中夺得第{1}名
         */
        recharge_rank_one_3 = 182,
        /**
         *
         */
        yoyo_6_3 = 183,
        /**
         *
         */
        yoyo_5_3 = 184,
        /**
         *
         */
        yoyo_6_2 = 185,
        /**
         *
         */
        yoyo_5_2 = 186,
        /**
         * 玩家{0}开启帮主弹劾，进入弹劾倒计时!
         */
        guild_impeach_down = 187,
        /**
         * 玩家{0}弹劾帮主成功，成为帮会新一任帮主!
         */
        guild_impeach_succeed = 188,
        /**
         * 由于有高职位玩家上线，{0}的帮主弹劾失败!
         */
        guild_impeach_failure = 189,
        /**
         * {0}提升至转生<font color="#ff3131">{1}</font>级,天赋成长,属性更强,实力大增!
         */
        lv_r_upgrade_2 = 190,
        /**
         * {0}激活<font color="#ff3131">{1}</font>,多重特权在手,成长快人一步!{2}
         */
        lv_r_upgrade_3 = 191,
        /**
         * {0}激活<font color="#ff3131">{1}</font>,多重特权在手,成长快人一步!
         */
        privilege_card_single_2 = 192,
        /**
         * {0}激活<font color="#ff3131">{1}</font>,多重特权在手,成长快人一步!{2}
         */
        privilege_card_single_3 = 193,
        /**
         * {0}激活<font color="#ff3131">所有特权卡</font>,获得全套特权奖励,成长一飞冲天!
         */
        privilege_card_all_2 = 194,
        /**
         * {0}激活<font color="#ff3131">所有特权卡</font>,获得全套特权奖励,成长一飞冲天!{1}
         */
        privilege_card_all_3 = 195,
        /**
         * 在<font color="#33a5ff">{0}</font>发生激烈战斗，{1}将{2}打成重伤,掉落{3}!
         */
        role_drop_items_2 = 196,
        /**
         * {0}领取微端登录礼包,获得丰厚奖励!
         */
        get_micro_award_2 = 197,
        /**
         * {0}领取微端登录礼包,获得丰厚奖励!
         */
        get_micro_award_3 = 198,
        /**
         * {0}{1}上线了!【称号】+【名字】
         */
        special_player_online_3 = 199,
        /**
         * 在<font color="#33a5ff">{0}</font>发生激烈战斗，{1}将{2}打成重伤,掉落{3}!
         */
        role_drop_items_3 = 200,
        /**
         * 魔化火龙王睡醒了,变更了龙卫迷宫密码!
         */
        long_wei_mi_gong2 = 201,
        /**
         * 魔化火龙王睡醒了,变更了龙卫迷宫密码!
         */
        long_wei_mi_gong3 = 202,
        /**
         * 帮会守护已开启，守卫雕像可获得绑元、成就令牌等奖励。{0}
         */
        guild_shou_hu_start = 203,
        /**
         * 本帮会帮会守护活动已结束，奖励已通过邮件下发
         */
        guild_shou_hu_end = 204,
        /**
         * 帮会雕像已破碎，由于该帮会守护波数为0，故所有成员未获得奖励，请再接再厉！
         */
        guild_shou_hu_fail = 205,
        /**
         * 帮会BOSS已开启，击杀BOSS可获得海量奖励 {0}
         */
        guild_boss_start = 206,
        /**
         * 本帮会帮会BOSS活动已结束，请参与过活动给玩家前往帮会BOSS界面领取奖励 {0}
         */
        guild_boss_end = 207,
        /**
         * 第X只BOSS已刷新，请速去击杀 {0}
         */
        guild_boss_shau_xin = 208,
        /**
         * 二级公告  恭喜{0}区玩家：{1},成功兑换通天塔{2}宝藏获得27倍奖励
         */
        tong_tian_tower_convert_2_27 = 210,
        /**
         * 三级公告  恭喜{0}区玩家：{1},成功兑换通天塔{2}宝藏获得27倍奖励
         */
        tong_tian_tower_convert_3_27 = 211,
        /**
         * 二级公告  恭喜{0}区玩家：{1},成功兑换通天塔{2}宝藏获得128倍奖励
         */
        tong_tian_tower_convert_2_128 = 212,
        /**
         * 三级公告  恭喜{0}区玩家：{1},成功兑换通天塔{2}宝藏获得128倍奖励
         */
        tong_tian_tower_convert_3_128 = 213,
        /**
         * 二级公告 恭喜{0}成功使用通天塔{1},获得{2}元宝
         */
        tong_tian_tower_box_notice_2 = 215,
        /**
         * 三级公告 恭喜{0}成功使用通天塔{1},获得{2}元宝
         */
        tong_tian_tower_box_notice_3 = 216,
        /**
         * 一级公告 恭喜{0}成功使用通天塔{1},获得{2}元宝
         */
        tong_tian_tower_box_notice_1 = 217,
        /**
         * 一级公告 恭喜【{0}区】玩家：<font color="#ff5f07">{1}</font>,成功兑换通天塔<font color="#ff3131">{2}</font>获得{3}元宝
         */
        tong_tian_tower_convert_1_27 = 218,
        /**
         * 一级公告 恭喜【{0}区】玩家：<font color="#ff5f07">{1}</font>,成功兑换通天塔<font color="#ff3131">{2}</font>获得{3}元宝
         */
        tong_tian_tower_convert_1_128 = 219,
        /**
         * 转盘抽奖公告1
         */
        zhuanpan_get_award1 = 220,
        /**
         * 转盘抽奖公告2
         */
        zhuanpan_get_award2 = 221,
        /**
         * 1级公告  恭喜玩家{0}激活{1}！尊享{2}项特权
         */
        privilege_card_activate_1 = 225,
        /**
         * 3级公告  恭喜玩家{0}激活{1}！尊享{2}项特权
         */
        privilege_card_activate_3 = 226,
        /**
         * {1}开启{2}，获得了{2}宝物！
         */
        open_gift_bag = 227,
        /**
         * 创建帮会
         */
        create_guild_3 = 228,
        /**
         * 您的帮会已对{0}发起了宣战，战争一触即发
         */
        guild_rival_role_1 = 229,
        /**
         * {0}已对您的帮会发起了宣战，战争一触即发！
         */
        guild_rival_other_1 = 230,
        /**
         * 恭喜{0}在全体成员的努力下成功升为{1}级帮会
         */
        guild_level_up_1 = 231,
        /**
         * 恭喜{0}在全体成员的努力下成功升为{1}级帮会
         */
        guild_level_up_3 = 232,
        /**
         * 帮会经验将于今日24:00维护时扣除至低值，请尽快补充帮会资金！
         */
        guild_treasure_not_enough_warn = 233,
        /**
         * 建设度将于今日24:00维护时扣除至低值，请尽快补充帮会资金！
         */
        guild_build_not_enough_warn = 234,
        /**
         * 由于维护费不足，帮会建设将于5分钟后自动终止，请尽快补充帮会资金！
         */
        guild_build_stop_warn = 235,
        /**
         * 由于维护费不足，帮会将于今日24:00降低1级，请尽快补充帮会资金！
         */
        guild_level_down_warn = 236,
        /**
         * 由于维护费不足，帮会将于今日24:00正式解散，请尽快补充帮会资金！
         */
        guild_dismiss_warn = 237,
        /**
         * {0}成为VIP，享受VIP特权礼包！_我也要成为VIP
         */
        vip_notice_3 = 238,
        /**
         * 恭喜[{0}]完成了所有帮会目标，获得丰厚收益！
         */
        guild_objective_1 = 239,
        /**
         * 恭喜[{0}]完成了所有帮会目标，获得丰厚收益！
         */
        guild_objective_3 = 240,
        /**
         * {0}将翅膀提升至<font color="#c53eaa">{1}</font>({2}阶),实力大增!
         */
        wing_lvup = 241,
        /**
         * {0}将{1}强化至<font color="#ff3131">{2}</font>星
         */
        equip_intensify_2 = 242,
        /**
         * {0}成功挑战通天塔{1}层，获得丰厚奖励，大家恭喜他！
         */
        tong_tian_tower_1 = 244,
        /**
         * {0}成功挑战通天塔{1}层，获得丰厚奖励，大家恭喜他！我也要挑战
         */
        tong_tian_tower_3 = 245,
        /**
         * 恭喜{0}功激活成就称号{1}!{3}
         */
        achievement_3 = 246,
        /**
         * 月光光心慌慌勇士们磨刀慌,[color=#00fff0]{0}[/color]从郑镖头处领取了黄金镖车!
         */
        ya_biao_gold_1 = 250,
        /**
         * 月光光心慌慌勇士们磨刀慌,[color=#00fff0]{0}[/color]从郑镖头处领取了钻石镖车!
         */
        ya_biao_masonry_1 = 251,
        /**
         * 月光光心慌慌勇士们磨刀慌,[color=#00fff0]{0}[/color]从郑镖头处领取了黄金镖车!{1}
         */
        ya_biao_gold_2 = 252,
        /**
         * 月光光心慌慌勇士们磨刀慌,[color=#00fff0]{0}[/color]从郑镖头处领取了钻石镖车!{1}
         */
        ya_biao_masonry_2 = 253,
        /**
         * 玩家{0}成功将{1}升至{2}级{3}
         */
        skill_up_lv_3 = 254,
        /**
         * 玩家{0}成功将召唤神兽升至7级{3}
         */
        skill_up_lv_shenshou_3 = 255,
        /**
         * 金榜题名准备公告
         */
        answer_ready = 260,
        /**
         * 金榜题名开始公告
         */
        answer_start = 261,
        /**
         * 步步为营准备公告
         */
        answer_ready_bbwy = 262,
        /**
         * 步步为营开始公告
         */
        answer_start_bbwy = 263,
        /**
         * [color=#fcff00]神威狱[/color]活动将于[color=#00ff28]5[/color]分钟后开启，敬请期待！
         */
        active_shenweiyu_yugao = 264,
        /**
         * [color=#fcff00]神威狱[/color]活动已经开启，欢迎大家踊跃参加！
         */
        active_shenweiyu_kaishi = 265,
        /**
         * [color=#4bc0e5]精英阁[/color]活动将于[color=#f10610]5[/color]分钟后开启，敬请期待!
         */
        active_jingyingge_yugao = 268,
        /**
         * [color=#4bc0e5]精英阁[/color]活动已经开启，欢迎大家踊跃参加!
         */
        active_jingyingge_enter = 269,
        /**
         * [color=#fcff00]迷惑殿堂[/color]活动将于[color=#00ff28]5[/color]分钟后开启，敬请期待！
         */
        active_mihuodiantang_yugao = 270,
        /**
         * [color=#fcff00]迷惑殿堂[/color]活动已经开启，欢迎大家踊跃参加！
         */
        active_mihundiantang_kaishi = 271,
        /**
         * [color=#fcff00]生存战场[/color]活动将于[color=#00ff28]5[/color]分钟后开启，敬请期待！
         */
        active_shengcunzhanchang_yugao = 284,
        /**
         * [color=#fcff00]生存战场[/color]活动已经开启，欢迎大家踊跃参加！
         */
        active_shengcunzhanchang_kaishi = 285,
        /**
         * [color=#fcff00]怪物攻城[/color]活动将于[color=#00ff28]5[/color]分钟后开启，敬请期待！
         */
        active_guaiwugongcheng_yugao = 286,
        /**
         * [color=#fcff00]怪物攻城[/color]活动已经开启，欢迎大家踊跃参加！
         */
        active_guaiwugongcheng_kaishi = 287,
        /**
         * [color=#4bc0e5]帮会押镖[/color]活动将于[color=#f10610]5[/color]分钟后开启，敬请期待!
         */
        guild_yabiao_yugao = 290,
        /**
         * [color=#4bc0e5]帮会押镖[/color]活动已经开启，欢迎大家踊跃参加!
         */
        guild_yabiao_kaishi = 291,
        /**
         * [color=#fcff00]虚幻洞窟[/color]活动将于[color=#00ff28]5[/color]分钟后开启，敬请期待！
         */
        active_xuhuandongku_yugao = 296,
        /**
         * [color=#fcff00]虚幻洞窟[/color]活动已经开启，欢迎大家踊跃参加！
         */
        active_xuhuandongku_kaishi = 297,
        /**
         * [color=#00fff0]{0}[/color]在[color=#00ff28]{1}[/color]击杀[color=#ff0000]{2}[/color]掉落{3}
         */
        boss_kill_new = 298,
        /**
         * [color=#ff0000]{0}[/color]在[color=#00ff28]{1}[/color]复活了
         */
        boss_relive_new = 299,
        /**
         * [color=#00fff0]{0}[/color]进入[color=#00ff28]{1}[/color],[color=#00ff28]{2}[/color]可从比奇城BOSS之家NPC处进入,{3}
         */
        boss_home_enter = 300,
        /**
         * [color=#00fff0]{0}[/color]进入[color=#00ff28]{1}[/color],[color=#00ff28]{2}[/color]可从比奇城玛雅神殿NPC处进入,{3}
         */
        ma_ya_shen_dian_enter = 301,
        /**
         * [color=#00fff0]{0}[/color]进入[color=#00ff28]{1}[/color],[color=#00ff28]{2}[/color]可从比奇城转生神殿NPC处进入,{3}
         */
        zhuan_sheng_shen_dian_enter = 302,
        /**
         * [color=#00fff0]{0}[/color]进入[color=#00ff28]{1}[/color],[color=#00ff28]{2}[/color]可从比奇城未知暗殿NPC处进入,{3}
         */
        wei_zhi_an_dian_enter = 303,
        /**
         * 本帮已加入沙城战[color=#fcff00]{0}[/color]，请大家时刻关注攻沙信息！
         */
        sha_cheng_join_camp1 = 304,
        /**
         * 本帮已加入沙城战[color=#fcff00]{0}[/color]，请大家时刻关注攻沙信息！
         */
        sha_cheng_join_camp2 = 305,
        /**
         * 使用[{0}], 获得{1}点帮会贡献
         */
        itemUse_guildcontribute = 306,
        /**
         * {0}成功加入乱世联盟!
         */
        sha_cheng_join_notice_camp2 = 307,
        /**
         * {0}成功加入布拉格联盟!
         */
        sha_cheng_join_notice_camp1 = 308,
        /**
         * 本帮会已经获取{0}归属权，快来保卫帮会矿车！
         */
        sui_yin_kuang_mai_get = 309,
        /**
         * 本帮矿车正在受到外敌攻击，请迅速前往支援！
         */
        sui_yin_kuang_mai_attack = 310,
        /**
         * 本帮会兄弟姐妹万众一心，成功的交付了矿车！
         */
        sui_yin_kuang_mai_arrive = 311,
        /**
         * {0}成功为本帮创建帮会七号：{1}！
         */
        guild_flag_edit = 312,
        /**
         * 山贼入侵三级聊天栏公告
         */
        shan_zei_ru_qin_3 = 313,
        /**
         * 本次答题结束
         */
        chat_answer_stop = 314,
        /**
         * 使用{0}获得{1}{2}值  使用转生丹获得多少转生值
         */
        itemUse_notice_3 = 315,
        /**
         * {0}对您的篝火进行了帮助
         */
        guild_fire_help = 316,
        /**
         * {0}有钱任性!随手一甩就向全服玩家发送[color=#f10610]{1}元宝[/color]的全民红包
         */
        donate_national_red_type1 = 317,
        /**
         * {0}有钱任性!随手一甩就向全服玩家发送[color=#f10610]{1}元宝[/color]的全民红包[color=#00ff28]{2}[/color]
         */
        donate_national_red_type2 = 318,
        /**
         * {0}手气极佳!抢到了[color=#f10610]{1}元宝[/color]的全民红包[color=#00ff28]{2}[/color]
         */
        rob_national_red = 319,
        /**
         * 成功购买{0}，消耗{1}点帮会贡献！
         */
        guild_consume = 320,
        /**
         * 成功升级{0}，消耗{1}点帮会贡献！
         */
        guild_skill_consume = 321,
        /**
         * 您使用全民红包,向奖池发放{0}元宝
         */
        donate_national_item = 323,
        /**
         * 已参加过答题不能重复咱家
         */
        answer_not_enter = 324,
        /**
         * 排名未满足条件不能咱家
         */
        answer_not_rank = 325,
        /**
         * 聊天答题第一奖励公告
         */
        chat_answer_award = 326,
        /**
         * 恭喜{0}豪气风发成为“七天狂欢”的第{1}名
         */
        seven_day_recharge_rank = 327,
        /**
         * {0}将[color=#f10610]{1}[/color]提升至[color=#f10610]{2}[/color]，实力得到显著提升！
         */
        smelter_upgrade_type1 = 328,
        /**
         * {0}将[color=#f10610]{1}[/color]提升至[color=#f10610]{2}[/color]，实力得到显著提升！[color=#00ff28]{3}[/color]
         */
        semlter_upgrade_type2 = 329,
        /**
         * {0}在[color=#4bc0e5]虚幻洞窟[/color]活动中开启了[color=#f10610]神秘宝箱[/color],获得了丰厚奖励！
         */
        xuhuandongku_gold = 330,
        /**
         * {0}成功领取统帅竞技奖励,获得大量声望卷!
         */
        athletics_post_2 = 331,
        /**
         * {0}成功领取统帅竞技奖励,获得大量声望卷!,我也要领取
         */
        athletics_post_3 = 332,
        /**
         * 恭喜{0}激活{1}({2}阶)，打怪效率倍增！
         */
        mars_rebate = 333,
        /**
         * 答题步步为营发称号奖励
         */
        answer_bubuweiying_award = 334,
        /**
         * {0}将[color=#f10610]神石[/color]提升至[color=#f10610]{1}[/color]，实力得到显著提升！[color=#00ff28]{2}[/color]
         */
        semlter_shenshi_upgrade = 335,
        /**
         * {0}将[color=#f10610]龙魂[/color]提升至[color=#f10610]{1}[/color]，实力得到显著提升！[color=#00ff28]{2}[/color]
         */
        smlter_longhun_upgrade = 336,
        /**
         * {0}将[color=#f10610]如意[/color]提升至[color=#f10610]{1}[/color]，实力得到显著提升！[color=#00ff28]{2}[/color]
         */
        smlter_ruyi_upgrade = 337,
        /**
         * [color=#f10610]苍穹炎龙[/color]出现在[color=#4bc0e5]比奇城[/color]，击杀后可掉落大量羽毛！
         */
        cang_qiong_yan_long = 338,
        /**
         * [color=#f10610]幽魂毒龙[/color]出现在[color=#4bc0e5]比奇城[/color]，击杀后可掉落大量龙魂精华！
         */
        you_hun_du_long = 339,
        /**
         * [color=#f10610]狂暴雷龙[/color]出现在[color=#4bc0e5]比奇城[/color]，击杀后可掉落大量如意精华！
         */
        kuang_bao_xue_long = 340,
        /**
         * [color=#f10610]苍穹炎龙[/color]出现在[color=#4bc0e5]比奇城[/color]，击杀后可掉落大量羽毛！[color=#00ff28]{0}[/color]
         */
        cang_qiong_yan_long_2 = 341,
        /**
         * [color=#f10610]幽魂毒龙[/color]出现在[color=#4bc0e5]比奇城[/color]，击杀后可掉落大量龙魂精华！[color=#00ff28]{0}[/color]
         */
        you_hun_du_long_2 = 342,
        /**
         * [color=#f10610]狂暴雷龙[/color]出现在[color=#4bc0e5]比奇城[/color]，击杀后可掉落大量如意精华！[color=#00ff28]{0}[/color]
         */
        kuang_bao_xue_long_2 = 343,
        /**
         * 玩家{0}在[color=#33a5ff]{1}[/color]击败了玩家{2}，获得大量生存积分!
         */
        actice_sheng_cun_zhan_chang_kill = 344,
        /**
         * 恭喜{0}挥金如土成为第{1}名
         */
        merger_consume_rank = 345,
        /**
         * {0}成功领取[color=#f10610]天运礼包[/color],获得天运特权，每日免费挑战天运特权BOSS!
         */
        te_hui_gift_notice5_1 = 347,
        /**
         * {0}成功领取[color=#f10610]天运礼包[/color],获得天运特权，每日免费挑战天运特权BOSS!
         */
        te_hui_gift_notice5_3 = 348,
        /**
         * boss隐藏关卡公告
         */
        boss_hide_clone_2 = 349,
        /**
         * boss隐藏关卡公告
         */
        boss_hide_clone_3 = 350,
        /**
         * 使用特权卡道具
         */
        privilege_card_activate_item_3 = 351,
        /**
         * {0}已出现在{1},请各位勇士速速前往，阻击洪荒降世！
         */
        refresh_hong_huang_boss_1 = 352,
        /**
         * {0}已出现在{1},请各位勇士速速前往，阻击洪荒降世！{2}
         */
        refresh_hong_huang_boss_2 = 353,
        /**
         * 取消解散帮会公告
         */
        guild_cancel_dismiss = 354,
        /**
         * {0}成功领取[color=#dc3c23]{1}[/color]英雄等级竞技奖励,战力显著提升!
         */
        sport_hero_level_2 = 355,
        /**
         * {0}成功领取[color=#dc3c23]{1}[/color]英雄等级竞技奖励,战斗力显著提升![color=#46a032]{2}[/color]
         */
        sport_hero_level_3 = 356,
        /**
         * {0}成功领取[color=#dc3c23]{1}[/color]英雄披风竞技奖励,获得海量天蚕丝奖励!
         */
        sport_hero_pifeng_2 = 357,
        /**
         * {0}成功领取[color=#dc3c23]{1}[/color]英雄披风竞技奖励,获得海量天蚕丝奖励![color=#46a032]{2}[/color]
         */
        sport_hero_pifeng_3 = 358,
        /**
         * 帮会篝火Ready
         */
        guild_fire_ready = 360,
        /**
         * 帮会篝火开启
         */
        guild_fire_start = 361,
        /**
         * 开服竞技
         */
        sport_shenge_1 = 362,
        /**
         * 开服竞技
         */
        sport_shenge_2 = 363,
        /**
         * 开服竞技
         */
        sport_shenmai_1 = 364,
        /**
         * 开服竞技
         */
        sport_shenmai_2 = 365,
        /**
         *
         */
        rank_gem_1 = 366,
        /**
         *
         */
        rank_gem_2 = 367,
        /**
         * 开服竞技龙魂1
         */
        sport_longhun_1 = 368,
        /**
         * 开服竞技龙魂2
         */
        sport_longhun_2 = 369,
        /**
         * [color=#00c3e5]{0}[/color]在觉醒竞技中获得大量珍贵道具!
         */
        jue_xing_athletics_award_1 = 370,
        /**
         * [color=#00c3e5]{0}[/color][color=#41dc00]{1}[/color]成功领取大量觉醒竞技奖励![color=#41dc00]{2}[/color]
         */
        jue_xing_athletics_award_2 = 371,
        /**
         * [color=#00c3e5]{0}[/color]在装备竞技中获得大量珍贵道具!
         */
        equip_athletics_award_1 = 372,
        /**
         * 玩家[color=#00c3e5]{0}[/color]，[color=#41dc00]{1}[/color]成功领取大量装备竞技奖励!
         */
        equip_athletics_award_2 = 373,
        /**
         * BOSS[color=#ff0000]{0}[/color]出现在{1}[/color]
         */
        world_boss_refresh_1 = 374,
        /**
         * BOSS[color=#ff0000]{0}[/color]出现在{1}[/color]
         */
        world_boss_refresh_2 = 375,
        /**
         * BOSS[color=#ff0000]{0}[/color]将在{1}后出现在{2}[/color]
         */
        world_boss_refresh_djs_1 = 376,
        /**
         * BOSS[color=#ff0000]{0}[/color]将在{1}后出现在{2}[/color]
         */
        world_boss_refresh_djs_2 = 377,
        /**
         * BOSS[color=#ff0000]{0}[/color]将在{1}后出现在{2}[/color][color=#41dc00]{3}[/color]
         */
        world_boss_refresh_djs_3 = 378,
        /**
         * 开服竞技转生等级公告1
         */
        athletics_reLevel_1 = 379,
        /**
         * 开服竞技转生等级公告2
         */
        athletics_reLevel_2 = 380,
        /**
         * 一级公告 通天塔活动震撼开启,天量元宝等你来拿!
         */
        tong_tian_tower_start_1 = 422,
        /**
         * 二级公告 通天塔活动震撼开启,天量元宝等你来拿!
         */
        tong_tian_tower_start_2 = 423,
        /**
         * 三级公告 通天塔活动震撼开启,天量元宝等你来拿!
         */
        tong_tian_tower_start_3 = 424,
        /**
         * 英雄披风升级
         */
        hero_cloak_up1 = 425,
        /**
         * 英雄转生公告1
         */
        hero_relv_up1 = 426,
        /**
         * 英雄转生公告2
         */
        hero_relv_up2 = 427,
        /**
         * 活动boss信息类型公告
         */
        active_boss_notice = 428,
        /**
         * 签到上上签提示
         */
        sign_top_notice = 429,
        /**
         * 帮会可开启建造公告
         */
        guild_can_open_build = 440,
        /**
         * 帮会仓库礼物
         */
        guild_storage_gift_notice = 441,
        /**
         * 使用英雄物品
         */
        itemUse_notice_hero_1 = 445,
        /**
         * 统一活动准备，传活动ID到客户端
         */
        activity_ready = 500,
        /**
         * 统一活动开始
         */
        activity_start = 501,
        /**
         * 统一活动结束
         */
        activity_end = 502,
        /**
         * boss首杀领取公告
         */
        kill_boss_notice = 510,
        /**
         * 开服限时套装
         */
        os_limit_time_suit = 511,
        /**
         * 开服 BOSS首杀
         */
        os_boss_early_kill = 512,
        /**
         * 开服活动限时装备
         */
        os_limit_time_equip = 513,
        /**
         * 勇士们，再击杀[color=#4bc0e5]{0}[/color]只怪物，强大而恐怖的[color=#f10610]{1}[/color]就会降临虚空幻境，你们准备好了吗？
         */
        xu_kong_huan_jing_boss_notity1 = 1001,
        /**
         * 勇士们，强大而恐怖的[color=#f10610]{0}[/color]已经降临虚空幻境，请火速前往击杀！
         */
        xu_kong_huan_jing_boss_notity2 = 1002,
        /**
         * 勇士们，强大而恐怖的[color=#f10610]{0}[/color]已经降临虚空幻境，请火速前往击杀！[color=#00ff28]{1}[/color]
         */
        xu_kong_huan_jing_boss_notity3 = 1003,
        /**
         * {0}激活[color=#ff3131]七日特权[/color],多重特权在手,成长快人一步![color=#00ff28]{1}[/color]
         */
        seven_days_privilege_activation = 1006,
        /**
         * 恭喜玩家{0}激活{1}尊享特权！
         */
        privilege_card_tuangou_activate_1 = 1007,
        /**
         * 恭喜玩家{0}激活{1}尊享特权！{2}
         */
        privilege_card_tuangou_activate_3 = 1008,
        /**
         * 全民屠魔BOSS-{0}已刷新，请各方霸主前来将其讨伐{1}
         */
        quan_min_tu_mo_refresh = 1009,
        /**
         * 全民屠魔BOSS-{0}已被 {1} 击败，并获得大量奖励
         */
        quan_min_tu_mo_kill = 1010,
        /**
         * boss首杀二级公告
         */
        early_kill_boss_2 = 1015,
        /**
         * boss首杀三级公告
         */
        early_kill_boss_3 = 1018,
        /**
         * {0}将角色全身装备槽强化[color=#dc3c23]+{1}[/color],获得大量强化星级属性加成![color=#46a032]{2}[/color]
         */
        role_equip_strengthen = 1101,
        /**
         * {0}将英雄全身装备槽强化[color=#dc3c23]+{1}[/color],获得大量强化星级属性加成![color=#46a032]{2}[/color]
         */
        hero_equip_strengthen = 1102,
        /**
         * {0}将角色全身宝石总等级提升至[color=#dc3c23]{1}[/color]级,获得大量宝石魂链的加成![color=#46a032]{2}[/color]
         */
        gem_suit = 1103,
        /**
         * {0}将角色全身装备精炼[color=#ff0000]+{1}[/color]
         */
        equip_refine_suit_notice_lv1 = 1104,
        /**
         * {0}将角色全身装备精炼[color=#ff0000]+{1}[/color]
         */
        equip_refine_suit_notice_lv3 = 1105,
        /**
         * {0}通过经验炼制获得了[color=#00ff00]{1}[/color]角色经验值,角色等级飞速提升![color=#46a032]{2}[/color]
         */
        exp_role_refining = 1301,
        /**
         * {0}租赁了[color=#00ff00]{1}[/color]称号，获得大量属性加成，并且7天后全额返元宝！
         */
        title_lease_first_estate_notice = 1302,
        /**
         * {0}租赁了[color=#00ff00]{1}[/color]称号，获得大量属性加成，并且7天后全额返元宝！
         */
        title_lease_third_estate_notice = 1303,
        /**
         * {0}通过经验炼制获得了[color=#00ff00]{1}[/color]英雄经验值,英雄等级飞速提升![color=#46a032]{2}[/color]
         */
        exp_hero_refining = 1304,
        /**
         * 攻城战开始，请迅速摧毁城门进入沙巴克
         */
        sha_cheng_notify1 = 1701,
        /**
         * 城门已被摧毁，进入沙巴克击败敌对玩家
         */
        sha_cheng_notify2 = 1702,
        /**
         * 城内敌对玩家已全部消灭，请迅速击破城墙攻入皇宫
         */
        sha_cheng_notify3 = 1703,
        /**
         * 击败守城玩家，占领皇宫！
         */
        sha_cheng_notify4 = 1704,
        /**
         * {0}帮会帮主{1}，在{2}地图的{3},{4}创建了帮会篝火，帮会成员可在该位置获得大量奖励
         */
        guild_fire_use_notify = 1706,
        /**
         * 再次求援请在{0}秒后
         */
        ya_biao_help_fali_notify = 1710,
        /**
         * 激活特权卡1级公告
         */
        privilege_card_active_1 = 1720,
        /**
         * 激活特权卡3级公告
         */
        privilege_card_active_3 = 1721,
        /**
         * 激活全部特权卡1级公告
         */
        privilege_card_all_active_1 = 1722,
        /**
         * 激活全部特权卡3级公告
         */
        privilege_card_all_active_3 = 1723,
        /**
         * 天降鸿福超级宝箱刷新公告
         */
        tjhf_super_box_notice = 1904,
        /**
         * 天降鸿福装备宝箱刷新公告
         */
        tjhf_equip_box_notice = 1905,
        /**
         * [color=#6db1df]{0}[/color]获得了超级鸿福宝箱，持有三分钟后即可将超级鸿福宝箱据为己有!
         */
        tian_jiang_hong_fu_get_box = 2004,
        /**
         * [color=#6db1df]营地战旗[/color]已被[color=#6db1df]{0}[/color]占领！
         */
        ying_di_flag_change1 = 2023,
        /**
         * [color=#6db1df]广场战旗[/color]已被[color=#6db1df]{0}[/color]占领！
         */
        guang_chang_flag_change1 = 2024,
        /**
         * [color=#6db1df]营地战旗[/color]已被[color=#6db1df]{0}[/color]占领！
         */
        ying_di_flag_change3 = 2025,
        /**
         * [color=#6db1df]广场战旗[/color]已被[color=#6db1df]{0}[/color]占领！
         */
        guang_chang_flag_change3 = 2026,
        /**
         * [color=#6db1df]沙城[/color]已被[color=#6db1df]{0}[/color]占领！
         */
        sha_cheng_change1 = 2027,
        /**
         * [color=#6db1df]沙城[/color]已被[color=#6db1df]{0}[/color]占领！
         */
        sha_cheng_change3 = 2028,
        /**
         * [color=#4bc0e5]卧龙山庄[/color][color=#f10610]魔物[/color]已复活
         */
        wo_long_shan_zhuang_xiao_guai = 2101,
        /**
         * [color=#4bc0e5]卧龙山庄[/color]刷新大量[color=#f10610]烟花燃放地[/color]，请各位大侠速速前往，燃放烟花
         */
        wo_long_shan_zhuang_yan_hua = 2102,
        /**
         * {0}开启[color=#f10610]卧龙银箱子[/color]，获得{1}奖励
         */
        wo_long_shan_zhuang_ag_box_1 = 2103,
        /**
         * {0}开启[color=#f10610]卧龙银箱子[/color]，获得{1}奖励
         */
        wo_long_shan_zhuang_ag_box_2 = 2104,
        /**
         * [color=#4bc0e5]卧龙大殿[/color]活动已经开启，欢迎大家踊跃参加!
         */
        wo_long_da_dian_1 = 2105,
        /**
         * [color=#4bc0e5]卧龙大殿[/color]活动已经开启，欢迎大家踊跃参加![color=#00ff28]{0}[/color]
         */
        wo_long_da_dian_3_cross = 2106,
        /**
         * [color=#4bc0e5]卧龙大殿[/color]活动已经开启，欢迎大家踊跃参加![color=#00ff28]{0}[/color]
         */
        wo_long_da_dian_3_cs2s = 2107,
        /**
         * 恭喜[color=#00baff]{0}[/color]帮会与[color=#00baff]{1}[/color]帮会成功结为盟友，共同抵抗卧龙魔物入侵！
         */
        wlsz_alliance = 2108,
        /**
         * [color=#00baff]{0}[/color]帮会拒绝了您的结盟申请
         */
        wlsz_alliance_refuse = 2109,
        /**
         * 您在卧龙山庄的同盟帮会:[color=#00ff28]{0}[/color]已经与您的帮派解除了[color=#f10610]同盟状态[/color]，请各位大侠知晓
         */
        wlsz_alliance_remove = 2110,
        /**
         * 您的帮会已经与[color=#00ff28][S{0}]{1}[/color]结为[color=#00ff28]同盟[/color]，结盟帮会在卧龙山庄开启[color=#00ff28]帮会模式[/color]，不会互相伤害，请各位大侠知晓
         */
        wlsz_alliance_add = 2111,
        /**
         * {0}神格突破至[color=#c53eaa]{1}[/color],实力大增![color=#46a032]{2}[/color]
         */
        godhood_upreade = 2201,
        /**
         * {0}猎魔提升至[color=#cd62ff]{1}[/color],提升了爆率，获得极品装备指日可待！[color=#41dc00]{2}[/color]
         */
        lie_mo_up = 2202,
        /**
         * {0}神脉进阶至[color=#c53eaa]{1}[/color],实力大增![color=#46a032]{2}[/color]
         */
        god_pulse_upreade = 2301,
        /**
         * 恭喜玩家[color=#6db1df]{0}[/color]经过不懈努力完成{1}Boss悬赏，获得大量钻石奖励！！
         */
        boss_award_2 = 2303,
        /**
         * 恭喜玩家[color=#6db1df]{0}[/color]经过不懈努力完成{1}Boss悬赏，获得大量钻石奖励！！{2}
         */
        boss_award_3 = 2304,
        /**
         * 金猪现世，10分钟后自行逃离
         */
        treasure_pig_start = 2501,
        /**
         * 金猪30秒后将逃离
         */
        treasure_pig_end = 2502,
        /**
         * 跨服地图中的怪物已经刷新！[color=#46a032]{0}[/color]
         */
        holy_dragon_valley_boss = 2503,
        /**
         * {0}帮会的{1}豪气冲天，甩手就一是一个大红包给帮会兄弟们买酒喝
         */
        gang_red_notice_lv_3 = 2700,
        /**
         * {0}激活[color=#dc3c23]攻击特戒[/color],伤害大量提升![color=#46a032]{1}[/color]
         */
        fight_ring = 2701,
        /**
         * {0}激活[color=#dc3c23]防御特戒[/color],防御大量提升![color=#46a032]{1}[/color]
         */
        defense_ring = 2702,
        /**
         * {0}激活[color=#dc3c23]复活特戒[/color],获得复活属性![color=#46a032]{1}[/color]
         */
        relive_ring = 2703,
        /**
         * {0}激活[color=#dc3c23]麻痹特戒[/color],人物获得麻痹属性![color=#46a032]{1}[/color]
         */
        mabi_ring = 2704,
        /**
         * {0}帮会的{1}豪气冲天，甩手就一是一个大红包给帮会兄弟们买酒喝
         */
        gang_send_red_notice = 2705,
        /**
         * {0}帮会获得攻沙排名红包奖励，真是羡煞旁人！
         */
        guild_system_red1 = 2744,
        /**
         * 恭喜本帮获得攻沙排名红包奖励，希望大家再接再厉！
         */
        guild_system_red3 = 2745,
        /**
         * [color=#ff0000]{0}[/color]的帮主[color=#ff0000]{1}[/color]给兄弟们发放了帮会奖池红包！
         */
        guild_pool_red_by_chairman = 2746,
        /**
         * 帮主[color=#ff0000]{1}[/color]发放了帮会奖池红包，大家快去抢啊！
         */
        guild_pool_red = 2747,
        /**
         * [color=#dc3c23]{0}[/color]在第一大陆的[color=#6db0df]{1}[/color]复活了，勇士们请速速前往击杀！[color=#46a032]{2}[/color]
         */
        mo_hun_jin_di_1 = 2750,
        /**
         * [color=#dc3c23]{0}[/color]在第二大陆的[color=#6db0df]{1}[/color]复活了，勇士们请速速前往击杀！[color=#46a032]{2}[/color]
         */
        mo_hun_jin_di_2 = 2751,
        /**
         * [color=#dc3c23]{0}[/color]在第三大陆的[color=#6db0df]{1}[/color]复活了，勇士们请速速前往击杀！[color=#46a032]{2}[/color]
         */
        mo_hun_jin_di_3 = 2752,
        /**
         * 恭喜玩家[color=#6db1df]{0}[/color]仅用[color=#46a032]{1}[/color]升至999级,开启飞升之路!
         */
        before_level_2 = 2761,
        /**
         * 恭喜玩家[color=#6db1df]{0}[/color]仅用[color=#46a032]{1}[/color]升至999级,开启飞升之路!
         */
        before_level_3 = 2762,
        /**
         * 增加武魂套装等级提升3级公告
         */
        wu_hun_suit_level_3 = 2763,
        /**
         * 增加武魂套装等级提升2级公告
         */
        wu_hun_suit_level_2 = 2764,
        /**
         * {0}将[color=#dc3c23]神罚[/color]提升至[color=#dc3c23]{1}[/color]，实力得到显著提升！[color=#46a032]{2}[/color]
         */
        shen_fa_grade_3 = 2765,
        /**
         * [color=#6db0df]步步为赢[/color]活动[color=#46a032]学富五车[/color]称号奖励将在活动正式结束的时候以邮件形式发送给玩家
         */
        answer_activity_stop = 2766,
        /**
         * 恭喜玩家[color=#6db1df]{0}[/color][color=#5acd41]封禅暴击[/color]获得海量奖励！！
         */
        worship_crit = 2778,
        /**
         * 全服封禅到达N次神龙显灵请大家前往神龙祭拜活动领取（三级）
         */
        worship_fenChan_award3 = 2779,
        /**
         * 恭喜玩家[color=#6db1df]{0}[/color][color=#5acd41]祭拜暴击[/color]获得海量奖励！！
         */
        worship_normal_crit = 2780,
        /**
         * 全服[color=#00c3e5]神龙祭拜[/color]次数达到[color=#ff0000]{0}[/color]次，[color=#00c3e5]龙域秘境[/color]即将降临[color=#ff0000]{1}[/color]位勇士！
         */
        worship_refreshh_boss = 2782,
        /**
         * [color=#00c3e5]神龙祭拜-龙域秘境[/color]还有[color=#ff0000]{0}[/color]分钟即将关闭！
         */
        forcast_close = 2790,
        /**
         * 全服封禅到达N次神龙显灵请大家前往神龙祭拜活动领取（二级）
         */
        worship_fenChan_award2 = 2793,
        /**
         * 圣域龙灵全部激活公告
         */
        saint_dragon_spirit_active1 = 2801,
        /**
         * 圣域龙灵公告3
         */
        saint_dragon_spirit_active2 = 2802,
        /**
         * 圣域龙灵玩家进入公告
         */
        saint_dragon_spirit_enter1 = 2803,
        /**
         *
         */
        saint_dragon_spirit_enter2 = 2804,
        /**
         * 今日[color=#6db1df]屠魔猎场[/color]对战已全部结束
         */
        tumo_hunting_all_close1 = 2903,
        /**
         * 今日[color=#6db1df]屠魔猎场[/color]对战已全部结束
         */
        tumo_hunting_all_close3 = 2904,
        /**
         * 今日[color=#6db1df]屠魔猎场[/color]对战已全部结束
         */
        tumo_hunting_once_close1 = 2905,
        /**
         * 今日[color=#6db1df]屠魔猎场[/color]对战已全部结束
         */
        tumo_hunting_once_close3 = 2906,
        /**
         * 对战将于{0}后结束，请尽快收集魔能！
         */
        tumo_hunting_fight_close_from = 2907,
        /**
         * {0}阵营的{1}的当前生命已经低于{2}%，请火速支援！
         */
        tumo_hunting_monster_hp = 2908,
        /**
         * {0}阵营的{1}的当前生命已经低于{2}%，请火速支援！
         */
        tumo_hunting_monster_kill = 2909,
        /**
         * 拍卖行上架提示
         */
        auction_sell_notice = 2952,
        /**
         * 玩家{0}回收大量装备获得海量元宝！
         */
        equip_recover_notice = 2953,
        /**
         * 恭喜{0}成功将<font color="#ff00f6">VIP</font>等级提升至<font color="#ff00f6">{1}</font>,享受尊贵VIP特权!
         */
        vip_achi_2 = 3010,
        /**
         * 恭喜{0}成功将<font color="#ff00f6">VIP</font>等级提升至<font color="#ff00f6">{1}</font>,享受尊贵VIP特权!
         */
        vip_achi_3 = 3011,
        /**
         * 玩家{0}成功激活{1}时装，不仅获得炫酷外观，也获得大量稀有属性!
         */
        fashion_activate1 = 3012,
        /**
         * 玩家{0}成功激活{1}时装，不仅获得炫酷外观，也获得大量稀有属性!
         */
        fashion_activate3 = 3013,
        /**
         * 玩家{0}完成[color=#41dc00]盟重边防[/color]任务后，双倍领取奖励，获得了[color=#eadc01]{1}[/color]元宝！
         */
        border_double_award = 3022,
        /**
         * 玩家{0}到达120级，免费[color=#41dc00]VIP[/color]之路即刻开启！
         */
        vip_achi_func_open = 3023,
        /**
         * {0}通过[color=#ff0000]器灵圣龙之珠[/color]的50%爆率增幅!竟打到了{2}，真实羡煞旁人！[color=#41dc00]{1}[/color]
         */
        sheng_long_zhi_zhu_drop = 3024,
        /**
         * 玩家{0}在等级福利中领取了{1}级的超级福利奖励！
         */
        level_reach_award_notice_3 = 3026,
        /**
         * 玩家{0}在等级福利中领取了{1}级的超级福利奖励！
         */
        level_reach_award_notice_1 = 3027,
        /**
         * 玩家{0}幸运爆棚，再热血矿区意外挖到了{1}，羡煞旁人！[color=#41dc00]{2}[/color]
         */
        wa_kuang = 3028,
        /**
         * [color=#41dc00]{0}熟练度+{1}[/color]
         */
        wa_kuang_sld = 3037,
        /**
         * 获得技能书[color=#00c3e5]{0}[/color]
         */
        wa_kuang_jns = 3038,
        /**
         * [color=#41dc00]使用{0}[/color][color=#41dc00]，[color=#41dc00]切割等级+{1}[/color]
         */
        dragon_ferocity = 3040,
        /**
         * 玩家{0}已完成全部主线任务，成神之路即刻开启！
         */
        trunk_compelte = 3041,
        /**
         * 恭喜玩家{0}通过宝藏探宝[color=#00c3e5]全服首位[/color]获得{1}在开服活动-最强战士中免费领走了1888钻石！羡煞旁人！
         */
        strongest_award_first = 3042,
        /**
         * 恭喜玩家{0}通过宝藏探宝获得{1}并在开服活动-最强战士中免费领走了888钻石！羡煞旁人！
         */
        strongest_award = 3043,
        /**
         * 玩家[color=#00c3e5]{0}[/color]领取并使用了{1}，永久激活了符文炼制中的精铁炉！！[color=#41dc00]{2}[/color]
         */
        fuwenlianzhi_super_use_item = 3044,
        /**
         * 玩家[color=#00c3e5]{0}[/color]领取并使用了{1}，大幅度增加探索收益！！[color=#41dc00]{2}[/color]
         */
        buy_guaji_item = 3045,
        /**
         * {0}触发[color=#ff0000]爆率暗箱[/color]竟打到了{1}，真是羡煞旁人！
         */
        bao_lv_drop = 5001,
        /**
         * {0}因为[color=#ff0000]正常爆率增幅[/color]竟打到了{1}，真是羡煞旁人！
         */
        normal_bao_lv_drop = 5002,
        /**
         * {0}因为[color=#ff0000]超高爆率[/color]竟打到了{1}，真是羡煞旁人！
         */
        bao_lv_drop_1 = 5003,
        /**
         * {0}因为[color=#ff0000]超高爆率[/color]竟打到了{1}，真是羡煞旁人！
         */
        normal_bao_lv_drop_1 = 5004,
        /**
         * {0}完成[color=#00c3e5]战线补给[/color]双倍领取[color=#ff0000]大量觉醒材料[/color][color=#41dc00]{1}[/color]
         */
        front_supply_get = 6001,
        /**
         * {0}完成[color=#00c3e5]战线补给[/color]双倍领取[color=#ff0000]大量觉醒材料[/color]
         */
        front_supply_award = 6002,
        /**
         * 玩家{0}购买限时超值礼包！[color=#41dc00]{2}[/color]
         */
        day_gift_1 = 6013,
        /**
         * 玩家{0}购买限时超值礼包！
         */
        day_gift_2 = 6014,
        /**
         * 成功激活探索技能：{0}
         */
        offline_drill_skill_use = 6015,
        /**
         * 安全区[color=#41dc00]{0}秒[/color]后刷新[color=#00c3e5]圣火[/color]，点燃圣火鼓舞士气，获得积分！
         */
        kbzb_collect_refresh = 6016,
        /**
         * [color=#00c3e5]跨服争霸[/color]活动已经开启，欢迎大家踊跃参加!
         */
        kfzb_activity_open_1 = 6017,
        /**
         * [color=#00c3e5]跨服争霸[/color]活动已经开启，欢迎大家踊跃参加![color=#41dc00]{0}[/color]
         */
        kfzb_activity_open_2 = 6018,
        /**
         * [color=#00c3e5]跨服争霸[/color]活动已结束！
         */
        kfzb_activity_end_1 = 6019,
        /**
         * [color=#00c3e5]跨服争霸[/color]活动已结束！
         */
        kfzb_activity_end_2 = 6020,
        /**
         * [color=#00c3e5]跨服争霸-黑龙BOSS[/color]大爆掉落{0}！勇士们正在争抢！
         */
        kfzb_boos_drop_item_1 = 6026,
        /**
         * [color=#00c3e5]{0}[/color]在神装竞技中获得大量珍贵道具!
         */
        cross_shenzhuang_athletics_1 = 6027,
        /**
         * 玩家[color=#00c3e5]{0}[/color]，[color=#41dc00]{1}[/color]成功领取大量神装竞技奖励!
         */
        cross_shenzhuang_athletics_2 = 6028,
        /**
         * [color=#00c3e5]{0}[/color]在神阶竞技中获得大量珍贵道具!
         */
        cross_shenjie_athletics_1 = 6029,
        /**
         * 玩家[color=#00c3e5]{0}[/color]，[color=#41dc00]{1}[/color]成功领取大量神阶竞技奖励!
         */
        cross_shenjie_athletics_2 = 6030,
        /**
         * [color=#00c3e5]{0}[/color]在跨服任务竞技中获得大量珍贵道具!
         */
        cross_mission_athletics_1 = 6031,
        /**
         * 玩家[color=#00c3e5]{0}[/color]，[color=#41dc00]{1}[/color]成功领取大量跨服任务竞技奖励!
         */
        cross_mission_athletics_2 = 6032,
        /**
         * [color=#00c3e5]{0}[/color]在饮酒竞技中获得大量珍贵道具!
         */
        cross_yinjiu_athletics_1 = 6033,
        /**
         * 玩家[color=#00c3e5]{0}[/color]，[color=#41dc00]{1}[/color]成功领取大量饮酒竞技奖励!
         */
        cross_yinjiu_athletics_2 = 6034,
        /**
         * [color=#00c3e5]{0}[/color]在饮酒大赛中获第{1}名获得大量珍贵道具!
         */
        cross_yinjiu_rank_award_1 = 6035,
        /**
         * 玩家[color=#00c3e5]{0}[/color]，在饮酒大赛中获第{1}名，[color=#41dc00]{2}[/color]成功领取大量饮酒竞技奖励!
         */
        cross_yinjiu_rank_award_2 = 6036,
        /**
         * [color=#00c3e5]{0}[/color]在饮酒大赛中上榜获得大量珍贵道具!
         */
        cross_yinjiu_onrank_award_1 = 6037,
        /**
         * 玩家[color=#00c3e5]{0}[/color]，在饮酒大赛中上榜，[color=#41dc00]{1}[/color]成功领取大量饮酒竞技奖励!
         */
        cross_yinjiu_onrank_award_2 = 6038,
        /**
         * {0}成功领取[color=#ff0000]神装残片礼包[/color],获得海量神装碎片!
         */
        cross_tehui_gift_shenzhuang_canpian_1 = 6039,
        /**
         * {0}成功领取[color=#ff0000]神装残片礼包[/color],获得海量神装碎片![color=#41dc00]{1}[/color]
         */
        cross_tehui_gift_shenzhuang_canpian_2 = 6040,
        /**
         * {0}成功领取[color=#ff0000]神元精魄礼包[/color],助力神阶急速升级!
         */
        cross_tehui_gift_shenyuan_jingpo_1 = 6041,
        /**
         * {0}成功领取[color=#ff0000]神元精魄礼包[/color],助力神阶急速升级![color=#41dc00]{1}[/color]
         */
        cross_tehui_gift_shenyuan_jingpo_2 = 6042,
        /**
         * {0}成功领取[color=#ff0000]啤酒券特惠包[/color],参加跨服饮酒，生肖、神装残片、神元精魄拿到手软!
         */
        cross_tehui_gift_pijiuquan_1 = 6043,
        /**
         * {0}成功领取[color=#ff0000]啤酒券特惠包[/color],参加跨服饮酒，生肖、神装残片、神元精魄拿到手软![color=#41dc00]{1}[/color]
         */
        cross_tehui_gift_pijiuquan_2 = 6044,
        /**
         * {0}成功领取[color=#ff0000]啤酒瓶子时装包[/color],酷炫外形，彰显个性；PK属性，王者风范!
         */
        cross_tehui_gift_pijiu_fashion_1 = 6045,
        /**
         * {0}成功领取[color=#ff0000]啤酒瓶子时装包[/color],酷炫外形，彰显个性；PK属性，王者风范![color=#41dc00]{1}[/color]
         */
        cross_tehui_gift_pijiu_fashion_2 = 6046,
        /**
         * {0}激活{1}级[color=#ff0000]传说特戒套装[/color]获得开天剑法神技，多倍群攻伤害!真滴可怕！[color=#41dc00]{2}[/color]
         */
        ring_suit_1_1 = 6047,
        /**
         * {0}激活{1}级[color=#ff0000]传说特戒套装[/color]获得开天剑法神技，多倍群攻伤害!真滴可怕！
         */
        ring_suit_1_2 = 6048,
        /**
         * {0}激活{1}级[color=#ff0000]旷世特戒套装[/color]获得天神下凡神技，伤害减半，无视伤害！实在太猛！[color=#41dc00]{2}[/color]
         */
        ring_suit_2_1 = 6049,
        /**
         * {0}激活{1}级[color=#ff0000]旷世特戒套装[/color]获得天神下凡神技，伤害减半，无视伤害！实在太猛！
         */
        ring_suit_2_2 = 6050,
        /**
         * 攻城战活动结束客户端推送气泡
         */
        gcz_over_notic = 6051,
        /**
         * 恭喜{0}在特戒GO中抽中2个相同特戒材料，获得相同材料双倍奖励！
         */
        ringgo_double_award_1 = 6052,
        /**
         * 恭喜{0}在特戒GO中抽中2个相同特戒材料，获得相同材料双倍奖励！
         */
        ringgo_double_award_2 = 6053,
        /**
         * 恭喜{0}在特戒GO中抽中3个相同特戒材料，全部材料三倍奖励！太幸运了吧！
         */
        ringgo_triple_award_1 = 6054,
        /**
         * 恭喜{0}在特戒GO中抽中3个相同特戒材料，全部材料三倍奖励！太幸运了吧！
         */
        ringgo_triple_award_2 = 6055,
        /**
         * 进入地图CD公告
         */
        enter_map_cd = 6056,
        /**
         * 圣龙战场开始活动1
         */
        slzc_activity_open_1 = 6057,
        /**
         * 圣龙战场开始活动2
         */
        slzc_activity_open_2 = 6058,
        /**
         * 圣龙战场结束活动1
         */
        slzc_activity_end_1 = 6059,
        /**
         * 圣龙战场结束活动2
         */
        slzc_activity_end_2 = 6060,
        /**
         * 龙怒图腾即将在{0}秒后出现，收集后可大幅增加自身战斗力
         */
        slzc_collect_buff_early = 6061,
        /**
         * 超级圣龙印记出现在圣龙战场（{0},{1}），请各位勇士前往收集！！
         */
        slzc_collect_super_refresh = 6062,
        /**
         * {0}已经击杀了{1}名对手，在战场中所向披靡，难逢敌手！！
         */
        slzc_accumulative_kill_1 = 6063,
        /**
         * {0}已经击杀了{1}名对手，在战场中疯狂杀戮，所过之处，无人生还！！
         */
        slzc_accumulative_kill_2 = 6064,
        /**
         * 恭喜{0}在夺金之路（元宝）击杀Boss获得奖励！
         */
        gold_digger_gold = 6065,
        /**
         * 恭喜{0}在夺金之路（圣龙币）击杀Boss获得奖励！
         */
        gold_digger_money = 6066,
        /**
         * 跨服竞技附魔1公告至尊xx1
         */
        enchantment_1_notify_1 = 6067,
        /**
         * 跨服竞技附魔1公告至尊xx2
         */
        enchantment_1_notify_2 = 6068,
        /**
         * 跨服竞技附魔2公告至尊xx1
         */
        enchantment_2_notify_1 = 6069,
        /**
         * 跨服竞技附魔2公告至尊xx2
         */
        enchantment_2_notify_2 = 6070,
        /**
         * 跨服竞技附魔3公告至尊xx1
         */
        enchantment_3_notify_1 = 6071,
        /**
         * 跨服竞技附魔3公告至尊xx2
         */
        enchantment_3_notify_2 = 6072,
        /**
         * 跨服竞技附魔4公告至尊xx1
         */
        enchantment_4_notify_1 = 6073,
        /**
         * 跨服竞技附魔4公告至尊xx2
         */
        enchantment_4_notify_2 = 6074,
        /**
         * 跨服竞技护盾1
         */
        cross_athletics_shield_1 = 6075,
        /**
         * 跨服竞技护盾2
         */
        cross_athletics_shield_2 = 6076,
        /**
         * {0}通过活跃转盘幸运获得{1}
         */
        lucky_dish_get = 7101,
        /**
         * {0}[/color]时装已过期
         */
        fashion_overdue = 7401,
        /**
         * 玩家{0}在全民饮酒中,获得{1}
         */
        yinjiu_get_award_1 = 7605,
        /**
         * 玩家{0}在全民饮酒中,获得{1}
         */
        yinjiu_get_award_2 = 7606,
        /**
         * 玩家[color=#e1d2a5]{0}[/color]在[color=#00c3e5]{1}[/color]击杀[color=#ff0000]{2}[/color]掉落{3}
         */
        rare_boss_kill_drop = 7610,
        /**
         * 玩家{0}强势入场，开场直升[color=#dc1e1e]10[/color]级，传奇最强功房走起！！！
         */
        lv_notice_2 = 7611,
        /**
         * 玩家{0}强势入场，开场直升[color=#dc1e1e]10[/color]级，传奇最强功房走起！！！
         */
        lv_notice_3 = 7612,
        /**
         * {0}将{1}精炼至<font color="#ff3131">{2}</font>星{3}
         */
        equip_refine = 10001,
        /**
         * {0}将{1}强化至<font color="#ff3131">{2}</font>星{3}
         */
        equip_intensify = 10002,
        /**
         * 开服即将结束
         */
        cross_upcoming = 10003,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 普通成就类型
 */
declare module protocol {
    const enum EnumNormalAchievementType {
        /**
         *
         */
        none = 0,
        /**
         * 帮会
         */
        guild = 1,
        /**
         * 限时成就1
         */
        xian_shi_mission_1 = 2,
        /**
         * 限时成就2
         */
        xian_shi_mission_2 = 3,
        /**
         * boss狂欢
         */
        boss_kuang_huan = 4,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 我要变强请求
 */
declare module protocol {
    class to_strong_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 我要变强回复
 */
declare module protocol {
    class to_strong_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        infoArray: Array<info_toStrong>;
        infoArray_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求兑换奖励
 */
declare module protocol {
    class tong_tian_tower_convert_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class tong_tian_tower_convert_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求进入通天塔的某一层
 */
declare module protocol {
    class tong_tian_tower_enter_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        layer: number;
        isUseItem: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class tong_tian_tower_enter_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class tong_tian_tower_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        currentBreakLayer: number;
        currentEnterCount: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 客户端请求通天塔记录
 */
declare module protocol {
    class tong_tian_tower_radio_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回通天塔记录
 */
declare module protocol {
    class tong_tian_tower_radio_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        info: Array<info_tong_tian_tower_radio>;
        info_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 通天塔每日奖励领取请求
 */
declare module protocol {
    class tongtianta_award_daily_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 通天塔每日奖励领取回复
 */
declare module protocol {
    class tongtianta_award_daily_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 阶段领奖请求
 */
declare module protocol {
    class tongtianta_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        tier: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 阶段领奖回复
 */
declare module protocol {
    class tongtianta_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        tier: number;
        tier_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 通天塔挑战层数主动推送
 */
declare module protocol {
    class tongtianta_challenge_tier_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        tier: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步信息
 */
declare module protocol {
    class tongtianta_data_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        onTier: number;
        awardDaily: number;
        awardTier: Array<number>;
        perfectPass: Array<number>;
        awardTier_changed: boolean;
        perfectPass_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 通天塔进入请求
 */
declare module protocol {
    class tongtianta_enter_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        tier: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 通天塔进入回复
 */
declare module protocol {
    class tongtianta_enter_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 通天塔层奖励推送
 */
declare module protocol {
    class tongtianta_tierAward_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        tier: number;
        isAuto: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 我要变强-攻击力请求
 */
declare module protocol {
    class toStrong_atk_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 我要变强-攻击力回复
 */
declare module protocol {
    class toStrong_atk_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        type: number;
        atks: Array<info_toStrong_atk>;
        atks_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 添加物品到交易栏
 */
declare module protocol {
    class trading_add_item_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        itemID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回添加物品到交易栏状态
 */
declare module protocol {
    class trading_add_item_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        roleID: string;
        itemArr: info_item;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 交易申请
 */
declare module protocol {
    class trading_apply_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回申请交易的状态
 */
declare module protocol {
    class trading_apply_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        roleID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 关闭交易窗口
 */
declare module protocol {
    class trading_close_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回关闭消息
 */
declare module protocol {
    class trading_close_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        roleID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 交易申请
 */
declare module protocol {
    class trading_confirm_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleID: string;
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回申请交易的状态
 */
declare module protocol {
    class trading_confirm_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        roleID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 添加货币到交易栏
 */
declare module protocol {
    class trading_currency_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        gold: number;
        vipPoint: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回添加货币到交易栏状态
 */
declare module protocol {
    class trading_currency_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        roleID: string;
        gold: number;
        vipPoint: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 删除交易栏的物品
 */
declare module protocol {
    class trading_del_item_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        itemID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回删除交易栏的物品
 */
declare module protocol {
    class trading_del_item_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        roleID: string;
        itemArr: info_item;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 锁定或解锁自己的交易栏
 */
declare module protocol {
    class trading_lock_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回锁定或解锁自己的交易栏
 */
declare module protocol {
    class trading_lock_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        roleID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 交易物品
 */
declare module protocol {
    class trading_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回交易物品
 */
declare module protocol {
    class trading_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        roleID: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 错误码定义
 */
declare module protocol {
    const enum EnumMsgState {
        /**
         * 成功
         */
        ok = 0,
        /**
         * 错误
         */
        err = 1,
        /**
         * 背包空间不足(以后可以统一使用这个)
         */
        bag_capacity_lack = 11,
        /**
         * 新增绑定元宝不足
         */
        not_enough_money_bind_new = 100,
        /**
         * 元宝
         */
        not_enough_gold = 101,
        /**
         * 绑定元宝
         */
        not_enough_gold_bind = 102,
        /**
         * 钻石不足
         */
        not_enough_money = 103,
        /**
         * 礼券（原绑定元宝）
         */
        not_enough_money_coupon = 104,
        /**
         * 等级
         */
        not_enough_lv = 105,
        /**
         * 转生等级
         */
        not_enough_lv_r = 106,
        /**
         * 经验值
         */
        not_enough_exp = 107,
        /**
         * 经验值2
         */
        not_enough_exp2 = 108,
        /**
         * 内功等级
         */
        not_enough_nei_lv = 109,
        /**
         * 内功经验
         */
        not_enough_nei_exp = 110,
        /**
         * 内功经验2
         */
        not_enough_nei_exp2 = 111,
        /**
         * 内功当前值
         */
        not_enough_nei_val_cur = 112,
        /**
         * 内功最大值
         */
        not_enough_nei_val_max = 113,
        /**
         * 贵族等级
         */
        not_enough_vip_lv = 114,
        /**
         * 转生值
         */
        not_enough_rebirth_val = 115,
        /**
         * 韧性
         */
        not_enough_tenacity_val = 116,
        /**
         * 宝藏积分
         */
        not_enough_mine_score = 117,
        /**
         * 物品回收积分
         */
        not_enough_item_recycle_score = 118,
        /**
         * 功勋值
         */
        not_enough_gong_xun_val = 119,
        /**
         * 功勋称号
         */
        not_enough_gong_xun_lv = 120,
        /**
         * 炼魂值
         */
        not_enough_lian_hun_val = 121,
        /**
         * 炼魂等级
         */
        not_enough_lian_hun_lv = 122,
        /**
         * 消费复活次数
         */
        not_enough_money_relive_use = 123,
        /**
         * 神武值
         */
        not_enough_shen_wu_val = 124,
        /**
         * 神武等级
         */
        not_enough_shen_wu_lv = 125,
        /**
         * 荣誉值
         */
        not_enough_rong_yu_val = 126,
        /**
         * 荣誉等级
         */
        not_enough_rong_yu_lv = 127,
        /**
         * 天赋最大点数
         */
        not_enough_tian_fu_val = 128,
        /**
         * 怒气值
         */
        not_enough_nu_qi_val = 129,
        /**
         * 元宝福利
         */
        not_enough_weal = 130,
        /**
         * 成就值
         */
        not_enough_achievement_val = 131,
        /**
         * 成就等级
         */
        not_enough_achievement_lv = 132,
        /**
         * 灵佑值
         */
        not_enough_ling_you_val = 133,
        /**
         * PK值
         */
        not_enough_pk_val = 134,
        /**
         * 角色体力
         */
        not_enough_physical_power = 135,
        /**
         * 玉佩精华
         */
        not_enough_jade = 136,
        /**
         * 神石精华
         */
        not_enough_stone = 137,
        /**
         * 龙魂精华
         */
        not_enough_soul = 138,
        /**
         * 如意精华
         */
        not_enough_ruyi = 139,
        /**
         * 装备精炼值
         */
        not_enough_equip_refine_value = 140,
        /**
         * 灵气值
         */
        not_enough_ling_qi_value = 141,
        /**
         * 宝石值
         */
        not_enough_gem_chip = 142,
        /**
         * 声望
         */
        not_enough_fame = 143,
        /**
         * 书魂点
         */
        not_enough_book_soul = 144,
        /**
         * 时装值
         */
        not_enough_fashion_val = 145,
        /**
         * 铸灵值
         */
        not_enough_zhuling = 146,
        /**
         * 铸灵等级
         */
        not_enough_zhuling_level = 147,
        /**
         * 宝石碎片
         */
        not_enough_gem_fragment = 148,
        /**
         * 当前神甲值
         */
        not_enough_hero_shen_jia_curr = 149,
        /**
         * 物品不足
         */
        not_enough_item = 150,
        /**
         * 贵族等级超出限制
         */
        vip_lv_limit = 152,
        /**
         * 心魔密室本服提交已满
         */
        xinmo_server_submit_full = 200,
        /**
         * 心魔密室玩家提交已满
         */
        xinmo_role_submit_full = 201,
        /**
         * 心魔密室BOSS已经存在
         */
        xinmo_mi_shi_boss_exist = 202,
        /**
         * 心魔密室玩家提交次数不足
         */
        xinmo_role_submit_count_err = 203,
        /**
         * 槽位不可激活
         */
        slot_cannot_active = 205,
        /**
         * 槽位已经激活
         */
        slot_already_active = 206,
        /**
         * 不匹配的攻击类型，过滤
         */
        skill_not_match_type = 210,
        /**
         * 单位不存在
         */
        unit_not_exist = 215,
        /**
         * 单位已死亡
         */
        unit_is_dead = 216,
        /**
         * 单位无法锁定
         */
        unit_cannot_lock = 217,
        /**
         * 单位距离检测失败
         */
        unit_distance_check_failed = 218,
        /**
         * 英雄不存在
         */
        hero_not_exist = 219,
        /**
         * 区域不可移动
         */
        region_cannot_move = 224,
        /**
         * 角色可移动
         */
        role_cannot_move = 225,
        /**
         * 角色超时移动
         */
        role_chaos_move = 226,
        /**
         * 检测加速外挂嫌疑
         */
        role_check_plugin = 227,
        /**
         * 移动类型错误，walk run
         */
        role_move_type_err = 228,
        /**
         * 移动距离不匹配
         */
        role_move_xy_match = 229,
        /**
         * 移动距离和类型不匹配
         */
        role_move_type_dis_match = 230,
        /**
         * 禁止移动，死亡等
         */
        role_forbid_move = 231,
        /**
         * 角色创建姓名重复
         */
        role_create_repeat = 701,
        /**
         * 非法字符
         */
        invalid_name = 702,
        /**
         * 技能满级
         */
        skill_learn_full = 1001,
        /**
         * 学习条件不足
         */
        skill_learn_fail = 1002,
        /**
         * 需要高阶技能书
         */
        skill_learn_need_book = 1003,
        /**
         * 激活重复类型技能
         */
        active_same_type_skill = 1004,
        /**
         * 物品移动成功
         */
        item_move_success = 1100,
        /**
         * 物品移动失败
         */
        item_move_faild = 1101,
        /**
         * 该物品不可丢弃
         */
        item_cannot_del = 1102,
        /**
         * 物品删除成功
         */
        item_del_success = 1103,
        /**
         * 物品删除失败
         */
        item_del_faild = 1104,
        /**
         * 物品添加成功
         */
        item_add_success = 1105,
        /**
         * 物品添加失败
         */
        item_add_faild = 1106,
        /**
         * 物品背包满
         */
        item_add_full_faild = 1107,
        /**
         * 任务添加道具背包已满失败
         */
        item_task_add_faild = 1108,
        /**
         * 物品拆分成功
         */
        item_split_success = 1110,
        /**
         * 物品拆分失败,背包已满。
         */
        item_split_full = 1111,
        /**
         * 物品不可拆分
         */
        item_split_cannot = 1112,
        /**
         * 拆分的物品不存在
         */
        item_split_no_exist = 1113,
        /**
         * 不是道具的拥有者
         */
        item_pick_up_not_owner = 1116,
        /**
         * 地图限制（只限盟重）
         */
        item_summon_boos_map_faild = 1120,
        /**
         * 物品回收当日达到最大值
         */
        item_recycle_max_value = 1121,
        /**
         * 物品回收人物等级限制
         */
        item_recycle_max_level = 1122,
        /**
         * 时装物品增加时间
         */
        item_fashion_add_time = 1123,
        /**
         * 时装物品无限时间
         */
        item_fashion_infinite_time = 1124,
        /**
         * 拾取物品不属于自己
         */
        pick_up_not_owner = 1125,
        /**
         * 加入帮会后才可使用
         */
        item_user_guild_gift = 1126,
        /**
         * PK值为0不可使用该物品
         */
        item_user_expiation = 1127,
        /**
         * 金币上限
         */
        gold_upper_limit_value = 1128,
        /**
         * 活动尚未开启
         */
        activity_not_open = 1130,
        /**
         * 活动已经关闭
         */
        activity_closed = 1131,
        /**
         * 兑换次数已满
         */
        exchange_full = 1140,
        /**
         * 目标玩家不存在
         */
        relation_target_error = 1401,
        /**
         * 目标玩家不在线
         */
        relation_target_offline = 1402,
        /**
         * 目标好友已满
         */
        relation_target_friend_full = 1403,
        /**
         * 发起者不在线在线
         */
        relation_initiator_offline = 1404,
        /**
         * 邀请已过期
         */
        relation_invite_out_time = 1405,
        /**
         * 发起者好友已满
         */
        relation_initiator_friend_full = 1406,
        /**
         * 发起者黑名单已满
         */
        relation_initiator_black_full = 1407,
        /**
         * 发起者仇人已满
         */
        relation_initiator_enemy_full = 1408,
        /**
         * 目标玩家拒绝添加好友
         */
        relation_tarage_FriendRefuse = 1409,
        /**
         * 玩家拒绝你的召唤
         */
        relation_call_friend_refuse = 1454,
        /**
         * 对方所在地图不允许传送
         */
        relation_call_friend_cant_transfer = 1455,
        /**
         * 对方等级不满足当前地图要求
         */
        relation_call_friend_level_not_enough = 1456,
        /**
         * 对方正在被其他玩家召唤
         */
        relation_call_friend_calling = 1457,
        /**
         * 传送相应超时
         */
        relation_call_friend_replay_time_out = 1458,
        /**
         * 仇人追踪对方不在线
         */
        relation_trace_offline = 1459,
        /**
         * 对方的好友功能未开启
         */
        relation_call_friend_err = 1460,
        /**
         * 好友正在摆摊
         */
        relation_call_friend_baitan = 1461,
        /**
         * 好友已死亡
         */
        relation_call_friend_die = 1462,
        /**
         * 帮会召唤令不足
         */
        guild_call_order_empty = 1463,
        /**
         * 留言次数已满
         */
        leaving_message_full = 1464,
        /**
         * 转生值不足
         */
        rebirth_val_limit = 1901,
        /**
         * 法力不足
         */
        not_enough_mp = 1902,
        /**
         * 怒气不足
         */
        not_enough_nuqi = 1903,
        /**
         * 好友功能未开启
         */
        friend_function_not_open = 1905,
        /**
         * 邮件打开成功
         */
        mail_open_success = 2201,
        /**
         * 邮件过期
         */
        mail_overtime = 2202,
        /**
         * 邮件删除成功
         */
        mail_delete_success = 2203,
        /**
         * 邮件领取成功
         */
        mail_receive_success = 2204,
        /**
         * 邮件已经领取
         */
        mail_already_received = 2205,
        /**
         * 货币已达上限
         */
        mail_money_too_much = 2207,
        /**
         * 队伍创建成功
         */
        team_create_success = 2400,
        /**
         * 队伍创建失败
         */
        team_create_faild = 2401,
        /**
         * 加入队伍成功
         */
        team_join_success = 2402,
        /**
         * 对方不在线失败
         */
        team_join_offline_faild = 2403,
        /**
         * 队长拒绝了你的请求
         */
        team_join_refuse_faild = 2404,
        /**
         * 邀请加入队伍成功
         */
        team_invite_success = 2405,
        /**
         * 邀请加入队伍失败
         */
        team_invite_offline_faild = 2406,
        /**
         * 邀请加入队伍拒绝
         */
        team_invite_refuse_faild = 2407,
        /**
         * 踢出玩家成功
         */
        team_kick_success = 2408,
        /**
         * 踢出玩家失败
         */
        team_kick_faild = 2409,
        /**
         * 任务队长成功
         */
        team_appoint_success = 2410,
        /**
         * 任命队长失败
         */
        team_appoint_faild = 2411,
        /**
         * 离开队伍成功
         */
        team_exit_success = 2412,
        /**
         * 离开队伍失败
         */
        team_exit_faild = 2413,
        /**
         * 队伍已满
         */
        team_full_faild = 2414,
        /**
         * 玩家不在线
         */
        team_online_faild = 2415,
        /**
         * 玩家已在队伍中
         */
        team_role_exist_faild = 2416,
        /**
         * 队伍已存在
         */
        team_exist_faild = 2417,
        /**
         * 队伍不存在
         */
        team_not_exist_faild = 2418,
        /**
         * 更换队长
         */
        team_change_leader = 2419,
        /**
         * 组队副本准备成功
         */
        team_clone_ready_success = 2420,
        /**
         * 组队副本准备失败
         */
        team_clone_ready_failed = 2421,
        /**
         * 组队副本开始成功
         */
        team_clone_start_success = 2422,
        /**
         * 组队副本开始失败
         */
        team_clone_start_failed = 2423,
        /**
         * 组队副本取消成功
         */
        team_clone_cancel_success = 2424,
        /**
         * 组队副本取消失败
         */
        team_clone_cancel_failed = 2425,
        /**
         * 操作超时
         */
        team_timed_out = 2426,
        /**
         * 人物等级不足
         */
        team_call_level = 2427,
        /**
         * 转生等级不足
         */
        team_call_re_level = 2428,
        /**
         * 地图无法传送
         */
        team_call_map = 2429,
        /**
         * 功能未开启
         */
        func_no_open = 2430,
        /**
         * 在多人副本中无法踢出玩家
         */
        on_team_not_kick = 2431,
        /**
         * 你拒绝默认加入队伍请求
         */
        refuse_into_my_team = 2432,
        /**
         * 渡劫答案错误
         */
        answer_err = 2433,
        /**
         * 玩家不在线
         */
        chat_offline = 2601,
        /**
         * 玩家等级不足
         */
        chat_func_open = 2602,
        /**
         * 聊天CD时间不足
         */
        chat_CD = 2603,
        /**
         * 个人BOSS进入成功
         */
        private_boss_enter_success = 2702,
        /**
         * 个人BOSS配置表错误
         */
        private_boss_config_error = 2703,
        /**
         * 个人BOSS等级不足
         */
        private_boss_level_limit = 2704,
        /**
         * 个人BOSS进入次数限制
         */
        private_boss_enter_count_limit = 2705,
        /**
         * 个人BOSS消耗道具个数不足
         */
        private_boss_item_count_limit = 2706,
        /**
         * 个人BOSS战力不足
         */
        private_boss_power_limit = 2707,
        /**
         * 寻宝元宝不足
         */
        mine_vip_point_faild = 2708,
        /**
         * 宝藏仓库格子不足
         */
        mine_grid_full_faild = 2709,
        /**
         * 背包空间不足
         */
        mine_bag_faild = 2710,
        /**
         * 个人boss-请先通关该BOSS的普通难度
         */
        private_boss_not_pass_stage = 2711,
        /**
         * 无效邀请码
         */
        invalid_authcode = 2810,
        /**
         * 无法获取邀请码
         */
        invite_code_cant_get = 2811,
        /**
         * 申请交易成功
         */
        trading_apply_success = 3901,
        /**
         * 申请交易失败
         */
        trading_apply_faild = 3902,
        /**
         * 申请交易失败，自己的等级60级
         */
        trading_apply_oneself_level_faild = 3903,
        /**
         * 申请交易失败，对方的等级60级
         */
        trading_apply_others_level_faild = 3904,
        /**
         * 申请购买失败，自己的等级60级
         */
        trading_apply_oneself_busy_faild = 3905,
        /**
         * 申请购买失败，对方的等级60级
         */
        trading_apply_others_busy_faild = 3906,
        /**
         * 申请交易失败，大于交易距离
         */
        trading_apply_distance_faild = 3907,
        /**
         * 申请交易失败，玩家不在线
         */
        trading_apply_offline_faild = 3908,
        /**
         * 玩家同意交易请求
         */
        trading_agree = 3909,
        /**
         * 玩家拒绝交易请求
         */
        trading_cancel = 3910,
        /**
         * 交易进行中
         */
        trading_underway = 3911,
        /**
         * 交易已锁定
         */
        trading_lock = 3912,
        /**
         * 交易成功
         */
        trading_success = 3913,
        /**
         * 添加物品成功
         */
        trading_add_item_success = 3914,
        /**
         * 添加物品失败
         */
        trading_add_item_faild = 3915,
        /**
         * 移除物品成功
         */
        trading_del_item_success = 3916,
        /**
         * 移除物品失败
         */
        trading_del_item_faild = 3917,
        /**
         * 添加货币成功
         */
        trading_currency_success = 3918,
        /**
         * 添加货币失败
         */
        trading_currency_faild = 3919,
        /**
         * 交易失败背包没有空间
         */
        trading_bag_full_faild = 3920,
        /**
         * 物品不可以被交易
         */
        trading_cannot = 3921,
        /**
         * 金币不足
         */
        trading_gold_lack_faild = 3922,
        /**
         * 元宝不足
         */
        trading_vippoint_lack_faild = 3923,
        /**
         * 交易失败
         */
        trading_faild = 3924,
        /**
         * 增加交易进行中状态
         */
        trading_lock_success = 3925,
        /**
         * 自己货币溢出
         */
        trading_oneself_money_faild = 3926,
        /**
         * 其他人货币溢出
         */
        trading_other_money_faild = 3927,
        /**
         * 兑换码无效
         */
        key_faild = 4201,
        /**
         * 帮会创建成功
         */
        guild_create_success = 4300,
        /**
         * 帮会创建失败
         */
        guild_create_faild = 4301,
        /**
         * 请求者取消了申请
         */
        guild_apply_undo = 4302,
        /**
         * 帮会成员大于1不可解散
         */
        guild_dismiss_member_faild = 4303,
        /**
         * 玩家存在帮会
         */
        guild_role_existing = 4304,
        /**
         * 操作超时
         */
        guild_operation_timeout = 4305,
        /**
         * 玩家不在线
         */
        guild_role_offline = 4306,
        /**
         * VIP等级不足
         */
        guild_vip_level = 4307,
        /**
         * 帮会成员已满
         */
        guild_member_full = 4308,
        /**
         * 当前职位到达上限
         */
        guild_post_full = 4309,
        /**
         * 加入帮会CD中
         */
        guild_cooling = 4310,
        /**
         * 帮会邀请等级不足
         */
        guild_invite_level = 4311,
        /**
         * 帮会已发放红包
         */
        guild_red_exist = 4312,
        /**
         * 达到当日发起帮会战总数
         */
        guild_rival_number = 4313,
        /**
         * 对一个帮会已发起帮会战
         */
        guild_rival_begun = 4314,
        /**
         * 帮会不存在
         */
        guild_no_exist = 4315,
        /**
         * VIP等级不足1
         */
        guild_vip_level_1 = 4316,
        /**
         * VIP等级不足2
         */
        guild_vip_level_2 = 4317,
        /**
         * VIP等级不足3
         */
        guild_vip_level_3 = 4318,
        /**
         * 帮会红包达到上限
         */
        guild_red_overflow = 4319,
        /**
         * 红包个数低于下限
         */
        guild_red_count_min = 4320,
        /**
         * 红包金额小于下限
         */
        guild_red_gold_min = 4321,
        /**
         * 帮会红包已经领完
         */
        guild_red_empty = 4322,
        /**
         * 红包超时
         */
        guild_red_overtime = 4323,
        /**
         * 玩家不满足帮会要求
         */
        guild_unmet_limit = 4324,
        /**
         * 帮会建设捐献cd中
         */
        build_donate_cd = 4325,
        /**
         * 羞辱旗帜未开启
         */
        shame_stain_notopen = 4326,
        /**
         * 旗帜重复
         */
        shame_stain_repeat = 4327,
        /**
         * 帮会篝火已满级
         */
        guild_fire_lv_max = 4328,
        /**
         * 已助燃过
         */
        guild_fire_helped = 4329,
        /**
         * 羞辱血痕旗帜格式错误
         */
        shame_stain_wrong_format = 4330,
        /**
         * 活动开启时无法任命
         */
        active_open_cant_appoint = 4331,
        /**
         * 帮会仓库已满
         */
        guild_warehouse_full = 4332,
        /**
         * 帮会仓库取出限制
         */
        guild_warehouse_limit = 4333,
        /**
         * 帮会解散CD中
         */
        guild_dismiss_cd = 4334,
        /**
         * 邀请入帮拒绝
         */
        guild_invite_refuse = 4335,
        /**
         * 邀请入帮同意
         */
        guild_invite_agree = 4336,
        /**
         * 您的帮会没有参加攻城战
         */
        guild_not_join_gcz = 4337,
        /**
         * 只有帮主才可以领取火种
         */
        guild_only_leader_get = 4338,
        /**
         * 您还没有加入帮会
         */
        guild_not_join = 4339,
        /**
         * 帮会中没有这只boss
         */
        guild_has_no_boss = 4340,
        /**
         * 帮会此boss以死亡
         */
        guild_fack_boss_is_die = 4341,
        /**
         * 帮会攻击boss次数不足
         */
        guild_fack_boss_attack_count = 4342,
        /**
         * 帮会权限不够
         */
        guild_post_not_enough = 4343,
        /**
         * 帮会此boss不能复活
         */
        guild_post_can_not_resave = 4344,
        /**
         * 帮会中此boss未死亡
         */
        guild_post_boss_is_not_die = 4345,
        /**
         * 击杀完类型1才能击杀2
         */
        guild_fack_boss_kill_other = 4346,
        /**
         * 帮会权限不足
         */
        guild_post_enough = 4347,
        /**
         * 除魔任务购买次数已达上限
         */
        chu_mo_buy_count_limit = 4401,
        /**
         * 活动期间无法切换称号
         */
        title_activiting = 4402,
        /**
         * 天关购买次数已达上限
         */
        tian_guan_buy_count_limit = 4403,
        /**
         * 刷新镖车失败
         */
        yabiao_refresh_faild = 4501,
        /**
         * 特权配置错误
         */
        privilege_360_award_config_error = 4601,
        /**
         * 特权奖励错误
         */
        privilege_360_award_received = 4602,
        /**
         * 特权错误1
         */
        privilege_360_award_error_0 = 4603,
        /**
         * 特权错误2
         */
        privilege_360_award_error_1 = 4604,
        /**
         * 特权错误3
         */
        privilege_360_award_error_2 = 4605,
        /**
         * 特权错误4
         */
        privilege_360_award_error_3 = 4606,
        /**
         * 特权错误5
         */
        privilege_360_award_error_4 = 4607,
        /**
         * 特权错误6
         */
        privilege_360_award_error_5 = 4608,
        /**
         * 特权错误7
         */
        privilege_360_award_error_6 = 4609,
        /**
         * 特权错误8
         */
        privilege_360_award_error_7 = 4610,
        /**
         * 特权错误9
         */
        privilege_360_award_error_8 = 4611,
        /**
         * 360加速特权奖励配置错误
         */
        pf_360_accelerate_config_error = 4612,
        /**
         * 本日捐献次数已用尽
         */
        guild_dodonate_already_max = 4614,
        /**
         * 自己解除关系的cd未失效
         */
        st_own_cd_invalid = 4701,
        /**
         * 对方解除关系的cd未失效
         */
        st_target_cd_invalid = 4702,
        /**
         * 自己的徒弟是否已经满了
         */
        st_own_tudi_full = 4703,
        /**
         * 对方的徒弟是否已经满了
         */
        st_target_tudi_full = 4704,
        /**
         * 自己已经有师父了
         */
        st_own_master_full = 4705,
        /**
         * 对方已经有师父了
         */
        st_target_master_full = 4706,
        /**
         * 已发送目标师徒关系建立请求
         */
        st_own_send_requesting = 4707,
        /**
         * 已收到对方师徒关系建立请求
         */
        st_own_receive_requesting = 4708,
        /**
         * 对方已不在线
         */
        st_target_unline = 4709,
        /**
         * 自己与目标是已有建立过关系
         */
        st_have_relationship = 4710,
        /**
         * 改名卡道具不足
         */
        role_rename_item_fail = 4711,
        /**
         * 帮会守卫已完成
         */
        ward_finish = 4712,
        /**
         * 帮会boss已完成
         */
        guild_boss_finish = 4713,
        /**
         * 37玩vip礼包 配置不存在
         */
        pt_37wan_config_err = 4714,
        /**
         * 37玩vip礼包 vip等级不够
         */
        pt_37wan_level_err = 4715,
        /**
         * 37玩vip礼包 已经领取过礼包
         */
        pt_37wan_already_get = 4716,
        /**
         * 顺网vip配置错误
         */
        pt_shunwang_vip_config_err = 4717,
        /**
         * 顺网vip等级不够
         */
        pt_shunwang_vip_level_err = 4718,
        /**
         * 顺网已经领取过礼包
         */
        pt_shunwang_vip_already_get = 4719,
        /**
         * 转盘抽奖次数不足
         */
        zp_lottery_count_lack = 4720,
        /**
         * 通天塔开启时间未到
         */
        tong_tian_tower_time_error = 4721,
        /**
         * 经验不足
         */
        neigong_uplv_exp_error = 4722,
        /**
         * 转生兑换修为值次数到达上限
         */
        rebirth_cultivation_num_error = 4723,
        /**
         * 内功等级满级
         */
        neigong_lvmax = 4724,
        /**
         * 翅膀满级
         */
        wing_upgrade_req_Maxed = 4725,
        /**
         * 元宝不足
         */
        wing_upgrade_req_NotMoney = 4726,
        /**
         * 帮会重名
         */
        guild_create_rename = 4728,
        /**
         * 未开启
         */
        ronglu_not_open = 4802,
        /**
         * 灵气不够
         */
        ronglu_not_enough = 4803,
        /**
         * 时间未到
         */
        ronglu_on_time = 4805,
        /**
         * 拍卖行商品已出售或下架
         */
        auction_non_existent = 4901,
        /**
         * 拍卖行商品价格发生变化
         */
        auction_price_change = 4902,
        /**
         * 拍卖行上架金币不足
         */
        auction_gold_empty = 4903,
        /**
         * 拍卖行元宝不足
         */
        auction_money_empty = 4904,
        /**
         * 拍卖行个人货架达到上限
         */
        auction_count_full = 4905,
        /**
         * 日常活跃值不够
         */
        active_value_no_more = 5000,
        /**
         * 已领取
         */
        active_award_receive = 5001,
        /**
         * 周活跃不够
         */
        active_award_no_week_value = 5004,
        /**
         * 红名不可选
         */
        active_red_name = 5005,
        /**
         * 等待领取
         */
        active_get_award = 5006,
        /**
         * 正在计时
         */
        active_on_time = 5007,
        /**
         * 可以解锁计时
         */
        active_open = 5008,
        /**
         * 物品使用次数达到上限
         */
        item_use_limit = 5009,
        /**
         * 全民红包余量不足
         */
        citizen_red_empty = 5010,
        /**
         * 时间未到
         */
        citizen_red_cdtime = 5011,
        /**
         * 全民红包不是VIP
         */
        citizen_red_no_vip = 5012,
        /**
         * 全民红包已领取
         */
        citizen_red_has_get = 5013,
        /**
         * 全民红包领取次数达到上限
         */
        citizen_red_count = 5014,
        /**
         * 在组队副本中不能邀请
         */
        team_clone_err = 5015,
        /**
         * 该队伍已经处于副本中
         */
        team_clone_at_trans = 5016,
        /**
         * 经验神炉修炼次数已满
         */
        exp_xiuwei_shenlu_max_count_exp = 5017,
        /**
         * 修为神炉修炼次数已满
         */
        exp_xiuwei_shenlu_max_count_xiuwei = 5018,
        /**
         * 在组队副本中不能移动
         */
        team_clone_move_map_err = 5019,
        /**
         * 在组队副本匹配中不能移动
         */
        team_clone_pair_move_err = 5020,
        /**
         * 相同宝石不能镶嵌同一个部位
         */
        move_gem_pos_identical = 5021,
        /**
         * 物品回收成功并经验上线
         */
        item_recycle_exp_upperlimit = 5022,
        /**
         * 交易对方物品背包满
         */
        trade_item_add_full_faild = 5023,
        /**
         * 已在活动地图中
         */
        active_already_in_map = 5024,
        /**
         * 沙城申请失效
         */
        sha_cheng_apply_miss = 5025,
        /**
         * 绑元不足
         */
        money_bind_err = 5026,
        /**
         * 代练任务不可进行代练
         */
        Dai_lian_err = 5027,
        /**
         * 登陆注册账号
         */
        login_register = 5028,
        /**
         * 沙城不可报名
         */
        sha_cheng_cant_apply = 5029,
        /**
         * 开始代练
         */
        dai_lian_start = 5030,
        /**
         * 一键完成代练
         */
        dai_lian_complete = 5031,
        /**
         * 被封号
         */
        login_seal = 5032,
        /**
         * 组队副本内不能同意进入队伍
         */
        team_clone_jon_team_err = 5033,
        /**
         * 精炼装备不可回收
         */
        item_recycle_jinglian = 5034,
        /**
         * 强化等级上限不可回收
         */
        item_recycle_qianghua = 5035,
        /**
         * 今日已领取
         */
        today_already_use_the_item = 5036,
        /**
         * 神炉未激活
         */
        smelter_not_activate = 5037,
        /**
         * 卧龙大殿锁门无法进入其他房间
         */
        wo_long_da_dian_lock = 5142,
        /**
         * 卧龙联盟每日申请限制
         */
        wlsz_alliance_limit = 5143,
        /**
         * 卧龙联盟申请目标未在线
         */
        wlsz_alliance_target_offline = 5144,
        /**
         * 目标跨服中
         */
        target_crossing = 5145,
        /**
         * 卧龙联盟申请已失效
         */
        wlsz_alliance_lose = 5146,
        /**
         *
         */
        active_not_open = 5147,
        /**
         *
         */
        match_invitation_fail = 5148,
        /**
         * 匹配邀请没有队伍
         */
        match_invitation_no_team = 5149,
        /**
         * A邀B 匹配B下线 toA
         */
        match_invitation_role_outLine = 5150,
        /**
         * A邀B 匹配B再队伍 toA
         */
        match_invitation_target_in_team = 5151,
        /**
         * 玩家拒绝邀请
         */
        match_incitation_refuse_invite = 5152,
        /**
         * A邀B 请求组队段位不符合 ToA
         */
        match_invitation_patagraph_discrepancy = 5153,
        /**
         * 对方段位过高
         */
        match_invitation_patagraph_max = 5154,
        /**
         * 对方段位过低
         */
        match_invitation_patagraph_min = 5155,
        /**
         * 您正在匹配中，无法申请组队
         */
        team_clone_pairing_join_err = 5170,
        /**
         * 该玩家正在匹配中，无法邀请
         */
        team_clone_pairing_yaoqing_err = 5171,
        /**
         * 提示邀请人，被邀请人在匹配中，无法邀请
         */
        team_clone_pairing_yaoqing_err1 = 5172,
        /**
         * 您当前处于匹配状态，无法申请
         */
        team_clone_pairing_join_err1 = 5173,
        /**
         * 跨服地图无法使用此功能
         */
        transfer_cross_map_to_normal_map_err = 5174,
        /**
         * 跨服区域未开启，请稍后再试
         */
        cross_area_not_open = 5175,
        /**
         * 开局1分钟禁止投降
         */
        match_invitation_touxiang_early = 5176,
        /**
         * 投降CD时间未到
         */
        match_invitation_touxiang_cd = 5177,
        /**
         * 槽位强化货币不足
         */
        equip_streng_currency = 6001,
        /**
         * 槽位强化满级
         */
        equip_streng_full_level = 6002,
        /**
         * 槽位强化材料不足
         */
        equip_streng_material = 6003,
        /**
         * 槽位强化暴击
         */
        equip_streng_crit = 6004,
        /**
         * 技能等级不足
         */
        skill_Lv_dissatisfy = 6005,
        /**
         * 英雄已经选择过
         */
        hero_already_select = 6006,
        /**
         * 英雄锁定失败
         */
        hero_lock_err = 6007,
        /**
         * 英雄功能未开启
         */
        hero_func_not_open = 6008,
        /**
         * 体力不足
         */
        physical_power_not_enough = 7001,
        /**
         * 九龙山前置关卡未通过
         */
        jiulong_prev_lv_not_pass = 7002,
        /**
         * 不在九龙山副本中
         */
        jiulong_not_in_battle = 7003,
        /**
         * 请求关卡不存在
         */
        jiulong_no_such_level = 7004,
        /**
         * 九龙山副本超时
         */
        jiulong_time_out = 7005,
        /**
         * 已经购买此预购
         */
        preorder_has_bought = 7006,
        /**
         * 元宝不足
         */
        preorder_money_leak = 7007,
        /**
         * 预购过期
         */
        preorder_timeout = 7008,
        /**
         * 没有购买此预购
         */
        preorder_not_buy = 7009,
        /**
         * 今日已领奖
         */
        preorder_got = 7010,
        /**
         * 预购功能未开启
         */
        preorder_func_open = 7011,
        /**
         * 没到领奖时间
         */
        preorder_too_early = 7012,
        /**
         * 好友空间没留信息
         */
        friendroom_not_info = 8001,
        /**
         * 好友空间删除无信息
         */
        friendroom_del_not_info = 8002,
        /**
         * 好友空间已经点赞
         */
        friendroom_already_praise = 8003,
        /**
         * 好友空间给自己点赞
         */
        friendroom_oneself_message = 8004,
        /**
         * 披风等级不足
         */
        cloak_level_leak = 8005,
        /**
         * 装备祝福最高级
         */
        equip_benison_maxed = 8006,
        /**
         * 无效得物品类型
         */
        invalid_item_type = 8007,
        /**
         * 无效得龙魂精华类型
         */
        invalid_essence_type = 8008,
        /**
         * 无效得龙魂等级属性
         */
        invalid_dragon_soul_lv_attr = 8009,
        /**
         * 无效得龙魂等级
         */
        invalid_dragon_soul_lv = 8010,
        /**
         * 需要得龙魂精华不足
         */
        need_essence_insufficient = 8011,
        /**
         * 书魂任务已经存在
         */
        book_soul_exist = 8013,
        /**
         * 书魂任务次数已经达到上限
         */
        book_soul_mission_count_max = 8014,
        /**
         * 有七日特权
         */
        has_seven_days_privilege = 8015,
        /**
         * 没有七日特权
         */
        no_seven_days_privilege = 8016,
        /**
         * 七日特权超时
         */
        seven_days_privilege_timeout = 8017,
        /**
         * 一天只能领取一次奖励
         */
        once_day_get_once_award = 8018,
        /**
         * 没有这个任务ID
         */
        no_mission_id = 8019,
        /**
         * 任务没有完成
         */
        mission_no_complete = 8020,
        /**
         * 没有进行中的任务
         */
        no_progress_mission = 8021,
        /**
         * 没有接取任务
         */
        no_accept_mission = 8022,
        /**
         * 没有可以领取得任务奖励
         */
        no_can_get_mission_award = 8023,
        /**
         * 盟重购买次数已达上限
         */
        meng_zhong_buy_count_limit = 8024,
        /**
         * 英雄试炼购买次数已达到上限
         */
        hero_trial_buy_count_limit = 8025,
        /**
         * 英雄试炼召唤次数不足
         */
        hero_trial_summon_count_leak = 8026,
        /**
         * 没有找打炼魂碎片位置ID
         */
        not_found_lianhun_Piece_Position_id = 8027,
        /**
         * 免费恢复hp冷却中
         */
        recover_hp_cd = 8028,
        /**
         * 角色HP已经满了
         */
        role_hp_full = 8029,
        /**
         * 添加元宝超出上限
         */
        add_money_beyond_max_num = 8030,
        /**
         * 勇士回归没有开启
         */
        warriors_return_not_open = 8031,
        /**
         * 勇士回归开启天数不满足
         */
        warriors_return_open_days_dissatisfy = 8032,
        /**
         * 勇士回归天数登陆奖励已经领取
         */
        warriors_return_login_award_already_get = 8033,
        /**
         * 勇士回归累积充值奖励已经领取
         */
        warriors_return_grand_total_techarge_award_already_get = 8034,
        /**
         * 删除留言成功
         */
        delete_leaving_message = 8041,
        /**
         * vip玩家才能留言
         */
        not_vip_way_leaving_message = 8042,
        /**
         * 已达留言次数上限
         */
        leaving_message_arrive_limit = 8043,
        /**
         * 已向该玩家发送过好友请求
         */
        already_send_out_request = 8045,
        /**
         * 个人副本无法传送
         */
        personal_copy_unable_track = 8046,
        /**
         * 此活动禁止切换攻击模式
         */
        this_activity_prohibit_switching_state = 8100,
        /**
         * 火龙任务次数满了
         */
        fiery_dragon_count_full = 8101,
        /**
         * 任务进行中
         */
        mission_progress = 8102,
        /**
         * 无效的进入ID
         */
        invalid_enter_id = 8103,
        /**
         * 没有刷新
         */
        no_refresh = 8104,
        /**
         * 进入次数不足
         */
        enter_count_not_enough = 8105,
        /**
         * 已领取过此宝箱
         */
        already_received_this_box = 8200,
        /**
         * 全民屠魔购买次数上限
         */
        quan_min_tu_mo_buy_count_limit = 8201,
        /**
         * 货币不足
         */
        currency_not_enough = 8202,
        /**
         * 神武数据错误
         */
        shenwu_data_err = 8300,
        /**
         * 已有超过bossHP的最大技能
         */
        shenwu_has_max_skill = 8301,
        /**
         * 神武值达到每日上限
         */
        shenwu_daily_max = 8302,
        /**
         * 神武试炼技能错误
         */
        shenwu_skill_not_found = 8303,
        /**
         * 积分不足
         */
        integral_insufficient = 8304,
        /**
         * 对方功能未开启
         */
        target_func_no_open = 8305,
        /**
         * 该矿石无法被更多人开采
         */
        collect_count_full = 8306,
        /**
         * 祈福次数不足
         */
        qi_fu_not_enough_count = 8307,
        /**
         * 材料副本扫荡完成为领取
         */
        cai_liao_sweep_complete = 8308,
        /**
         * 已领取过神武任务
         */
        have_receive_shenwu_mission = 8309,
        /**
         * 登录失败
         */
        login_err = 10001,
        /**
         * 外网验证不正确不能通过
         */
        outer_net_verification_unqualified = 10002,
        /**
         * 验证封号信息
         */
        verification_blockade_account = 10003,
        /**
         * 没有明确的方向
         */
        not_explicit_direction = 10004,
        /**
         * 请领取当前奖励
         */
        please_receive_the_current_award = 10005,
        /**
         * 九龙山体力满了
         */
        jiu_long_power_full = 10006,
        /**
         * 不在领取时间
         */
        timeout = 10007,
        /**
         * 已经领取得体力
         */
        have_to_receive_power = 10008,
        /**
         * 预购已经购买
         */
        preorder_buy = 10009,
        /**
         * 选择祈愿道具失败
         */
        qiyuan_select_item_fail = 10100,
        /**
         * 祈愿次数不足
         */
        praying_frequency_insufficient = 10101,
        /**
         * 开服时间超时
         */
        open_service_timeout = 10102,
        /**
         * 今日购买次数达到上限
         */
        today_buy_count_limit = 10103,
        /**
         * 终生购买次数达到上限
         */
        lifetime_buy_count_limit = 10104,
        /**
         * 今日使用次数已经满了
         */
        today_use_count_full = 10105,
        /**
         * 修改角色属性失败
         */
        modify_role_attr_fail = 10106,
        /**
         * 修改英雄属性失败
         */
        modify_hero_attr_fail = 10107,
        /**
         * 开服天数不足
         */
        open_service_insufficient = 10108,
        /**
         * 采集中
         */
        in_collect = 10109,
        /**
         * 龙魂洗练锁定数量过大
         */
        dragon_soul_lock_count_max = 10110,
        /**
         * 没有洗练
         */
        not_baptize = 10111,
        /**
         * 铸灵满级
         */
        zhu_ling_lvmax = 10112,
        /**
         * 玩家位置不在掉落位置
         */
        role_point_not_in_drop_out_point = 10113,
        /**
         * 沉迷状态不可以拾取
         */
        wallow_state_not_pickup = 10114,
        /**
         * 礼券上限
         */
        coupon_upper_limit_value = 10115,
        /**
         * 没有传送石
         */
        no_transfer_stone = 10116,
        /**
         * 有镖车
         */
        have_biao_che = 10117,
        /**
         * 押镖次数到达上限
         */
        ya_biao_count_limit = 10118,
        /**
         * 镖车已经等级达到上限
         */
        biao_che_level_max = 10119,
        /**
         * 镖车刷新次数上限
         */
        biao_che_refres_count_limit = 10120,
        /**
         * 没有帮会
         */
        not_guild = 10121,
        /**
         * 不在相同帮会
         */
        not_int_same_guild = 10122,
        /**
         * 不能进入地图
         */
        cannot_enter_map = 10123,
        /**
         * 刷新镖车已经是最大等级
         */
        biao_che_level_maxr = 10124,
        /**
         * 不是队长
         */
        not_leader = 10125,
        /**
         * 登陆天数不足
         */
        login_days_insufficient = 10126,
        /**
         * 登陆奖励已经领取
         */
        login_award_already_get = 10127,
        /**
         * 组队副本不能踢人
         */
        team_transcript_not_kick = 10128,
        /**
         * 不在队伍审核列表
         */
        not_in_audit_list = 10129,
        /**
         * 在组队副本匹配
         */
        in_team_transcirpt_match = 10130,
        /**
         * 披风没有激活
         */
        clock_no_activate = 10131,
        /**
         * 披风等级溢出
         */
        clock_level_overflow = 10132,
        /**
         * 披风已经升级
         */
        clock_already_upGrade = 10133,
        /**
         * 不可以采集
         */
        cannot_collect = 10134,
        /**
         * 攻城战没有开启
         */
        storm_castle_not_open = 10135,
        /**
         * 已经是占领方
         */
        have_been_occupying = 10136,
        /**
         * 普通箱子已满
         */
        ordinary_box_full = 10137,
        /**
         * 没有帮会采集任务
         */
        no_guild_collecti_mission = 10138,
        /**
         * 没有烟火无法燃放
         */
        no_fireworks = 10139,
        /**
         * 战旗未占领不能复活
         */
        zhan_qi_no_hold_no_relive = 10140,
        /**
         * 有不可以攻击得状态
         */
        have_not_atk_state = 10141,
        /**
         * 技能释放类型是被动
         */
        skill_release_type_is_passive = 10142,
        /**
         * 角色已经死亡
         */
        role_is_dead = 10143,
        /**
         * 技能熟练度不足
         */
        skill_proficeiency_not_enough = 10144,
        /**
         * 技能id与表里面Id不一致
         */
        skillId_mismatching_table_skillId = 10145,
        /**
         * 职业不匹配
         */
        job_mismatching = 10146,
        /**
         * 不在攻击范围
         */
        not_in_attack_range = 10147,
        /**
         * 没有完成
         */
        uncomplete = 10148,
        /**
         * 英雄等级不足
         */
        hero_level_dissatisfy = 10149,
        /**
         * 英雄转生等级不足
         */
        hero_relevel_dissatisfy = 10150,
        /**
         * 英雄战斗力不足
         */
        hero_attack_dissatisfy = 10151,
        /**
         * 特权卡未激活无法挑战特权BOSS
         */
        private_boss_no_card = 10152,
        /**
         * 个人BOSS击杀次数已经达到上限
         */
        private_boss_kill_limit = 10153,
        /**
         * 个人BOSS尚未刷新
         */
        private_boss_not_refresh = 10154,
        /**
         * 角色满级了
         */
        role_level_full = 10155,
        /**
         * 物品被使用
         */
        item_lock = 10156,
        /**
         * 物品CD
         */
        item_cd = 10157,
        /**
         * 物品限时
         */
        item_limit_time = 10158,
        /**
         * 物品使用最小等级不满足
         */
        use_item_level_min_limit = 10159,
        /**
         * 物品使用最大等级限制
         */
        use_item_level_max_limit = 10160,
        /**
         * 物品限制使用
         */
        use_item_limit = 10161,
        /**
         * 地图限制使用物品
         */
        use_item_map_limit = 10162,
        /**
         * 物品使用类型与使用数量不匹配
         */
        use_item_type_not_match_count = 10163,
        /**
         * 物品使用次数限制
         */
        user_item_use_num_limit = 10164,
        /**
         * 神脉满级
         */
        god_pulse_level_full = 10165,
        /**
         * 神脉经验不足
         */
        god_pulse_val_insufficient = 10166,
        /**
         * 神元兑换次数不足
         */
        god_pulse_val_exchange_count_insufficient = 10167,
        /**
         * 神元购买兑换次数不足
         */
        god_pulse_val_buy_exchange_count_insufficient = 10168,
        /**
         * 神格满级
         */
        godhood_level_full = 10169,
        /**
         * 圣龙币兑换次数不足
         */
        saint_dragon_currency_exchange_count_insufficient = 10170,
        /**
         * 圣龙币满了
         */
        saint_dragon_currency_full = 10171,
        /**
         * 没有指定套装进入地图失败
         */
        enter_map_no_suit = 10172,
        /**
         * 炼神等级满
         */
        smlet_god_level_full = 10173,
        /**
         * 神格等级不足
         */
        not_enough_godhood_lv = 10174,
        /**
         * 神器无返利
         */
        artifact_no_rebate = 10175,
        /**
         * 神器返利已领取
         */
        artifact_already_rebate = 10176,
        /**
         * 神器表配置错误
         */
        artifact_data_err = 10177,
        /**
         * 神器已激活
         */
        artifact_already_active = 10178,
        /**
         * 未到领取返利时间
         */
        artifact_time_err = 10179,
        /**
         * 无效得组ID
         */
        invalid_team_id = 10180,
        /**
         * 装备捐献任务次数已经达到上限
         */
        equip_recycl_mission_count_max = 10181,
        /**
         * 获取奖励时间不到
         */
        get_award_not_time = 10182,
        /**
         * 首充没有开启
         */
        first_recharge_not_open = 10183,
        /**
         * 先完成一次才能扫荡
         */
        lie_bian_zhi_zai_sao_dang_no_sweep = 10184,
        /**
         * 头像或头像框激活消费类型于激活需要类型不匹配
         */
        head_activate_type_mismatching = 10185,
        /**
         * 荣誉商店周购买次数用完
         */
        honor_mall_weekly_buy_count_full = 10186,
        /**
         * 荣誉商店每天购买次数用完
         */
        honor_mall_day_buy_count_full = 10187,
        /**
         * 跨服禁止
         */
        cross_service_forbid = 10188,
        /**
         * 无效的强化槽位
         */
        invalid_intensify_pos = 10189,
        /**
         * 装备没有穿戴
         */
        not_found_dress_equip = 10190,
        /**
         * 圣印装备满级了
         */
        seals_intensify_level_full = 10191,
        /**
         * 神纹满级了
         */
        shen_wen_level_full = 10192,
        /**
         * 无法锁定至少保留一条洗练属性
         */
        cannot_lock = 10193,
        /**
         * 无效的神纹属性表Id
         */
        invalid_shen_wen_attr_table_id = 10194,
        /**
         * 领取天数未达到
         */
        condumption_retun_limit_day = 10195,
        /**
         * 技能CD没有到
         */
        skill_cd_err = 10196,
        /**
         * 镖车被打爆
         */
        dart_car_explosion = 10197,
        /**
         * 资源找回次数不足
         */
        resource_back_insufficient = 10198,
        /**
         * 囚车提交成功
         */
        dart_car_submitting_ok = 10199,
        /**
         * 囚车提交次数满了
         */
        dart_car_submitting_count_full = 10200,
        /**
         * 魔灵值不足
         */
        mo_ling_val_not_enough = 10201,
        /**
         * 前置等级不足
         */
        before_level_not_enough = 10202,
        /**
         * 释放技能距离检测失败
         */
        user_skill_distance_check_fail = 10203,
        /**
         * 蓝不足
         */
        mp_not_enough = 10204,
        /**
         * 技能没有学习
         */
        skill_did_not_study = 10205,
        /**
         * 无效得魂牌槽位
         */
        invalid_hun_pai_solt = 10206,
        /**
         * 魂牌槽位没有物品
         */
        hun_pai_solt_item_null = 10207,
        /**
         * 魂牌等级满了
         */
        hun_pai_level_full = 10208,
        /**
         * 新转生等级满级了
         */
        new_leve_r_full = 10209,
        /**
         * 没有战宠
         */
        no_mars_pet = 10210,
        /**
         * 没有需要特权卡Id
         */
        no_privilege_id = 10211,
        /**
         * 无效的物品使用类型
         */
        invalid_item_function_type = 10212,
        /**
         * 修改战宠属性失败
         */
        modify_mars_pet_attr_fail = 10213,
        /**
         * 条件不满足
         */
        condition_no_meet = 10214,
        /**
         * 任务已提交
         */
        mission_has_submited = 10215,
        /**
         * 不能瞬移
         */
        can_not_shun_yi = 10216,
        /**
         * 龙魂等级已达上限
         */
        dragon_spirit_lv_max = 10217,
        /**
         * 龙魂突破已达上限
         */
        dragon_spirit_breach_max = 10218,
        /**
         * 龙脉槽位等级已达上限
         */
        dragon_vein_lv_max = 10219,
        /**
         * 龙魂突破等级不足
         */
        dragon_spirit_breach_not_enugh = 10220,
        /**
         * 龙魂等级不足
         */
        dragon_spirit_lv_not_enough = 10221,
        /**
         * 转盘抽取次数不足
         */
        turntable_num_lack = 10222,
        /**
         * 转盘抽取费用不足
         */
        turntable_cost_lack = 10223,
        /**
         * 转盘奖品已全部领取
         */
        turntable_all_get = 10224,
        /**
         * 宝箱没有到采集时间
         */
        collect_box_timelimit = 10225,
        /**
         * 无效得物品槽位
         */
        invalid_item_position = 10226,
        /**
         * 物品类型2不是超级洪福宝箱
         */
        item_type2_not_super_collect_box = 10227,
        /**
         * 洪福宝箱已经打开
         */
        super_collect_box_open = 10228,
        /**
         * 洪福宝箱没有打开
         */
        super_collect_box_not_open = 10229,
        /**
         * 无效得祭拜类型
         */
        dragon_god_invalid_worship_type = 10230,
        /**
         * 祭拜次数用完
         */
        dragon_god_worship_count_limit = 10231,
        /**
         * 没有祭拜
         */
        dragon_god_no_worship = 10232,
        /**
         * 已经领取祭拜奖励
         */
        dragon_god_get_award_error = 10233,
        /**
         * 点赞成功
         */
        praise_ok = 10234,
        /**
         * 四象祭台没有历史波数
         */
        sxjt_batch_num_not_enough = 10235,
        /**
         * 今日进入四象祭台次数已用尽
         */
        sxjt_enter_num_not_enough = 10237,
        /**
         * 领取祈愿道具失败
         */
        qiyuan_get_award_fail = 10238,
        /**
         * 祈愿时间未到
         */
        qiyuan_time_error = 10239,
        /**
         * 圣域龙灵今日时长已用完
         */
        saint_dragon_spirit_timeout = 10240,
        /**
         * 突破等级不足无法进入
         */
        dragon_breach_lv_not_enough = 10250,
        /**
         * 进入游戏失败，请和GM联系
         */
        enter_game_failed = 10251,
        /**
         * 逻辑服失去连接 跨服玩家退出
         */
        cross_connect_logic_server_failed = 10252,
        /**
         * 跨服玩家退出
         */
        cross_role_exit = 10253,
        /**
         * 未找到网络会话对应的用户, 较严重错误
         */
        not_found_user_by_net_session = 10254,
        /**
         * 用户id过长
         */
        account_id_length_too_long = 10255,
        /**
         * 该账号已登录，请不要重复登录
         */
        account_relogin = 10256,
        /**
         * 抛出异常
         */
        exception_throw = 10257,
        /**
         * 签名验证错误
         */
        sign_verify_err = 10258,
        /**
         * 不在白名单不允许登录
         */
        not_in_the_white_list = 10259,
        /**
         * 登陆超时
         */
        login_timeout = 10260,
        /**
         * 有用户试图用该账号登录，请重试
         */
        other_user_try_to_login_account = 10261,
        /**
         * 网关强制退出
         */
        gate_force_exit = 10262,
        /**
         * 正常退出
         */
        normal_exit = 10263,
        /**
         * 跨服活的动结束玩家退出
         */
        cross_activity_is_over = 10264,
        /**
         * 您因长时间无操作，已与服务器断开连接
         */
        connect_closed_by_no_operation_long_time = 10265,
        /**
         * 接收到空消息踢掉客户端
         */
        recieve_msg_is_null = 10266,
        /**
         * 没有找到协议Id(没有注册)
         */
        protocol_id_not_regist = 10267,
        /**
         * 用户主动关闭客户端
         */
        user_close_client = 10268,
        /**
         * 已经有角色在游戏中了
         */
        select_role_already_in_game = 10269,
        /**
         * 选择角色进入游戏的角色ID不匹配
         */
        select_role_id_is_invalid = 10270,
        /**
         * 创建角色失败
         */
        create_role_failed = 10271,
        /**
         * 你被GM踢了
         */
        kick_by_gm = 10272,
        /**
         * 你被封号了，请和GM联系
         */
        account_forbid = 10273,
        /**
         * 关服命令退出
         */
        close_server_command = 10274,
        /**
         * 逻辑异常导致关闭，请和GM联系
         */
        logic_exception = 10275,
        /**
         * 今日已签到
         */
        sign_day_today_signed = 10300,
        /**
         * 配表错误，没有找到今日的签到奖励配置
         */
        sign_day_sign_config_not_found = 10301,
        /**
         * 签到表配置错误，缺少中签类型
         */
        sign_day_lost_award_type = 10302,
        /**
         * 累计签到配表错误
         */
        sign_day_total_table_error = 10303,
        /**
         * 累计签到天数不足
         */
        sign_day_total_day_not_enough = 10304,
        /**
         * 已领取该累签奖励
         */
        sign_day_total_award_already_get = 10305,
        /**
         * 没有找到对应的在线奖励数据
         */
        award_hall_online_cfg_error = 10306,
        /**
         * 在线奖励时间还没有到
         */
        award_hall_online_time_error = 10307,
        /**
         * 配表错误
         */
        award_hall_table_error = 10308,
        /**
         * 资源找回次数错误
         */
        award_hall_back_count_error = 10309,
        /**
         * 资源找回消耗货币错误
         */
        award_hall_back_cost_type_error = 10310,
        /**
         * 没有找到对应的奖励信息
         */
        level_reach_award_id_err = 10311,
        /**
         * 该等级福利已领取
         */
        level_reach_award_already_get = 10312,
        /**
         * 角色等级不足，无法领取福利
         */
        level_reach_award_lv_low = 10313,
        /**
         * 没有找到发起攻击的对象
         */
        fight_atker_not_found = 10400,
        /**
         * 没有找到目标的对象
         */
        fight_defer_not_found = 10401,
        /**
         * 没有找到技能数据
         */
        fight_skill_info_not_found = 10402,
        /**
         * 攻击数值不能为0
         */
        fight_atk_val_is_zero = 10403,
        /**
         * 已经领取了这个Boss的奖励
         */
        boss_award_already_get_award = 10450,
        /**
         * boss悬赏配表错误，没有找到指定的奖励数据
         */
        boss_award_table_error = 10451,
        /**
         * boss悬赏配表错误，奖励数据数目不一致
         */
        boss_award_table_length_error = 10452,
        /**
         * 获取玩家组件数据失败
         */
        boss_seal_get_role_com_fail = 10470,
        /**
         * 没有找到指定的奖励数据
         */
        boss_seal_get_table_error = 10471,
        /**
         * 领取封印奖励失败
         */
        boss_seal_get_award_fail = 10472,
        /**
         * 领取积分奖励失败
         */
        boss_seal_get_score_fail = 10473,
        /**
         * 没有找到指定的特权卡信息
         */
        privilege_card_card_not_found = 10480,
        /**
         * 没有足够得物品回收积分
         */
        not_enough_recycle_score = 10481,
        /**
         * 元宝上限
         */
        money_upper_limit_value = 10482,
        /**
         * 角色等级超过地图等级上限
         */
        role_lv_exceed_map_max_lv = 10483,
        /**
         * 四象祭台扫荡vip不足
         */
        sxjt_quick_complete_vip_not_enough = 10484,
        /**
         * 商城没有相同物品Id
         */
        mall_not_same_item_id = 10485,
        /**
         * vip成就等级不足
         */
        not_enough_vip_achi_lv = 10486,
        /**
         * 福利地图今日时间用尽
         */
        not_enough_time = 10487,
        /**
         * 采集完成
         */
        collect_complate = 10488,
        /**
         * 投资礼包已激活
         */
        invest_gift_active_already = 10489,
        /**
         * 投资礼包未到领取时间
         */
        invest_gift_getaward_outtime = 10490,
        /**
         * 投资礼包奖励已领取
         */
        invest_gift_getaward_already = 10491,
        /**
         * 投资礼包未激活
         */
        invest_gift_no_active = 10492,
        /**
         * 奖励已领取
         */
        award_already_get = 10493,
        /**
         * 无奖励可领
         */
        no_award = 10494,
        /**
         * 符文等级满了
         */
        fu_wen_level_full = 10495,
        /**
         * 符文槽位没有物品
         */
        fu_wen_solt_item_null = 10496,
        /**
         * 无效得符文槽位
         */
        invalid_fu_wen_solt = 10497,
        /**
         * 同一位置不能镶嵌同类型符文
         */
        move_fuwen_pos_identical = 10498,
        /**
         * 没有可拾取的物品
         */
        no_can_pickup_item = 10499,
        /**
         * 合成材料不足
         */
        compound_item_material_not_enough = 10500,
        /**
         * 物品不存在
         */
        item_id_invalid = 10501,
        /**
         * 超爽大爆刷新幸运等级失败
         */
        refresh_failed = 10502,
        /**
         * 超爽大爆能量值满了
         */
        energy_full = 10503,
        /**
         * 已激活
         */
        already_activated = 10504,
        /**
         * 任务未开启
         */
        mission_no_open = 10505,
        /**
         * 任务已完成
         */
        mission_already_complete = 10506,
        /**
         * 购买次数达到上限
         */
        buy_times_upper_limit = 10507,
        /**
         * 战装升级操作最大槽位
         */
        war_equip_upgrade_sotl_max = 10508,
        /**
         * 战装位置等级满了
         */
        war_equip_level_full = 10509,
        /**
         * 战装升级顺序错误
         */
        war_equip_upgrade_order_err = 10510,
        /**
         * 战装总共等级不足
         */
        war_equip_all_level_insufficient = 10511,
        /**
         * 战印等级满级了
         */
        war_imprint_level_full = 10512,
        /**
         * 战印淬炼等级满级了
         */
        war_imprint_quenching_level_full = 10513,
        /**
         * 战魂等级满级了
         */
        war_soul_level_full = 10514,
        /**
         * 战魂经验不足
         */
        war_soul_exp_insufficient = 10515,
        /**
         * 全民饮酒兑换宝箱材料不足
         */
        quan_min_yin_jiu_change_box_not_enough = 10516,
        /**
         * 跨服物品不能使用
         */
        cross_item_can_not_use = 10517,
        /**
         * 该boss已经复活过一次
         */
        guild_fack_boss_has_resave = 10518,
        /**
         * 不是帮会boss攻击时间
         */
        guild_fack_boss_not_time = 10519,
        /**
         * 装备捐献积分不足
         */
        zhuang_bei_juan_xuan_ji_fen_bu_zu = 10520,
        /**
         * 爬塔层数不足
         */
        tower_not_enough = 10521,
        /**
         * 无法扫荡
         */
        sweep_ing = 10522,
        /**
         * 无可扫荡层数
         */
        sweep_not_enough = 10523,
        /**
         * 周末狂欢结束
         */
        weekender_close = 10524,
        /**
         * 奖励已经领取
         */
        weekender_award_already_get = 10525,
        /**
         * 周末狂欢活动没有完成
         */
        weekender_no_complete = 10526,
        /**
         * 周末狂欢积分不足
         */
        weekender_integral_lack = 10527,
        /**
         * 领奖次数不足
         */
        get_reward_time_not_enough = 10528,
        /**
         * 魂装强化槽位满级
         */
        hz_strengthen_max = 10529,
        /**
         * 魂装强化材料不足
         */
        hz_strengthen_material = 10530,
        /**
         * 魂装套装已激活
         */
        hz_suit_active = 10531,
        /**
         * 魂装套装满足条件槽位不足
         */
        hz_suit_uotfit = 10532,
        /**
         * 觉醒值暴击
         */
        role_awaken_crit = 10533,
        /**
         * 创建帮会再cd中
         */
        create_guild_cd = 10534,
        /**
         * 贵族等级3，角色等级300开启扫荡
         */
        sweep_rolelv_roleviplv_not_enough = 10535,
        /**
         * 达到当前等级上限，请提升转生等级
         */
        jing_yan_fu_ben_role_level_limit = 10536,
        /**
         * 经验副本挑战次数不足
         */
        jing_yan_fu_ben_enter_count_enough = 10537,
        /**
         * 经验副本挑战等级不足
         */
        jing_yan_fu_ben_level_enough = 10538,
        /**
         * 特戒抽奖所需钥匙不足
         */
        tejie_carnival_need_key_insufficient = 10600,
        /**
         * 本服不允许设置服务器阵营模式
         */
        local_sercer_not_allow_service_camp = 10601,
        /**
         * 附魔满级了
         */
        enchantement_full_level = 10602,
        /**
         * 附魔突破等级不足
         */
        enchantement_break_through_level_not_enough = 10603,
        /**
         * 附魔突破满级了
         */
        enchantement_break_hrough_full_level = 10604,
        /**
         * 全名寻宝次数错误
         */
        teasure_hunt_count_err = 10605,
        /**
         * 全民寻宝积分不足
         */
        teasure_hunt_integral_enough = 10606,
        /**
         * 全民寻宝次数上限
         */
        teasure_hunt_conversion_count_limit = 10607,
        /**
         * 该特戒礼包已经领取
         */
        ring_gift_has_get = 10608,
        /**
         * 附魔升级失败
         */
        enchantement_upgrade_failure = 10609,
        /**
         * 特戒背包已满
         */
        ring_gift_bag_full = 10701,
        /**
         * 神甲升级材料不匹配
         */
        upgrade_materials_not_match = 10801,
        /**
         * 翻牌次数不足，购买特权可增加次数
         */
        excract_card_count_not_enough = 10901,
        /**
         * 进入地图cd
         */
        enter_map_cd = 10902,
        /**
         * 附魔没有解锁
         */
        enchantement_lock = 10903,
        /**
         * 附魔已经解锁
         */
        enchantement_unlock = 10904,
        /**
         * 称号购买失败
         */
        title_activity_buy_faild = 10905,
        /**
         * 神炉升级材料不足
         */
        smelter_upgrade_materials_not_full = 10906,
        /**
         * 已经穿戴郭此类型装备
         */
        new_awaken_equip_has = 10907,
        /**
         * 每天仅可参与一次囚魔之路活动
         */
        qiu_mo_zhi_lu_only_enter_once = 10908,
        /**
         * 神甲满级
         */
        shen_jia_full_level = 10909,
        /**
         * 抽奖消耗幸运值不足
         */
        lucky_value_not_full = 10910,
        /**
         * 成就任务没有完成
         */
        normal_achievement_not_complete = 10911,
        /**
         * 槽位未开启
         */
        slot_not_open = 10912,
        /**
         * 战宠未激活
         */
        mars_not_active = 10913,
        /**
         * 帮会篝火领取次数不足
         */
        guild_gou_huo_get_award_not_count = 10914,
        /**
         * 猎魔等级不足无法进入
         */
        lie_mo_lv_not_enough = 10915,
        /**
         * 帮会个人捐献次数不足
         */
        guild_single_done_no_enuough = 10916,
        /**
         * 护盾等级已达上限
         */
        shield_lv_max = 10917,
        /**
         * 护盾精粹不足
         */
        shield_mar_not_enuough = 10918,
        /**
         * 护盾被动技能未到激活条件
         */
        shield_skill_not_active = 10919,
        /**
         * 战宠满级了
         */
        mars_level_full = 10920,
        /**
         * 跨服内不可进行该操作，请回本服尝试
         */
        vip_achi_cross_limit = 10930,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumMoveType {
        /**
         * 未知
         */
        unknown = 0,
        /**
         * 走
         */
        walk = 1,
        /**
         * 跑
         */
        run = 2,
        /**
         * 冲撞被动
         */
        be_crash = 3,
        /**
         * 冲撞主动
         */
        crash = 4,
        /**
         * 传送
         */
        transfer = 5,
        /**
         * 被击飞
         */
        be_fly = 6,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumMissionType {
        /**
         * 未知
         */
        none = 0,
        /**
         * 主线
         */
        trunk = 1,
        /**
         * 成长
         */
        cheng_zhang = 2,
        /**
         * 除魔
         */
        chu_mo = 3,
        /**
         * 材料
         */
        cai_liao = 4,
        /**
         * 挖矿
         */
        wa_kuang = 5,
        /**
         * 帮会
         */
        guild = 6,
        /**
         * 组队烧猪
         */
        zu_dui_shao_zhu = 7,
        /**
         * 卧龙伏魔
         */
        wo_long_fu_mo = 8,
        /**
         * 假任务
         */
        task_client = 9,
        /**
         * 神武
         */
        shen_wu = 10,
        /**
         * 探索
         */
        tan_suo = 11,
        /**
         * 引导
         */
        yin_dao = 13,
        /**
         * 书魂
         */
        book_soul = 14,
        /**
         * 盟重边防
         */
        border = 15,
        /**
         * 悬赏任务(原:火龙任务)
         */
        fiery_dragon = 16,
        /**
         * 传奇之路
         */
        chuan_qi_zhi_lu = 17,
        /**
         * Boss悬赏
         */
        boss_offer_reward = 18,
        /**
         * 跨服盟重边防
         */
        border_cross = 19,
        /**
         * 新支线1
         */
        branch_mission1 = 20,
        /**
         * 新支线2
         */
        branch_mission2 = 21,
        /**
         * vip共享任务
         */
        vip_share = 22,
        /**
         * vip嘉年华任务类型(用于区分赠送VIP成就表中的任务类型，不能加入到任务表中！)
         */
        vip_carnival_mission = 23,
        /**
         * 限时任务类型(限时任务在成就表中)
         */
        time_limit_mission = 24,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 成长任务显示类型
 */
declare module protocol {
    const enum EnumMissionShowType {
        /**
         * 常规任务
         */
        normal = 1,
        /**
         * 扩展任务类型2
         */
        type2 = 2,
        /**
         * 扩展任务类型3
         */
        type3 = 3,
        /**
         * 扩展任务类型4
         */
        type4 = 4,
        /**
         * 扩展任务类型5
         */
        type5 = 5,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 任务副本进入类型
 */
declare module protocol {
    const enum EnumMissionCloneEnterType {
        /**
         *
         */
        none = 0,
        /**
         * 帮会日常任务副本1
         */
        guild_richangernwu_1 = 80007,
        /**
         * 帮会日常任务副本2
         */
        guild_richangrenwu_2 = 80008,
        /**
         * 帮会日常任务副本3
         */
        guild_richangrenwu_3 = 80009,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumMineItemType {
        /**
         * 全部
         */
        all = 0,
        /**
         * 装备
         */
        equip = 1,
        /**
         * 其他
         */
        other = 2,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 地图分线状态
 */
declare module protocol {
    const enum EnumMapLineState {
        /**
         * 空闲
         */
        free = 0,
        /**
         * 拥挤
         */
        crowded = 1,
        /**
         * 爆满
         */
        full = 2,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumMapKind {
        /**
         * 材料副本盟重地牢
         */
        di_lao = 1,
        /**
         * 材料副本蛇谷探险
         */
        she_gu = 2,
        /**
         * 材料副本沃玛大厅
         */
        wo_ma = 3,
        /**
         * 材料副本石墓试炼
         */
        shi_mu = 4,
        /**
         * 材料副本祖玛神殿
         */
        zu_ma = 5,
        /**
         * 材料副本僵尸密洞
         */
        jiang_shi = 6,
        /**
         * 封魔岭
         */
        feng_mo_ling = 7,
        /**
         * 未知暗殿
         */
        wei_zhi_an_dian = 8,
        /**
         * 材料副本宝石宝藏
         */
        bao_shi = 9,
        /**
         * 材料副本皇陵甬道
         */
        huang_ling = 10,
        /**
         * 材料副本机关圣城
         */
        sheng_cheng = 11,
        /**
         * 个人boss副本
         */
        private_boss = 12,
        /**
         * 转生神殿
         */
        zhuan_sheng_shen_dian = 13,
        /**
         * 强化石
         */
        qiang_hua_shi = 14,
        /**
         * 裂变只在
         */
        lie_bian_zhi_zai = 15,
        /**
         * 玉佩副本
         */
        yu_pei = 16,
        /**
         * 神石副本
         */
        shen_shi = 17,
        /**
         * 龙珠副本
         */
        long_zhu = 18,
        /**
         * 如意副本
         */
        ru_yi = 19,
        /**
         * 迷惘密室
         */
        mi_wang_mi_shi = 20,
        /**
         * 猎魔幻狱
         */
        lie_mo_huan_yu = 21,
        /**
         * 宝石副本
         */
        new_bao_shi = 22,
        /**
         * 新强化石副本
         */
        new_qiang_hua_shi = 23,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumMapEnter {
        /**
         * 正常位置发生改变
         */
        normal = 1,
        /**
         * 移动
         */
        move = 2,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 商城类型
 */
declare module protocol {
    const enum EnumMallType {
        /**
         * 绑元商店
         */
        MoneyBind = 1,
        /**
         * 贵族礼包
         */
        Coupon = 2,
        /**
         * 金币商店
         */
        Gold = 3,
        /**
         * 积分商店
         */
        ItemScore = 4,
        /**
         * 积分限时商店
         */
        Limit = 5,
        /**
         * 转盘积分商店
         */
        TurntablePoint = 8,
        /**
         * 秘境商城
         */
        SecretMall = 9,
        /**
         * 玲珑商店
         */
        LLTower = 10,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 商城商品枚举定义
 */
declare module protocol {
    const enum EnumMallCommodityType {
        /**
         * 热销
         */
        SellHot = 1,
        /**
         * 变强
         */
        Strengthen = 2,
        /**
         * 消耗
         */
        Consume = 3,
        /**
         * 普通积分商城
         */
        ItemScore = 4,
        /**
         * 随机积分商城
         */
        ItemScoreLimit = 5,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumMainTaskEffectType {
        /**
         * 角色渐显
         */
        player_fade_in = 101,
        /**
         * 宠物渐显
         */
        pet_fade_in = 102,
        /**
         * 场景暂停
         */
        game_pause = 103,
        /**
         * Boss来袭
         */
        boss_warn = 201,
        /**
         * Boss公告
         */
        boss_notice = 202,
        /**
         * 假功能开启飞入
         */
        func_open_in = 203,
        /**
         * 假功能开启飞出
         */
        func_open_out = 204,
        /**
         * 欢迎界面
         */
        welcome_view = 205,
        /**
         * 神器假功能飞入
         */
        artifact_func_open_in = 206,
        /**
         * 玩家落地
         */
        player_spawn = 301,
        /**
         * Boss出生
         */
        boss_spawn = 302,
        /**
         * 宠物出生（守卫）
         */
        pet_spawn_guard = 303,
        /**
         * 宠物出生
         */
        pet_spawn = 304,
        /**
         * 采集特效
         */
        collect = 305,
        /**
         * 传送门出生
         */
        portal_spawn = 306,
        /**
         * 元宝洒落
         */
        money_spatter = 307,
        /**
         * Boss召唤
         */
        boss_summon = 308,
        /**
         * 开宝箱
         */
        open_box = 309,
        /**
         * 神器解封
         */
        artifact_open = 310,
        /**
         * 震屏
         */
        shake_screen = 401,
        /**
         * 镜头移动
         */
        move_camera = 402,
        /**
         * 宠物气泡
         */
        pet_bubble = 403,
        /**
         * Boss气泡
         */
        boss_bubble = 404,
        /**
         * 镜头移回
         */
        move_camera_back = 405,
        /**
         * 自动做主线
         */
        auto_do_task = 501,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 邮件类型
 */
declare module protocol {
    const enum EnumMailType {
        /**
         * 系統发送
         */
        system_mail = 0,
        /**
         * 玩家发送
         */
        mail_game_player = 1,
        /**
         * 好友空间留言信息
         */
        friendRoomMsg = 100,
        /**
         * 好友空间
         */
        friendRoomInfo = 101,
        /**
         * 好友空间留言删除
         */
        friendRoomMegDel = 102,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumMailState {
        /**
         * 未读取
         */
        normal = 0,
        /**
         * 已读取
         */
        opened = 1,
        /**
         * 已删除
         */
        deleted = 2,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumMailID {
        /**
         * 通知
         */
        system_notice = 1,
        /**
         * 您所拍卖的物品已下架
         */
        system_auction_off_item = 2,
        /**
         * 游戏忠告
         */
        system_advice = 3,
        /**
         * vip礼包
         */
        system_vip_gift = 4,
        /**
         * 限时奖励发放
         */
        system_reward_time_limit = 5,
        /**
         * 限时任务阶段奖励发放
         */
        system_reward_stage = 6,
        /**
         * 角色等级竞技
         */
        system_role_lv_sports = 7,
        /**
         * 英雄等级竞技
         */
        system_hero_lv_sports = 8,
        /**
         * 披风等级竞技
         */
        system_cloak_lv_sports = 9,
        /**
         * 龙珠等级竞技
         */
        system_longz_lv_sports = 10,
        /**
         * 如意等级竞技
         */
        system_ruyi_lv_sports = 11,
        /**
         * 步步为赢称号发放
         */
        system_puzzle_retreat = 12,
        /**
         * 兑换码兑换物品
         */
        system_cdk_exchange = 13,
        /**
         * 拍卖品已过期
         */
        system_auction_overdue = 14,
        /**
         * 拍卖品已卖出
         */
        system_auction_sellout = 15,
        /**
         * 拍卖到的物品
         */
        system_auction_purchase = 16,
        /**
         * 拍卖品已主动下架
         */
        system_auction_active_landing = 17,
        /**
         * 拍卖品已下架
         */
        system_auction_lower_frame = 18,
        /**
         * 恭喜答对世界题目获得奖励
         */
        system_world_answer = 19,
        /**
         * 英雄试炼奖励
         */
        system_hero_physical_exercise = 20,
        /**
         * 您获得答题物品奖励
         */
        system_answer = 21,
        /**
         * 签到奖励
         */
        system_reward_sign = 22,
        /**
         * 累计签到奖励
         */
        system_reward_accumulative_sign = 23,
        /**
         * 等级奖励
         */
        system_lv_reward = 24,
        /**
         * 神舰奖励
         */
        system_god_ship_award = 25,
        /**
         * 守卫盟重奖励
         */
        system_guard_award = 26,
        /**
         * 斩将夺旗奖励
         */
        system_cutdown_take_award = 27,
        /**
         * 斩将夺旗MVP奖励
         */
        system_cutdown_mvp_award = 28,
        /**
         * 通天塔补发奖励
         */
        system_pagoda_reissue_award = 29,
        /**
         * 竞技场排名奖励
         */
        system_arena_rank_award = 30,
        /**
         * 7天狂欢排名奖励
         */
        system_7day_carnival_rank_award = 31,
        /**
         * 充值返元宝邮件通知
         */
        system_recharge_rebate = 32,
        /**
         * 预购奖励
         */
        system_prepurchase_award = 33,
        /**
         * 马爷仙福永享寿比天齐！
         */
        madajie_test_mail = 34,
        /**
         * 时装到期通知，无法穿戴
         */
        system_latest_fashion_expir = 35,
        /**
         * 敏感字改名
         */
        system_sensitive_words = 36,
        /**
         * 这是您的副本奖励
         */
        system_counterpart_reward = 37,
        /**
         * 师徒关系解除
         */
        system_teacher_and_pupil_relieve = 38,
        /**
         * boss连杀排行奖励
         */
        system_boss_kill_reward = 39,
        /**
         * 开服活动-称号租赁
         */
        system_title_appellation = 40,
        /**
         * 个人副本扫荡
         */
        system_counterpart_mopping_up = 41,
        /**
         * 血饮送礼赖人邮件
         */
        system_blood_drink_mail = 42,
        /**
         * 开服活动-装备首穿
         */
        system_first_wear_bag = 43,
        /**
         * 这是您盟重边满10环所获得的奖励
         */
        system_tenring_task_reward = 44,
        /**
         * 这是您的环任务终极奖励，请查收
         */
        system_ring_task_ultimate_reward = 45,
        /**
         * 这是您的战铠活动返还奖励，请查收
         */
        system_war_armour_task = 46,
        /**
         * 您拥有的特权，使您成功抵扣一次被爆装备！
         */
        system_privilege_protection = 47,
        /**
         * 体验vip
         */
        system_experience_vip = 48,
        /**
         * 英雄历练奖励
         */
        system_hero_practice = 49,
        /**
         * 帝陵遗迹通关获得奖励
         */
        system_dilin_clearance = 50,
        /**
         * 帝陵遗迹未通关获得安慰奖
         */
        system_dilin_not_clearance = 51,
        /**
         * 恭喜您通关英雄密室，获得奖励
         */
        system_hero_adytum_reward = 52,
        /**
         * 很遗憾你没有在规定时间内通关，以下是你的安慰奖，下次再接再厉
         */
        system_hero_adytum_not_reward = 53,
        /**
         * 这是您在虚空幻境活动中获得的奖励，请查收
         */
        system_xukonghuanjing_reward = 54,
        /**
         * 勇士回归7天奖励
         */
        warriors_return_login_award = 55,
        /**
         * 全服首杀奖励
         */
        early_kill_boss_award = 56,
        /**
         * 帮会红包
         */
        gangs_red_envelopes = 57,
        /**
         * 加入帮会
         */
        gangs_join = 58,
        /**
         * 帮会结盟通知
         */
        gangs_alliance_notice = 59,
        /**
         * 帮会解盟通知
         */
        gangs_relieve_alliance_notice = 60,
        /**
         * 帮会任务奖励
         */
        gangs_task_reward = 61,
        /**
         * 旋云之巅活动排名奖励
         */
        activity_xuanyun_reward = 62,
        /**
         * vip体验
         */
        vip_experience = 63,
        /**
         * 装备获取攻略
         */
        equip_gain_strategy = 64,
        /**
         * 致所有亲爱的朋友
         */
        game_player_notifications = 65,
        /**
         * 快速升级攻略
         */
        fast_upgrade_strategy = 66,
        /**
         * 恭喜达到59级
         */
        congratulations_on_reaching_level_59 = 67,
        /**
         * 恭喜达到60级
         */
        congratulations_on_reaching_level_60 = 68,
        /**
         * 第一战士排行榜
         */
        first_warrior_rank = 69,
        /**
         * 第一法师排行榜
         */
        first_mage_rank = 70,
        /**
         * 第一道士排行榜
         */
        first_taoist_rank = 71,
        /**
         * 钳虫巢穴开启
         */
        pliers_nest_open = 72,
        /**
         * 统领圣装开启
         */
        command_holy_clothing_open = 73,
        /**
         * 玛雅神殿五层开启
         */
        maya_temple_five_layers_open = 74,
        /**
         * 深渊大厅开启
         */
        abyss_temple_open = 75,
        /**
         * BOSS之家3层开启
         */
        boos_home_three_layers_open = 76,
        /**
         * 捣毁镖车
         */
        smash_dart_car = 77,
        /**
         * 由于你30分钟内没有把镖车送到，镖车已消失
         */
        escort_dart_fail = 78,
        /**
         * 帮主每日奖励
         */
        gangs_master_everyday_reward = 79,
        /**
         * 副帮主每日奖励
         */
        gangs_vice_master_everyday_reward = 80,
        /**
         * 帮会押镖奖励
         */
        gangs_everyday_security_reward = 81,
        /**
         * 全民屠魔持有者
         */
        quan_min_tu_mo_award_owner = 82,
        /**
         * 全民屠魔持有者队伍
         */
        quan_min_tu_mo_award_owner_team = 83,
        /**
         * 全民屠魔参与者
         */
        quan_min_tu_mo_award_participant = 84,
        /**
         * 英雄披风
         */
        hero_cloak = 85,
        /**
         * 盟重边防额外奖励
         */
        meng_zhong_bian_fang_additional_award = 90,
        /**
         * 亲爱的玩家，您的称号已于今日到期
         */
        title_expire_notice = 92,
        /**
         * 九龙山通关奖励
         */
        jiu_long_clearance_reward = 93,
        /**
         * 死亡记录
         */
        death_record = 94,
        /**
         * 特权卡到期
         */
        card_over = 95,
        /**
         * 攻城战-霸主奖励
         */
        gcz_bazhu = 96,
        /**
         * 战功排行榜奖励
         */
        gcz_zhangong1 = 97,
        /**
         * 战功排行榜奖励
         */
        gcz_zhangong2 = 98,
        /**
         * 战功排行榜奖励
         */
        gcz_zhangong3 = 99,
        /**
         * 攻城战-枭雄奖励
         */
        gcz_xiaoxiong = 100,
        /**
         * 战功排行榜奖励
         */
        gcz_zhangong4 = 101,
        /**
         * 战功排行榜奖励
         */
        gcz_zhangong5 = 102,
        /**
         * 战功排行榜奖励
         */
        gcz_zhangong6 = 103,
        /**
         * 攻城战-王侯奖励
         */
        gcz_wanghou = 104,
        /**
         * 战功排行榜奖励
         */
        gcz_zhangong7 = 105,
        /**
         * 战功排行榜奖励
         */
        gcz_zhangong8 = 106,
        /**
         * 战功排行榜奖励
         */
        gcz_zhangong9 = 107,
        /**
         * 首次攻城奖励
         */
        gcz_first = 108,
        /**
         * 神格
         */
        sport_shenge = 109,
        /**
         * 神脉
         */
        sport_shenmai = 110,
        /**
         * 远古神殿输出奖励
         */
        ygsd_hurt_award = 114,
        /**
         * 远古神殿击杀奖励
         */
        ygsd_kill_award = 115,
        /**
         * 远古神殿排行奖励
         */
        ygsd_rank_award = 116,
        /**
         * 攻城战-城主奖励
         */
        gcz_chengzhu = 126,
        /**
         * 战功排行榜奖励
         */
        gcz_zhangong10 = 127,
        /**
         * 战功排行榜奖励
         */
        gcz_zhangong11 = 128,
        /**
         * 战功排行榜奖励
         */
        gcz_zhangong12 = 129,
        /**
         * 宝石排行榜奖励
         */
        rank_gem = 131,
        /**
         * 第二次攻城奖励
         */
        gcz_second = 132,
        /**
         * 觉醒排行榜奖励
         */
        rank_jue_xing = 134,
        /**
         * 装备排行榜奖励
         */
        rank_equip = 136,
        /**
         * 切割排行榜奖励
         */
        rank_qige = 138,
        /**
         * BOSS悬赏奖励
         */
        boss_award = 150,
        /**
         * 四象祭台通关奖励
         */
        sixiangjitai_award_mail = 160,
        /**
         * 四象祭台参与道具
         */
        sixiangjitai_join_mail = 161,
        /**
         * 消费连击奖励
         */
        consume_combo_award = 163,
        /**
         * 工资系统发工资
         */
        gong_zi = 167,
        /**
         *
         */
        guild_pool_send_red_by_chairman = 2746,
        /**
         * 装备获取攻略
         */
        task_1 = 10046,
        /**
         * 致所有亲爱的朋友
         */
        task_2 = 10048,
        /**
         * 功能开启奖励邮件
         */
        func_open_award_mail = 10049,
        /**
         * 快速升级攻略
         */
        task_3 = 10050,
        /**
         * 恭喜达到59级
         */
        task_4 = 10059,
        /**
         * 恭喜达到60级
         */
        task_5 = 10060,
        /**
         * 体验VIP到期
         */
        system_experience_vip_over = 10107,
        /**
         * 恭喜您，达成斗兽场{0}星难度挑战！由于您的背包格位不足，特发此邮件说明，请您查收！
         */
        dou_shou_chang = 10109,
        /**
         * 恭喜您，通关裂变之灾副本！由于您的背包格位不足，特发此邮件说明，请您查收！
         */
        lie_bian_zhi_zai_award = 10110,
        /**
         * 套装限时活动收集成功
         */
        os_time_suit_limit = 10111,
        /**
         * 单件装备收集成
         */
        first_award_equip = 10112,
        /**
         * 个人boss通普通关奖励邮件
         */
        private_boss_pass_stage_normal = 10114,
        /**
         * 个人boss完美通关奖励邮件
         */
        private_boss_pass_stage_perfect = 10115,
        /**
         * 周期基金到期未领取奖励
         */
        foundation_cycle_award = 10200,
        /**
         * 玉佩奖励邮件
         */
        yu_pei_mail = 10301,
        /**
         * 神石奖励邮件
         */
        shen_shi_mail = 10302,
        /**
         * 龙珠奖励邮件
         */
        long_zhu_mail = 10303,
        /**
         * 如意奖励右键
         */
        ru_yi_mail = 10304,
        /**
         * 万魔殿江路
         */
        wan_mo_dian_award = 10401,
        /**
         * 猎魔幻狱背包满邮件发奖
         */
        lie_mo_huan_yu = 10501,
        /**
         * 猎魔幻狱当天扫荡未领取奖励
         */
        lie_mo_huan_yu_not_get_award = 10502,
        /**
         * 帮会进入解散状态邮件
         */
        gang_dismiss_mail = 10601,
        /**
         * 帮会取消解散状态邮件
         */
        gang_cancel_dismiss_mail = 10602,
        /**
         * 被踢出帮会邮件
         */
        gang_kicked_mail = 10603,
        /**
         * 妖气山副本奖励
         */
        evil_spirit_script_award = 10701,
        /**
         * 帮会红包退回邮件
         */
        gang_red_back_mail = 10801,
        /**
         * 宝物祈愿奖励发放
         */
        pray_award_mail = 10802,
        /**
         * 被转让帮主邮件
         */
        gang_change_leader = 10803,
        /**
         * 恭喜您在生化战场中排名第{0}，获得丰厚奖励，请您查收。
         */
        shang_hua_zhan_chang_rank = 10909,
        /**
         * 恭喜您在生化战场中生存时间达标，获得丰厚奖励，请您查收。
         */
        shang_hua_zhan_chang_time = 10910,
        /**
         * 恭喜您在生化战场中击杀数量达标，获得丰厚奖励，请您查收。
         */
        shang_hua_zhan_chang_kill = 10911,
        /**
         * 祭拜活动结束奖励Id
         */
        worship_activity_end_award = 10912,
        /**
         * 守卫比奇进度1奖励
         */
        shou_wei_bi_qi_progress1_award = 10920,
        /**
         * 守卫比奇进度2奖励
         */
        shou_wei_bi_qi_progress2_award = 10921,
        /**
         * 守卫比奇进度3奖励
         */
        shou_wei_bi_qi_progress3_award = 10922,
        /**
         * 屠魔猎场胜利奖励
         */
        tumo_hunting_fight_award_win = 10923,
        /**
         * 屠魔猎场失败奖励
         */
        tumo_hunting_fight_award_loser = 10924,
        /**
         * 屠魔猎场平局奖励
         */
        tumo_hunting_fight_award_dogfall = 10925,
        /**
         * 屠魔猎场个人奖励
         */
        tumo_hunting_role_award = 10926,
        /**
         * 守卫比奇进度奖励
         */
        shou_wei_bi_qi_progress_award = 10927,
        /**
         * 战线补给奖励
         */
        front_supply_award = 10928,
        /**
         * 帮会捐献奖励
         */
        guild_do_donate = 10929,
        /**
         * 每日礼包
         */
        day_gift = 10930,
        /**
         * 跨服争霸服务器排名奖励
         */
        kfzb_server_rank_award = 10932,
        /**
         * 跨服争霸个人排名奖励
         */
        kfzb_role_rank_award = 10933,
        /**
         * 跨服争霸个人阶段奖励
         */
        kfzb_role_stage_award = 10934,
        /**
         * 帮会成就帮主邮件
         */
        guild_create_athketices_1 = 10935,
        /**
         * 帮会成就帮众邮件
         */
        guild_create_athketices_2 = 10936,
        /**
         * 帮会排行帮主邮件
         */
        guild_rank_1 = 10937,
        /**
         * 帮会排行帮众邮件
         */
        guild_rank_2 = 10938,
        /**
         * 饮酒大赛排名奖励
         */
        cross_yinjiu_rank_award = 10939,
        /**
         * 饮酒大赛上榜奖励
         */
        cross_yinjiu_onrank_award = 10940,
        /**
         * 饮酒大赛竞技奖励
         */
        cross_yinjiu_athletics_award = 10941,
        /**
         * 跨服神装竞技奖励
         */
        cross_shenzhuang_athletics_award = 10942,
        /**
         * 跨服神阶竞技奖励
         */
        cross_shenjie_athletics_award = 10943,
        /**
         * 跨服日常任务竞技奖励
         */
        cross_everyday_task_athletics_award = 10944,
        /**
         * 玲珑塔
         */
        ll_tower = 10945,
        /**
         * 觉醒重铸返还
         */
        breach_re = 10946,
        /**
         * 尊敬的玩家，您已退出帮会，24小时内加入原帮会个人帮贡全额保留，加入非原帮会保留一半，超过24后帮贡献将清空，加入帮会和伙伴一起游戏吧！
         */
        guild_exit_mail = 10947,
        /**
         * 特戒每日礼包背包已满邮件
         */
        ring_gift_mail = 10948,
        /**
         * 宝石洞窟首通补发奖励
         */
        gem_cavern_first_award = 10949,
        /**
         * 圣龙战场全服排行奖励
         */
        slzc_server_rank_award = 10950,
        /**
         * 圣龙战场全服角色排行奖励
         */
        slzc_role_rank_award = 10951,
        /**
         * 圣龙战场个人击杀奖励
         */
        slzc_role_stage_kill_award = 10952,
        /**
         * 圣龙战场个人采集奖励
         */
        slzc_role_stage_collect_award = 10953,
        /**
         * 亲爱的玩家，您出售{0}个{1}，以下是您的收益，其中{2}手续费已扣除。提升[color=#125a02]贵族等级[/color]可享受更低手续费！
         */
        auction_purchase_coin_mail = 10954,
        /**
         * 恭喜您成功求购以下道具
         */
        auction_purchase_item_mail = 10955,
        /**
         * 您求购的已下架，返还所有货币
         */
        auction_purchase_off_mail = 10956,
        /**
         * 由于您的背包空间不足，本轮夺金之路（元宝）击杀Boss获得的奖励已通过邮件发送给您，请您查收。
         */
        gold_digger_gold = 10957,
        /**
         * 由于您的背包空间不足，本轮夺金之路（圣龙币）击杀Boss获得的奖励已通过邮件发送给您，请您查收。
         */
        gold_digger_money = 10958,
        /**
         * 活跃度奖励补发邮件
         */
        active_award_reissue = 10959,
        /**
         * 新手秘境奖励
         */
        xsmj_mission_award = 10960,
        /**
         * 稀有boss排行奖励
         */
        rare_boss_rank = 10962,
        /**
         * 由于您背包已满，材料副本特权的额外奖励已通过邮件发送！请您查收。
         */
        cai_liao_te_quan_card_award = 10966,
        /**
         * 由于限时任务时间已过，未领取的奖励已通过邮件发送！请您查收。
         */
        limit_mission_award_mail = 10967,
        /**
         * 由于您背包已满，VIP奖励已通过邮件发送！请您查收。
         */
        vip_achi_award_mail = 10968,
        /**
         * boss狂欢功能关闭发送邮件
         */
        boss_kuang_huan = 10969,
        /**
         * 工资系统邮件
         */
        wages_mail = 10970,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 邮件附件状态
 */
declare module protocol {
    const enum EnumMailAttachmentState {
        /**
         * 未领取
         */
        unReceived = 0,
        /**
         * 已领取
         */
        received = 1,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 命装槽位开启条件类型
 */
declare module protocol {
    const enum EnumLucunSlotOpenConditionType {
        /**
         *
         */
        none = 0,
        /**
         * VIP等级达到
         */
        vipAchi_level = 1,
        /**
         * 贵族等级达到
         */
        vip_level = 2,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 龙威buff类型
 */
declare module protocol {
    const enum EnumLongWeiBuffType {
        /**
         * 不变化
         */
        none = 0,
        /**
         * 变羊
         */
        bianyang = 1,
        /**
         * 虚弱
         */
        xuruo = 2,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumJob {
        /**
         * 未知
         */
        unknown = 0,
        /**
         * 战士
         */
        zhan = 1,
        /**
         * 法师
         */
        fa = 2,
        /**
         * 道士
         */
        dao = 3,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumItemUseType {
        /**
         * 无法使用
         */
        none = 0,
        /**
         * 单个使用
         */
        single_use = 1,
        /**
         * 批量使用
         */
        mass_use = 2,
        /**
         * 可选数量使用
         */
        option_use = 3,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 限制次数
 */
declare module protocol {
    const enum EnumItemUseLimitType {
        /**
         * 每日
         */
        Daily = 1,
        /**
         * 每次活动，需要对应活动ID
         */
        EachActivity = 2,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumItemUseLimit {
        /**
         * vip
         */
        vip = 1,
        /**
         * 钻石
         */
        money = 2,
        /**
         * 物品
         */
        item = 3,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumItemType3 {
        /**
         * 攻击特戒
         */
        ring_attack = 1,
        /**
         * 防御特戒
         */
        ring_defense = 2,
        /**
         * 复活特戒
         */
        ring_resurgence = 3,
        /**
         * 护身特戒
         */
        ring_protect = 4,
        /**
         * 麻痹特戒
         */
        ring_palsy = 5,
        /**
         * 角色用聚灵珠
         */
        energy_role = 6,
        /**
         * 英雄用聚灵珠
         */
        energy_hero = 7,
        /**
         * 装备攻击特戒加成
         */
        equip_attack_rate = 8,
        /**
         * 装备防御特戒加成
         */
        equip_defense_rate = 9,
        /**
         * 切割特戒加成
         */
        qie_ge_attack_rate = 10,
        /**
         * 运势特戒加成
         */
        yun_shi_attack_rate = 11,
        /**
         * 战斗特戒加成
         */
        fight_attack_rate = 12,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumItemType2 {
        /**
         * 武器
         */
        weapon = 100,
        /**
         * 衣服
         */
        clothes = 101,
        /**
         * 头盔
         */
        helmet = 102,
        /**
         * 项链
         */
        necklace = 103,
        /**
         * 手镯
         */
        bracelet = 105,
        /**
         * 戒指
         */
        ring = 106,
        /**
         * 腰带
         */
        belt = 108,
        /**
         * 靴子
         */
        boots = 109,
        /**
         * 特戒
         */
        special_ring = 110,
        /**
         * 龙骨
         */
        bone = 113,
        /**
         * 护心镜
         */
        mirror = 114,
        /**
         * 九曲珠
         */
        bead = 115,
        /**
         * 女娲石
         */
        stone = 116,
        /**
         * 飞羽
         */
        wing_equip1 = 121,
        /**
         * 覆羽
         */
        wing_equip2 = 122,
        /**
         * 肩羽
         */
        wing_equip3 = 123,
        /**
         * 翼甲
         */
        wing_equip4 = 124,
        /**
         * 禄存命装最小值
         */
        vice_lucun_min = 131,
        /**
         * 禄存命装最大值
         */
        vice_lucun_max = 138,
        /**
         * 圣剑
         */
        vice_tanlang_min = 139,
        /**
         * 贪狼命装最大值
         */
        vice_tanlang_max = 144,
        /**
         * 巨门命装最小值
         */
        vice_jumen_min = 145,
        /**
         * 圣鞋
         */
        vice_tanlang_min2 = 148,
        /**
         * 巨门命装最大值
         */
        vice_jumen_max = 149,
        /**
         * 圣印1
         */
        sheng_yin1 = 151,
        /**
         * 圣印1
         */
        sheng_yin2 = 152,
        /**
         * 圣印3
         */
        sheng_yin3 = 153,
        /**
         * 圣印4
         */
        sheng_yin4 = 154,
        /**
         * 圣印5
         */
        sheng_yin5 = 155,
        /**
         * 圣印6
         */
        sheng_yin6 = 156,
        /**
         * 圣印7
         */
        sheng_yin7 = 157,
        /**
         * 圣印8
         */
        sheng_yin8 = 158,
        /**
         * 魂牌1(废)
         */
        hun_pai1 = 160,
        /**
         * 魂牌2(废)
         */
        hun_pai2 = 161,
        /**
         * 魂牌3(废)
         */
        hun_pai3 = 162,
        /**
         * 魂牌4(废)
         */
        hun_pai4 = 163,
        /**
         * 魂牌5(废)
         */
        hun_pai5 = 164,
        /**
         * 魂牌6(废)
         */
        hun_pai6 = 165,
        /**
         * 魂牌7(废)
         */
        hun_pai7 = 166,
        /**
         * 魂牌8(废)
         */
        hun_pai8 = 167,
        /**
         * 魂牌9(废)
         */
        hun_pai9 = 168,
        /**
         * 符文
         */
        fu_wen1 = 170,
        /**
         * 符文
         */
        fu_wen2 = 171,
        /**
         * 符文
         */
        fu_wen3 = 172,
        /**
         * 符文
         */
        fu_wen4 = 173,
        /**
         * 符文
         */
        fu_wen5 = 174,
        /**
         * 符文
         */
        fu_wen6 = 175,
        /**
         * 符文
         */
        fu_wen7 = 176,
        /**
         * 符文
         */
        fu_wen8 = 177,
        /**
         * 符文
         */
        fu_wen9 = 178,
        /**
         * 符文
         */
        fu_wen10 = 179,
        /**
         * 符文
         */
        fu_wen11 = 180,
        /**
         * 生肖1
         */
        vice_shengxiao_1 = 181,
        /**
         * 生肖2
         */
        vice_shengxiao_2 = 182,
        /**
         * 生肖3
         */
        vice_shengxiao_3 = 183,
        /**
         * 生肖4
         */
        vice_shengxiao_4 = 184,
        /**
         * 生肖5
         */
        vice_shengxiao_5 = 185,
        /**
         * 生肖6
         */
        vice_shengxiao_6 = 186,
        /**
         * 生肖7
         */
        vice_shengxiao_7 = 187,
        /**
         * 生肖8
         */
        vice_shengxiao_8 = 188,
        /**
         * 生肖9
         */
        vice_shengxiao_9 = 189,
        /**
         * 生肖10
         */
        vice_shengxiao_10 = 190,
        /**
         * 生肖11
         */
        vice_shengxiao_11 = 191,
        /**
         * 生肖12
         */
        vice_shengxiao_12 = 192,
        /**
         * 跨服副装_1
         */
        cross_vice_1 = 193,
        /**
         * 跨服副装_2
         */
        cross_vice_2 = 194,
        /**
         * 跨服副装_3
         */
        cross_vice_3 = 195,
        /**
         * 跨服副装_4
         */
        cross_vice_4 = 196,
        /**
         * 绑定金币
         */
        gold_bind = 201,
        /**
         * 金币
         */
        gold_free = 202,
        /**
         * 元宝
         */
        money_free = 203,
        /**
         * 礼券（绑定元宝）
         */
        money_coupon = 204,
        /**
         * 新增绑元
         */
        money_bind_new = 205,
        /**
         * 圣龙币
         */
        money_dragoncoin = 206,
        /**
         * 装备积分
         */
        equip_integration = 207,
        /**
         * 慢回药
         */
        man_hui = 301,
        /**
         * 瞬回药
         */
        shun_hui = 302,
        /**
         * 气血石
         */
        qi_xue_shi = 303,
        /**
         * buff回血药
         */
        buff_hui = 304,
        /**
         * 经验buff
         */
        exp_buff = 401,
        /**
         * 能力buff
         */
        capacity_buff = 402,
        /**
         * vip特权卡
         */
        vip_card = 403,
        /**
         * 玉佩材料
         */
        yu_pei = 501,
        /**
         * 成就勋章材料
         */
        xun_zhang = 502,
        /**
         * 龙心材料
         */
        long_xin = 503,
        /**
         * 护盾材料
         */
        hu_dun = 504,
        /**
         * 血继丹
         */
        xue_ji_dan = 505,
        /**
         * 声望卷
         */
        sheng_wang_juan = 506,
        /**
         * 祝福油
         */
        zhu_fu_you = 507,
        /**
         * 神盾护盾材料
         */
        shen_dun = 508,
        /**
         * 内功石
         */
        nei_gong_shi = 521,
        /**
         * 内功罐
         */
        nei_gong_guan = 522,
        /**
         * 羽毛
         */
        yu_mao = 601,
        /**
         * 强化石
         */
        qiang_stone = 602,
        /**
         * 精炼石
         */
        jing_stone = 603,
        /**
         * 宝藏钥匙
         */
        box_key = 604,
        /**
         * 刻印材料
         */
        engravingItem = 605,
        /**
         * 书魂任务
         */
        book_soul_mission = 606,
        /**
         * 跨服副装材料
         */
        cross_serve_equip_metrial = 609,
        /**
         * 藏宝图
         */
        cang_bao_tu = 610,
        /**
         * 圣印材料
         */
        seals_material = 611,
        /**
         * boss狂欢产出材料
         */
        boss_wild_material = 612,
        /**
         * 攻击宝石
         */
        gem_atk = 701,
        /**
         * 防御宝石
         */
        gem_def = 702,
        /**
         * 血魔宝石
         */
        gem_hp_mp = 703,
        /**
         * 神圣攻击宝石
         */
        gem_holy = 704,
        /**
         * 暴击宝石
         */
        gem_crir = 705,
        /**
         * 暴伤宝石
         */
        gem_criv = 706,
        /**
         * 铭文1
         */
        ming_wen_1 = 740,
        /**
         * 铭文2
         */
        ming_wen_2 = 741,
        /**
         * 铭文3
         */
        ming_wen_3 = 742,
        /**
         * 铭文4
         */
        ming_wen_4 = 743,
        /**
         * 铭文5
         */
        ming_wen_5 = 744,
        /**
         * 铭文6
         */
        ming_wen_6 = 745,
        /**
         * 铭文7
         */
        ming_wen_7 = 746,
        /**
         * 铭文8
         */
        ming_wen_8 = 747,
        /**
         * 战士技能书
         */
        book_zhan = 801,
        /**
         * 法师技能书
         */
        book_fa = 802,
        /**
         * 道士技能书
         */
        book_dao = 803,
        /**
         * 翅膀技能书
         */
        book_wing_skill = 804,
        /**
         * 时装武器
         */
        fashion_weapon = 901,
        /**
         * 时装衣服
         */
        fashion_clothes = 902,
        /**
         * 大礼包类
         */
        gift_ = 1001,
        /**
         * 自选礼包
         */
        gift_optional = 1002,
        /**
         * 英雄转职卡
         */
        hero_change_job_card = 1201,
        /**
         * 遗忘圣水(重置天赋)
         */
        talent_reset = 1202,
        /**
         * 矿石
         */
        kuang_shi = 1203,
        /**
         * 角色改名卡
         */
        change_name_card = 1204,
        /**
         * 角色变性卡
         */
        change_gender_card = 1205,
        /**
         * 单位碎片
         */
        unit_chip = 1300,
        /**
         * 传送石
         */
        transfer_stone = 1401,
        /**
         * 回城石
         */
        home_stone = 1402,
        /**
         * 随机传送石
         */
        random_stone = 1403,
        /**
         * 聚灵珠(小)
         */
        energy_1 = 1501,
        /**
         * 聚灵珠(中)
         */
        energy_2 = 1502,
        /**
         * 聚灵珠(大)
         */
        energy_3 = 1503,
        /**
         * 聚灵珠(超)
         */
        energy_4 = 1504,
        /**
         * 聚灵珠(极)
         */
        energy_5 = 1505,
        /**
         * 任务类物品
         */
        mission_ = 1600,
        /**
         * 龙魂类型小
         */
        soul_type_small = 1800,
        /**
         * 龙魂类型中
         */
        soul_type_centre = 1801,
        /**
         * 龙魂类型大
         */
        soul_type_big = 1802,
        /**
         * 普通采集宝箱
         */
        general_collect_box = 1803,
        /**
         * 超级采集宝箱
         */
        super_collect_box = 1804,
        /**
         * 采集时限宝箱
         */
        collect_timelimit_box = 1805,
        /**
         * 噬魂分解
         */
        ling_qi_recover = 1806,
        /**
         * 激活宠物
         */
        acitvate_pet = 1807,
        /**
         * 符文残片
         */
        fuwen_canpian = 2000,
        /**
         * 等级丹
         */
        levelElixir = 2001,
        /**
         * 转生葫芦
         */
        zhuansheng_hulu = 2010,
        /**
         * 帮会信物
         */
        gangTokens = 2501,
        /**
         * 特戒升级材料
         */
        ringUp_material = 2502,
        /**
         * 翻牌物品
         */
        itemExtractCard = 2801,
        /**
         * 技能残片
         */
        skill_relic = 2902,
        /**
         * 觉醒卷轴
         */
        juexing_juanzhou = 2903,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 未知暗殿npc类型
 */
declare module protocol {
    class unkonw_dark_type_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumItemType1 {
        /**
         * 装备
         */
        equip = 1,
        /**
         * 货币
         */
        money = 2,
        /**
         * 药品
         */
        potion = 3,
        /**
         * buff物品
         */
        buff_goods = 4,
        /**
         * 材料
         */
        material = 5,
        /**
         * 功能材料
         */
        func_material = 6,
        /**
         * 宝石
         */
        gem = 7,
        /**
         * 技能书
         */
        skill_book = 8,
        /**
         * 时装
         */
        fashion = 9,
        /**
         * 礼包及宝箱
         */
        gift_box = 10,
        /**
         * 其他
         */
        other = 12,
        /**
         * boss信物
         */
        keepsake = 13,
        /**
         * 传送石
         */
        transfer_stone = 14,
        /**
         * 聚灵珠
         */
        energy = 15,
        /**
         * 任务类物品
         */
        mission = 16,
        /**
         * 次数物品
         */
        time = 17,
        /**
         * 装备卡牌类物品
         */
        brand = 18,
        /**
         * 符石
         */
        fushi = 19,
        /**
         * 红包
         */
        red = 20,
        /**
         * 称号
         */
        title = 21,
        /**
         * 遗物
         */
        relic = 22,
        /**
         * 经验酒
         */
        exp_wine = 23,
        /**
         * 等级丹
         */
        levelElixir = 24,
        /**
         * 内功
         */
        neigong = 25,
        /**
         * 神罚圣药
         */
        shenfa = 26,
        /**
         * 物品充值
         */
        item_recharge = 27,
        /**
         * 翻牌
         */
        item_extract_card = 28,
        /**
         * 技能残篇
         */
        item_skillfragment = 29,
        /**
         * 获得转生葫芦
         */
        item_get_lv_r = 50,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 物品排序类型
 */
declare module protocol {
    const enum EnumItemSortType {
        /**
         *
         */
        none = 0,
        /**
         * 等级降序
         */
        level_descend = 1,
        /**
         * 等级升序
         */
        level_ascend = 2,
        /**
         * 槽位
         */
        solt = 3,
        /**
         * 品质
         */
        quality = 4,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumItemLockType {
        /**
         * 解除锁定状态
         */
        none = 0,
        /**
         * 交易锁定
         */
        trade = 1,
        /**
         * 摆摊锁定
         */
        stall = 2,
        /**
         * 跨服物品锁定
         */
        cross_server = 3,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 物品初始化源类型
 */
declare module protocol {
    const enum EnumItemInitialSorceType {
        /**
         * 地图拾取
         */
        map_pickup = 1,
        /**
         * 宝藏
         */
        mine = 2,
        /**
         * 合成
         */
        compound = 3,
        /**
         * 活动
         */
        activity = 4,
        /**
         * 系统
         */
        system = 5,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumItemGridType {
        /**
         * 旧的背包位起始
         */
        old_bag = 0,
        /**
         * 旧的背包位结束(0 - 99)
         */
        old_bag_end = 99,
        /**
         * 装备类型
         */
        equip = 100,
        /**
         * 装备(100 - 199)
         */
        equip_end = 199,
        /**
         * 仓库类型
         */
        storage = 200,
        /**
         * 仓库(200 - 399)
         */
        storage_end = 399,
        /**
         * 时装
         */
        fashion = 400,
        /**
         * 400 - 499
         */
        fashion_end = 499,
        /**
         * 宝石
         */
        gem = 500,
        /**
         * 500 - 599
         */
        gem_end = 599,
        /**
         * 卡牌
         */
        brand = 600,
        /**
         * 600 - 649
         */
        brand_end = 649,
        /**
         * 神装类型
         */
        god = 700,
        /**
         * 神装（700 - 799）
         */
        god_end = 799,
        /**
         * 魂牌类型
         */
        hun_pai = 800,
        /**
         * 魂牌结束（800 - 997）
         */
        hun_pai_end = 997,
        /**
         * 背包类型
         */
        bag = 1000,
        /**
         * 背包(1000 - 1099)
         */
        bag_end = 1099,
        /**
         * 背包预留300
         */
        bag_reserve = 1399,
        /**
         * 符文_格(1500-1739)240
         */
        fu_wen = 1500,
        /**
         * 符文_格end
         */
        fu_wen_end = 1739,
        /**
         * 英雄装备
         */
        hero_equip = 5000,
        /**
         * 英雄装备(5000 - 5099)
         */
        hero_equip_end = 5099,
        /**
         * 错误
         */
        err = 10000,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 物品使用生效对象类型
 */
declare module protocol {
    const enum EnumItemFunctionType {
        /**
         *
         */
        none = 0,
        /**
         * 人物使用
         */
        role = 1,
        /**
         * 英雄使用
         */
        hero = 2,
        /**
         * 护卫/战宠
         */
        mars = 3,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 物品删除类型
 */
declare module protocol {
    const enum EnumItemDelType {
        /**
         * 不可丢弃销毁
         */
        item_cannot_del = 0,
        /**
         * 销毁物品
         */
        item_destroy = 1,
        /**
         * 丢弃到场景
         */
        item_discard_to_scene = 2,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumItemBindType {
        /**
         * 未知
         */
        none = 0,
        /**
         * 绑定
         */
        bind = 1,
        /**
         * 非绑定
         */
        unbind = 2,
        /**
         * 副本专属
         */
        exclusive = 3,
        /**
         * 根据特定物品绑定状态决定主物品的绑定状态
         */
        primary = 11,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 荣誉商店购买次数类型
 */
declare module protocol {
    const enum EnumHonorMallBuyCountType {
        /**
         *
         */
        none = 0,
        /**
         * 周计数
         */
        weekly = 1,
        /**
         * 天计数
         */
        day = 2,
    }
}
/**
 * File is automatically generated, Please do not modify
 * //英雄神器升级条件
 */
declare module protocol {
    const enum EnumHeroGodUpgradeCondition {
        /**
         * 等级要求
         */
        lv = 2001,
        /**
         * 转生等级要求
         */
        rlv = 2002,
        /**
         * 披风等级
         */
        cloak_lv = 2003,
        /**
         * 英雄境界
         */
        realm_lv = 2004,
        /**
         * 铸灵等级
         */
        cast_soul_lv = 2005,
        /**
         * 火龙之心总等级
         */
        dragon_heart_sum_lv = 2006,
        /**
         * 火龙之力红
         */
        heart_level_red_lv = 2007,
        /**
         * 蓝龙之力
         */
        heart_level_blue_lv = 2008,
        /**
         * 青龙之力
         */
        heart_level_green_lv = 2009,
        /**
         * 黄龙之力
         */
        heart_level_yellow_lv = 2010,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 头像相关解锁类型
 */
declare module protocol {
    const enum EnumHeadUnlockType {
        /**
         *
         */
        none = 0,
        /**
         * 点赞
         */
        dian_zan = 1,
        /**
         * 拍砖
         */
        pai_zhuan = 2,
        /**
         * vip
         */
        vip = 3,
        /**
         * 钻石
         */
        money = 4,
        /**
         * 元宝
         */
        gold = 5,
        /**
         * 累积登陆天数
         */
        accmulate_login_day = 6,
        /**
         * 特权卡
         */
        card = 7,
        /**
         * vip成就
         */
        vip_achi = 8,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 头像图标类型
 */
declare module protocol {
    const enum EnumHeadIconType {
        /**
         * 无
         */
        None = 0,
        /**
         * 头像框
         */
        head_frame = 1,
        /**
         * 头像
         */
        head = 2,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumGuildRed {
        /**
         * 无
         */
        none = 0,
        /**
         * 发红包
         */
        send = 1,
        /**
         * 抢红包
         */
        grab = 2,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumGuildPost {
        /**
         * 无帮会状态
         */
        free = 0,
        /**
         * 帮主
         */
        chairman = 1,
        /**
         * 副帮主
         */
        assistant = 2,
        /**
         * 长老
         */
        elder = 4,
        /**
         * 左护法
         */
        left_elder = 10,
        /**
         * 右护法
         */
        right_elder = 20,
        /**
         * 堂主
         */
        master = 30,
        /**
         * 精英
         */
        elite = 40,
        /**
         * 帮会成员
         */
        member = 999,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会日志类型
 */
declare module protocol {
    const enum EnumGuildLog {
        /**
         * 无
         */
        none = 0,
        /**
         * 捐献钱
         */
        donate_money = 1,
        /**
         * 捐献物品
         */
        donate_item = 2,
        /**
         * 兑换物品
         */
        exchange_item = 3,
        /**
         * 添加玩家
         */
        append = 4,
        /**
         * 踢出玩家
         */
        kick = 5,
        /**
         * 销毁物品
         */
        destroy_item = 6,
        /**
         * 玩家XXX离开帮会
         */
        exit = 7,
        /**
         * 玩家XXX开启帮主弹劾，进入弹劾倒计时
         */
        impeach_begin = 8,
        /**
         * 玩家XXX弹劾帮主成功，成为帮会新一任帮主；
         */
        impeach_succeed = 9,
        /**
         * [职位][玩家名称]将[玩家名称]任命为副帮主
         */
        appoint = 10,
        /**
         * [帮会名称]对本帮发起宣战
         */
        be_rival = 11,
        /**
         * 本帮在全体成员的努力下升到了2级
         */
        lvup = 12,
        /**
         * [玩家名称]通过了护法选拔成为本帮左/右护法！
         */
        auto_appoint = 13,
        /**
         * 主动宣战
         */
        rival = 14,
        /**
         * 红包记录
         */
        red = 15,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 购买渠道枚举
 */
declare module protocol {
    const enum EnumGoodsBuyWay {
        /**
         * 商店内购买
         */
        InStore = 0,
        /**
         * 商店外购买
         */
        OutStore = 1,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumGender {
        /**
         * 未知
         */
        unknown = 0,
        /**
         * 男
         */
        male = 1,
        /**
         * 女
         */
        female = 2,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 宝石类型，槽位与装备槽位相同
 */
declare module protocol {
    const enum EnumGemType {
        /**
         * 攻击
         */
        attack = 701,
        /**
         * 防御
         */
        define = 702,
        /**
         * 生命
         */
        life = 703,
        /**
         * 暴击率
         */
        crit = 704,
        /**
         * 暴伤
         */
        crit_v = 705,
        /**
         * 神圣
         */
        god = 706,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class vip_notice_get_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        gear: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class vip_notice_get_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class vip_notice_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        gear: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumFuncOpen {
        /**
         * 限时任务
         */
        limit_time_mission = 2008,
        /**
         * 角色
         */
        role = 10001,
        /**
         * 内功
         */
        nei_gong = 10002,
        /**
         * 转生
         */
        rebirth = 10003,
        /**
         * 时装
         */
        fashion = 10004,
        /**
         * 称号
         */
        title = 10005,
        /**
         * 宝石
         */
        gem = 10006,
        /**
         * 搜集遗物
         */
        relic = 10007,
        /**
         * 炼魂
         */
        lian_hun = 10008,
        /**
         * 升级
         */
        upgrate = 10009,
        /**
         * 神格
         */
        godhood = 10010,
        /**
         * 角色觉醒
         */
        role_awaken = 10011,
        /**
         * 技能
         */
        skill = 10201,
        /**
         * 锻造
         */
        forge = 10301,
        /**
         * 锻造-强化
         */
        forge_equip_strengthen = 10302,
        /**
         * 锻造-强化转移
         */
        forge_strengthen_change = 10303,
        /**
         * 锻造-精炼
         */
        forge_equip_refine = 10304,
        /**
         * 锻造-精炼回收
         */
        forge_refine_recycling = 10305,
        /**
         * 英雄强化
         */
        forge_equip_herostrengthen = 10306,
        /**
         * 装备精炼
         */
        equip_refine = 10307,
        /**
         * 神器
         */
        artifact = 10401,
        /**
         * 神器-神玉
         */
        artifact_yu = 10402,
        /**
         * 神器-神石
         */
        artifact_stone = 10403,
        /**
         * 神器-龙魂
         */
        artifact_soul = 10404,
        /**
         * 神器-如意
         */
        artifact_ruyi = 10405,
        /**
         * 翅膀
         */
        wing = 10501,
        /**
         * 神脉
         */
        godPulse = 10502,
        /**
         * 魂牌
         */
        hun_pai = 10503,
        /**
         * 天赋
         */
        talent = 10504,
        /**
         * 官位
         */
        official = 10701,
        /**
         * 帮会
         */
        guild = 10801,
        /**
         * 成就
         */
        achievement = 10901,
        /**
         * 普通成就
         */
        normal_achievement = 10902,
        /**
         * 拍卖行
         */
        auction = 11001,
        /**
         * 背包
         */
        bag = 11101,
        /**
         * 组队
         */
        team = 11201,
        /**
         * 物品合成
         */
        item_compound = 11301,
        /**
         * 装备合成
         */
        equip_compound = 11302,
        /**
         * 圣装分解
         */
        item_resolve = 11303,
        /**
         * 符文
         */
        fuwen = 11304,
        /**
         * 符文炼制
         */
        fuwen_lianzhi = 11305,
        /**
         * 好友
         */
        friend = 11401,
        /**
         * 邮件
         */
        mail = 11501,
        /**
         * 设置
         */
        setting = 11601,
        /**
         * 当前聊天频道
         */
        chat_current = 11701,
        /**
         * 队伍聊天频道
         */
        chat_team = 11702,
        /**
         * 帮会聊天频道
         */
        chat_guild = 11703,
        /**
         * 世界聊天频道
         */
        chat_world = 11704,
        /**
         * 私聊频道
         */
        chat_secret = 11705,
        /**
         * 系统消息频道
         */
        chat_system = 11706,
        /**
         * 交易
         */
        trade = 11801,
        /**
         * 排行榜
         */
        ranking = 11901,
        /**
         * 勇士回归
         */
        warriors_return = 12000,
        /**
         * 社交
         */
        social = 12001,
        /**
         * 我要变强
         */
        tostrong = 13001,
        /**
         * 我要变强-角色
         */
        tostrong_role = 13002,
        /**
         * 我要变强-英雄
         */
        tostrong_hero = 13003,
        /**
         * 我要变强-指点迷津
         */
        tostrong_intro = 13004,
        /**
         * 奖励大厅
         */
        award_lobby = 20001,
        /**
         * 奖励大厅-每日签到
         */
        award_sign = 20002,
        /**
         * 奖励大厅-在线登陆
         */
        award_online = 20003,
        /**
         * 奖励大厅-7日登录
         */
        award_fifteen = 20004,
        /**
         * 奖励大厅-激活码兑换
         */
        award_code = 20005,
        /**
         * 奖励大厅-资源找回
         */
        award_res_back = 20006,
        /**
         * 奖励大厅-更新公告
         */
        award_renew = 20007,
        /**
         * 奖励大厅-七日特权
         */
        award_seven_privilage = 20008,
        /**
         * 祈愿
         */
        award_praying = 20009,
        /**
         * 等级基金
         */
        foundation_level = 20010,
        /**
         * 全民改名
         */
        quanmin_changename = 20011,
        /**
         * 功勋任务/除魔任务
         */
        mission_chu_mo = 20101,
        /**
         * 成长任务
         */
        mission_cheng_zhang = 20102,
        /**
         * 七星神炉
         */
        expcult = 20201,
        /**
         * 日常玩法
         */
        daily = 20301,
        /**
         * 攻城战
         */
        atk_city = 20401,
        /**
         * 宝藏
         */
        storehouse = 20501,
        /**
         * 装备兑换
         */
        exchange_equip = 20502,
        /**
         * 寻宝积分兑换
         */
        integral = 20503,
        /**
         * 首冲
         */
        recharge_first = 20601,
        /**
         * 每日充值
         */
        recharge_daily = 20602,
        /**
         * 世界繁荣度
         */
        prosperity = 20701,
        /**
         * 特权卡
         */
        privilege_card = 20801,
        /**
         * 挑战boos
         */
        boss = 20901,
        /**
         * 个人boss
         */
        private_boss = 20902,
        /**
         * 世界boss
         */
        world_boss_info = 20903,
        /**
         * 稀有boss
         */
        world_boss_normal = 20904,
        /**
         * 禁地boss
         */
        world_boss_elite = 20905,
        /**
         * 跨服boss
         */
        world_boss_cross = 20906,
        /**
         * 商城
         */
        mall = 21001,
        /**
         * 开服活动
         */
        open_server = 21201,
        /**
         * 下载有礼包
         */
        download = 21301,
        /**
         * 帮会目标
         */
        gang_task = 21401,
        /**
         * 离线挂机
         */
        offline = 21501,
        /**
         * 合服活动
         */
        merge_server = 21601,
        /**
         * 庆典活动
         */
        celebration = 21701,
        /**
         * 精彩活动
         */
        wonderful = 21801,
        /**
         * 招财进宝
         */
        playdice = 21901,
        /**
         * 跨服远征
         */
        cross_server = 22001,
        /**
         * 跨服3v3
         */
        cross_3v3 = 22002,
        /**
         * 限时装备合成
         */
        limit_time_equip_compound = 22003,
        /**
         * 七日狂欢
         */
        seven_day_carnival = 22101,
        /**
         * 明日有礼
         */
        tomorrow_gift = 22201,
        /**
         * Boss悬赏
         */
        world_boss_reward = 22301,
        /**
         * 护卫/战宠
         */
        mars = 22401,
        /**
         * 超值特惠
         */
        supervalue = 22501,
        /**
         * 神器系统
         */
        new_artifact = 22601,
        /**
         * 圣印开启
         */
        shengyin = 22701,
        /**
         * VIP大放送
         */
        vip_notice = 22801,
        /**
         * 跨服环任务
         */
        mzborder_cross = 22901,
        /**
         * 你提我改
         */
        nitiwogai = 30001,
        /**
         * 材料副本
         */
        cai_liao_fu_ben = 30101,
        /**
         * 挖矿任务
         */
        mission_wa_kuang = 30201,
        /**
         * 全民红包
         */
        rad_packet = 30301,
        /**
         * 经验修炼
         */
        exp_refine = 30401,
        /**
         * 帮会竞技
         */
        gang_competition = 30501,
        /**
         * 组队烧猪
         */
        zu_dui_shao_zhu = 30601,
        /**
         * 通天塔
         */
        tongtian = 30701,
        /**
         * 好友召唤
         */
        friend_call = 30801,
        /**
         * 仇人追踪
         */
        enemy_find = 30901,
        /**
         * 组队平台
         */
        team_platform = 31001,
        /**
         * 卧龙伏魔开启
         */
        mission_wo_long_fu_mo = 31101,
        /**
         * 传奇之路
         */
        supremacy_treasure = 31201,
        /**
         * 搜集遗物-在线奖励
         */
        relic_online = 31301,
        /**
         * 个人押镖
         */
        ya_biao = 31401,
        /**
         * 炼神功能
         */
        smlet_god = 40211,
        /**
         * 神甲
         */
        role_shen_jia = 40221,
        /**
         * 神装(战装)
         */
        war_equip = 40301,
        /**
         * 跨服养成护盾
         */
        cross_shield = 40401,
        /**
         * 英雄注灵
         */
        hero_zhuling = 42001,
        /**
         * 英雄披风
         */
        hero_cloak = 42002,
        /**
         * 英雄转生开启
         */
        hero_rebirth = 42003,
        /**
         * 武魂
         */
        role_warrior_soul = 42004,
        /**
         * 英雄密室
         */
        hero_back_room = 42005,
        /**
         * 英雄试炼
         */
        hero_shilian = 42006,
        /**
         * 英雄功能开启
         */
        hero = 42007,
        /**
         * 英雄转职
         */
        hero_transfer = 42008,
        /**
         * 英雄神器
         */
        hero_god_weapon = 42009,
        /**
         * 境界
         */
        hero_holy_beast = 42010,
        /**
         * 英雄天书
         */
        hero_sky_book = 42011,
        /**
         * 英雄翅膀
         */
        hero_wing = 42012,
        /**
         * 英雄副装功能开启
         */
        hero_god = 42013,
        /**
         * 英雄宝石
         */
        hero_gem = 42014,
        /**
         * 英雄历练
         */
        hero_toughen = 42015,
        /**
         * 九龙山
         */
        jiulong = 43001,
        /**
         * 迷惘墓室
         */
        miwangmushi = 43002,
        /**
         * 预购
         */
        preorder = 44001,
        /**
         * 经验炼制
         */
        make_exp = 45001,
        /**
         * 积分商城
         */
        mall_score = 46001,
        /**
         * 投资理财
         */
        invest = 47001,
        /**
         * 特戒
         */
        ring = 49001,
        /**
         * 神武系统
         */
        shen_wu = 51001,
        /**
         * 猎魔幻狱
         */
        lie_mo_huan_yu = 51010,
        /**
         * 聚灵珠
         */
        energy = 52001,
        /**
         * 装备捐献任务开启
         */
        equip_recycl_mission = 55001,
        /**
         * 角色成长
         */
        rolegroupup = 60001,
        /**
         * 英雄成长
         */
        herogrowup = 60002,
        /**
         * 社交
         */
        socialcontact = 60003,
        /**
         * 命装
         */
        equip_vice = 60004,
        /**
         * 圣装(原:命装_贪狼)
         */
        equip_vice_tanlang = 60005,
        /**
         * 十二生肖(原:命装_巨门)
         */
        equip_vice_jumen = 60006,
        /**
         * 命装_禄存
         */
        equip_vice_lucun = 60007,
        /**
         * 套装技能
         */
        suit_equip_skill = 60008,
        /**
         * 跨服副装
         */
        cross_vice = 60009,
        /**
         * 副装铭文
         */
        ming_wen = 60010,
        /**
         * 帝陵遗迹
         */
        mausoleum_historical_site = 70001,
        /**
         * 英雄密室
         */
        hero_adytum = 70002,
        /**
         * 龙魂
         */
        dragon_soul = 70003,
        /**
         * 火龙祭拜
         */
        dragon_worship = 70004,
        /**
         * 盟重边防
         */
        mzborder = 70005,
        /**
         * boss首杀
         */
        boss_first_kill = 70008,
        /**
         * 命运轮盘
         */
        destiny_turntable = 70014,
        /**
         * 邀请码
         */
        authcode = 70015,
        /**
         * 周期基金
         */
        foundation_cycle = 70016,
        /**
         * 宝石洞窟
         */
        gemcavern = 70017,
        /**
         * 妖气山
         */
        yao_qi_shan = 70019,
        /**
         * 精彩活动
         */
        jingcaihuodong = 70020,
        /**
         * 藏宝图开启
         */
        treasure_open = 70021,
        /**
         * 装备回收
         */
        equip_recycle = 70022,
        /**
         * 消费返钻
         */
        returndiamond = 70023,
        /**
         * 神元兑换
         */
        god_gold_exchange = 70024,
        /**
         * 圣龙币兑换
         */
        saint_dragon_currency = 70025,
        /**
         * 囚魔之路
         */
        qiu_mo_zhi_lu = 70026,
        /**
         * 天降洪福
         */
        tian_jiang_hong_fu = 70027,
        /**
         * 守卫盟重
         */
        shou_wei_meng_zhong = 70028,
        /**
         * 远古神殿
         */
        yuan_gu_shen_dian = 70030,
        /**
         * 洞窟探宝
         */
        dong_ku_tan_bao = 70031,
        /**
         * 副装养成
         */
        fu_zhuang_yang_cheng = 70032,
        /**
         * 龙魂入口
         */
        dragon_spirit_enter = 70033,
        /**
         * 龙魂升级
         */
        dragon_spirit_upgrade = 70034,
        /**
         * 龙魂突破
         */
        dragon_spirit_breach = 70035,
        /**
         * 龙脉升级
         */
        dragon_vein_upgrade = 70036,
        /**
         * 四象祭台
         */
        si_xiang_ji_tai = 70038,
        /**
         * 噬魂分解
         */
        ling_qi_recover = 70041,
        /**
         * 跨服争霸(GvG1)
         */
        kua_fu_zheng_ba = 70042,
        /**
         * 周末狂欢
         */
        week_carnival = 70043,
        /**
         * 圣龙战场(GvG2)
         */
        sheng_long_zhan_chang = 70044,
        /**
         * VIP成就
         */
        vip_achi = 70050,
        /**
         * 拾取精灵
         */
        pick_sprite = 70060,
        /**
         * 投资礼包
         */
        invest_gift = 70070,
        /**
         * boss盛宴
         */
        feast_boss = 70080,
        /**
         * 跨服盛宴
         */
        feast_boss_cross = 70090,
        /**
         * 50级开启经验丹
         */
        jingyandan_1 = 80001,
        /**
         * 65或者VIP3开启
         */
        jingyandan_2 = 80002,
        /**
         * 75或者VIP5开启
         */
        jingyandan_3 = 80003,
        /**
         * 60级开启
         */
        xiuweidan_1 = 80004,
        /**
         * 70或VIP3开启
         */
        xiuweidan_2 = 80005,
        /**
         * 80或VIP5开启
         */
        xiuweidan_3 = 80006,
        /**
         * 等级开启
         */
        level_open = 80007,
        /**
         * 圣域龙灵
         */
        saint_dragon_spirit = 80008,
        /**
         * 黑市商店
         */
        black_store = 80009,
        /**
         * 超爽大爆
         */
        super_drop = 80010,
        /**
         * 限时超值礼包
         */
        mysterious_purchase = 80011,
        /**
         * Boss商城
         */
        boss_mall = 80012,
        /**
         * 游戏分享
         */
        share_game = 80013,
        /**
         * 战神宝库
         */
        zhan_shen_bao_ku = 80014,
        /**
         * 血染沙场
         */
        xue_ran_sha_cheng = 80015,
        /**
         * 玲珑塔
         */
        ling_long_tower = 80101,
        /**
         * 跨服活动
         */
        cross_server_act = 80201,
        /**
         * 装备
         */
        suit_equip = 80301,
        /**
         * 装备魂装
         */
        equip_god = 80401,
        /**
         * 经验副本
         */
        jing_yan_fu_ben = 80402,
        /**
         * 跨服附魔
         */
        cross_enchant = 80403,
        /**
         * 全民寻宝
         */
        all_people_treasure = 80404,
        /**
         * 称号活动
         */
        title_activity = 80405,
        /**
         * 掘金之路（元宝）
         */
        gold_digger_gold = 80406,
        /**
         * 掘金之路（圣龙币）
         */
        gold_digger_money = 80407,
        /**
         * 稀有BOSS悬赏
         */
        rare_boss_award = 80408,
        /**
         * 主界面快捷使用
         */
        short_cut_item_mainui = 80409,
        /**
         * 吉运卷轴生肖抽奖
         */
        ji_yun_Card = 80410,
        /**
         * 主界面商城按钮
         */
        mall_btn = 80411,
        /**
         * 帮会商城
         */
        guild_mall = 80412,
        /**
         * 福利boss
         */
        fu_li_boss = 80413,
        /**
         * 神兵降临（任务）
         */
        shen_bing_task = 80414,
        /**
         * 功能预告
         */
        func_preview = 80501,
        /**
         * 限时合成预告
         */
        limited_time_compound_forecast = 80502,
        /**
         * 神装合成预告
         */
        god_suit_compound_forecast = 80503,
        /**
         * 跨服
         */
        cross_realm = 80504,
        /**
         * 跨服争霸
         */
        cross_server_starcraft = 80505,
        /**
         * 工资系统
         */
        wage = 80506,
        /**
         * boss狂欢预告
         */
        boss_kuang_huan_forecast = 80507,
        /**
         * 祈福
         */
        qi_fu = 90001,
        /**
         * 猎魔
         */
        lie_mo = 90002,
        /**
         * 神武殿堂
         */
        shen_wu_dian_tang = 90004,
        /**
         * 幸运宝藏
         */
        xing_yun_bao_zang = 90005,
        /**
         * 限时任务窗口
         */
        limit_mission_window = 90006,
        /**
         * 限时任务1
         */
        limit_mission_1 = 90007,
        /**
         * 限时任务2
         */
        limit_mission_2 = 90008,
        /**
         * boss狂欢
         */
        boss_kuang_huan = 90009,
        /**
         * 新工资
         */
        new_wage = 90010,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumFriendRoomType {
        /**
         * 留言
         */
        leavemessage = 1,
        /**
         * 回复
         */
        reply = 2,
        /**
         * 修改
         */
        reviseinfo = 3,
        /**
         * 暂无
         */
        none = 4,
        /**
         * 查看
         */
        checkinfo = 5,
        /**
         * 点赞拍砖
         */
        praise = 6,
        /**
         * 删除留言
         */
        delete = 7,
    }
}
/**
 * File is automatically generated, Please do not modify
 * boss盛宴怪物状态
 */
declare module protocol {
    const enum EnumFeastBossState {
        /**
         * 无
         */
        none = 0,
        /**
         * 刷新
         */
        refresh = 1,
        /**
         * 健康
         */
        health = 2,
        /**
         * 受伤
         */
        hurt = 3,
        /**
         * 濒死
         */
        dying = 4,
        /**
         * 击杀
         */
        done = 5,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 时装枚举
 */
declare module protocol {
    const enum EnumFashionType {
        /**
         * 武器
         */
        weapon = 1,
        /**
         * 衣服
         */
        clothing = 2,
        /**
         * 套装
         */
        suit = 3,
        /**
         * 翅膀
         */
        wing = 4,
        /**
         * 刺杀
         */
        ci_sha = 5,
        /**
         * 半月
         */
        ban_yue = 6,
        /**
         * 烈火
         */
        lie_huo = 7,
        /**
         * 擒龙手
         */
        qin_long_shou = 8,
        /**
         * 逐日
         */
        zhu_ri = 9,
        /**
         * 施毒
         */
        shi_du = 10,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 对兑换的操作类型
 */
declare module protocol {
    const enum EnumExchangeOper {
        /**
         * 无
         */
        none = 0,
        /**
         * 活动-集字有礼
         */
        act_ji_zi_you_li = 1,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 兑换枚举消耗类型
 */
declare module protocol {
    const enum EnumExchangeCostType {
        /**
         * 属性类型
         */
        attr_type = 1,
        /**
         * 物品
         */
        item = 2,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumEquipShow {
        /**
         * 无
         */
        none = 0,
        /**
         * 神装
         */
        god = 1,
        /**
         * 时装
         */
        fashion = 2,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumEquipPos {
        /**
         * 无法装备
         */
        none = 0,
        /**
         * 武器
         */
        weapon = 100,
        /**
         * 衣服
         */
        clothing = 101,
        /**
         * 饰品1(头盔)
         */
        trinket_1 = 102,
        /**
         * 饰品2(项链)
         */
        trinket_2 = 103,
        /**
         * 饰品3(左手镯)
         */
        trinket_3 = 104,
        /**
         * 饰品4(右手镯)
         */
        trinket_4 = 105,
        /**
         * 饰品5(左戒指)
         */
        trinket_5 = 106,
        /**
         * 饰品6(右戒指)
         */
        trinket_6 = 107,
        /**
         * 饰品7(腰带)
         */
        trinket_7 = 108,
        /**
         * 饰品8(鞋子)
         */
        trinket_8 = 109,
        /**
         * 特戒1
         */
        special_1 = 110,
        /**
         * 特戒2
         */
        special_2 = 111,
        /**
         * 高级饰品1(虎符)
         */
        high_grade_1 = 112,
        /**
         * 高级饰品2(护镜)
         */
        high_grade_2 = 113,
        /**
         * 高级饰品3(肩甲)
         */
        high_grade_3 = 114,
        /**
         * 高级饰品4(腿甲)
         */
        high_grade_4 = 115,
        /**
         * 翅膀部件1
         */
        wing_1 = 116,
        /**
         * 翅膀部件2
         */
        wing_2 = 117,
        /**
         * 翅膀部件3
         */
        wing_3 = 118,
        /**
         * 翅膀部件4
         */
        wing_4 = 119,
        /**
         * 特戒3
         */
        special_3 = 129,
        /**
         * 命装_灵幡
         */
        GW_lingfan = 131,
        /**
         * 命装_布袋
         */
        GW_tongling = 132,
        /**
         * 命装_罗盘
         */
        GW_budai = 133,
        /**
         * 命装_桃签
         */
        GW_xingbi = 134,
        /**
         * 命装_铜铃
         */
        GW_taoqian = 135,
        /**
         * 命装_铜钱
         */
        GW_luopan = 136,
        /**
         * 命装_护臂
         */
        GW_xingdai = 137,
        /**
         * 命装_护肩
         */
        GW_xingxue = 138,
        /**
         * 圣剑
         */
        TL_shenmao = 139,
        /**
         * 圣甲
         */
        TL_shendun = 140,
        /**
         * 圣盔
         */
        TL_zuojian = 141,
        /**
         * 圣链
         */
        TL_youjian = 142,
        /**
         * 圣手
         */
        TL_zuobi = 143,
        /**
         * 圣镯
         */
        TL_youbi = 144,
        /**
         * 圣戒
         */
        JM_lingfan = 145,
        /**
         * 圣指
         */
        JM_tongling = 146,
        /**
         * 圣带
         */
        JM_budai = 147,
        /**
         * 圣靴
         */
        JM_xingbi = 148,
        /**
         * 巨门桃签(废)
         */
        JM_taoqian = 149,
        /**
         * 巨门罗盘(废)
         */
        JM_luopan = 150,
        /**
         * 圣印1
         */
        sheng_yin1 = 151,
        /**
         * 圣印1
         */
        sheng_yin2 = 152,
        /**
         * 圣印3
         */
        sheng_yin3 = 153,
        /**
         * 圣印4
         */
        sheng_yin4 = 154,
        /**
         * 圣印5
         */
        sheng_yin5 = 155,
        /**
         * 圣印6
         */
        sheng_yin6 = 156,
        /**
         * 圣印7
         */
        sheng_yin7 = 157,
        /**
         * 圣印8
         */
        sheng_yin8 = 158,
        /**
         * 魂牌1(废)
         */
        hun_pai1 = 160,
        /**
         * 魂牌2(废)
         */
        hun_pai2 = 161,
        /**
         * 魂牌3(废)
         */
        hun_pai3 = 162,
        /**
         * 魂牌4(废)
         */
        hun_pai4 = 163,
        /**
         * 魂牌5(废)
         */
        hun_pai5 = 164,
        /**
         * 魂牌6(废)
         */
        hun_pai6 = 165,
        /**
         * 魂牌7(废)
         */
        hun_pai7 = 166,
        /**
         * 魂牌8(废)
         */
        hun_pai8 = 167,
        /**
         * 魂牌9(废)
         */
        hun_pai9 = 168,
        /**
         * 符文1
         */
        fu_wen1 = 170,
        /**
         * 符文2
         */
        fu_wen2 = 171,
        /**
         * 符文3
         */
        fu_wen3 = 172,
        /**
         * 符文4
         */
        fu_wem4 = 173,
        /**
         * 符文5
         */
        fu_wen5 = 174,
        /**
         * 符文6
         */
        fu_wen6 = 175,
        /**
         * 符文7
         */
        fu_wen7 = 176,
        /**
         * 符文8
         */
        fu_wen8 = 177,
        /**
         * 符文9
         */
        fu_wen9 = 178,
        /**
         * 符文10
         */
        fu_wen10 = 179,
        /**
         * 生肖1
         */
        shengxiao_1 = 181,
        /**
         * 生肖2
         */
        shengxiao_2 = 182,
        /**
         * 生肖3
         */
        shengxiao_3 = 183,
        /**
         * 生肖4
         */
        shengxiao_4 = 184,
        /**
         * 生肖5
         */
        shengxiao_5 = 185,
        /**
         * 生肖6
         */
        shengxiao_6 = 186,
        /**
         * 生肖7
         */
        shengxiao_7 = 187,
        /**
         * 生肖8
         */
        shengxiao_8 = 188,
        /**
         * 生肖9
         */
        shengxiao_9 = 189,
        /**
         * 生肖10
         */
        shengxiao_10 = 190,
        /**
         * 生肖11
         */
        shengxiao_11 = 191,
        /**
         * 生肖12
         */
        shengxiao_12 = 192,
        /**
         * 跨服副装部件1(天盾)
         */
        cross_vice_1 = 193,
        /**
         * 跨服副装部件2(嗜血)
         */
        cross_vice_2 = 194,
        /**
         * 跨服副装部件3(灵铠)
         */
        cross_vice_3 = 195,
        /**
         * 跨服副装部件4(护符)
         */
        cross_vice_4 = 196,
        /**
         * 宝石1
         */
        gem_1 = 500,
        /**
         * 宝石2
         */
        gem_2 = 501,
        /**
         * 宝石3
         */
        gem_3 = 502,
        /**
         * 宝石4
         */
        gem_4 = 503,
        /**
         * 宝石5
         */
        gem_5 = 504,
        /**
         * 宝石6
         */
        gem_6 = 505,
        /**
         * 宝石7
         */
        gem_7 = 506,
        /**
         * 宝石8
         */
        gem_8 = 507,
        /**
         * 宝石9
         */
        gem_9 = 508,
        /**
         * 宝石10
         */
        gem_10 = 509,
        /**
         * 宝石11
         */
        gem_11 = 510,
        /**
         * 宝石12
         */
        gem_12 = 511,
        /**
         * 宝石13
         */
        gem_13 = 512,
        /**
         * 宝石14
         */
        gem_14 = 513,
        /**
         * 宝石15
         */
        gem_15 = 514,
        /**
         * 宝石16
         */
        gem_16 = 515,
        /**
         * 宝石17
         */
        gem_17 = 516,
        /**
         * 宝石18
         */
        gem_18 = 517,
        /**
         * 宝石19
         */
        gem_19 = 518,
        /**
         * 宝石20
         */
        gem_20 = 519,
        /**
         * 宝石21
         */
        gem_21 = 520,
        /**
         * 宝石22
         */
        gem_22 = 521,
        /**
         * 宝石23
         */
        gem_23 = 522,
        /**
         * 宝石24
         */
        gem_24 = 523,
        /**
         * 宝石25
         */
        gem_25 = 524,
        /**
         * 宝石26
         */
        gem_26 = 525,
        /**
         * 宝石27
         */
        gem_27 = 526,
        /**
         * 宝石28
         */
        gem_28 = 527,
        /**
         * 宝石29
         */
        gem_29 = 528,
        /**
         * 宝石30
         */
        gem_30 = 529,
        /**
         * 宝石31
         */
        gem_31 = 530,
        /**
         * 宝石32
         */
        gem_32 = 531,
        /**
         * 宝石33
         */
        gem_33 = 532,
        /**
         * 宝石34
         */
        gem_34 = 533,
        /**
         * 宝石35
         */
        gem_35 = 534,
        /**
         * 宝石36
         */
        gem_36 = 535,
        /**
         * 宝石37
         */
        gem_37 = 536,
        /**
         * 宝石38
         */
        gem_38 = 537,
        /**
         * 宝石39
         */
        gem_39 = 538,
        /**
         * 宝石40
         */
        gem_40 = 539,
        /**
         * 宝石41
         */
        gem_41 = 540,
        /**
         * 宝石42
         */
        gem_42 = 541,
        /**
         * 宝石43
         */
        gem_43 = 542,
        /**
         * 宝石44
         */
        gem_44 = 543,
        /**
         * 宝石45
         */
        gem_45 = 544,
        /**
         * 宝石46
         */
        gem_46 = 545,
        /**
         * 宝石47
         */
        gem_47 = 546,
        /**
         * 宝石48
         */
        gem_48 = 547,
        /**
         * 宝石49
         */
        gem_49 = 548,
        /**
         * 宝石50
         */
        gem_50 = 549,
        /**
         * 宝石51
         */
        gem_51 = 550,
        /**
         * 宝石52
         */
        gem_52 = 551,
        /**
         * 宝石53
         */
        gem_53 = 552,
        /**
         * 宝石54
         */
        gem_54 = 553,
        /**
         * 宝石55
         */
        gem_55 = 554,
        /**
         * 宝石56
         */
        gem_56 = 555,
        /**
         * 宝石57
         */
        gem_57 = 556,
        /**
         * 宝石58
         */
        gem_58 = 557,
        /**
         * 宝石59
         */
        gem_59 = 558,
        /**
         * 宝石60
         */
        gem_60 = 559,
        /**
         * 卡牌1
         */
        brand_1 = 600,
        /**
         * 卡牌2
         */
        brand_2 = 601,
        /**
         * 卡牌3
         */
        brand_3 = 602,
        /**
         * 卡牌4
         */
        brand_4 = 603,
        /**
         * 卡牌5
         */
        brand_5 = 604,
        /**
         * 卡牌6
         */
        brand_6 = 605,
        /**
         * 卡牌7
         */
        brand_7 = 606,
        /**
         * 卡牌8
         */
        brand_8 = 607,
        /**
         * 卡牌9
         */
        brand_9 = 608,
        /**
         * 神装武器
         */
        god_weapon = 700,
        /**
         * 神装衣服
         */
        god_clothing = 701,
        /**
         * 魂装天-武器
         */
        HZ_tian_weapon = 710,
        /**
         * 魂装天-衣服
         */
        HZ_tian_clothing = 711,
        /**
         * 魂装天-头盔
         */
        HZ_tian_trinket_1 = 712,
        /**
         * 魂装天-项链
         */
        HZ_tian_trinket_2 = 713,
        /**
         * 魂装天-手
         */
        HZ_tian_trinket_3 = 714,
        /**
         * 魂装天-镯
         */
        HZ_tian_trinket_4 = 715,
        /**
         * 魂装天-戒
         */
        HZ_tian_trinket_5 = 716,
        /**
         * 魂装天-指
         */
        HZ_tian_trinket_6 = 717,
        /**
         * 魂装天-腰带
         */
        HZ_tian_trinket_7 = 718,
        /**
         * 魂装天-鞋
         */
        HZ_tian_trinket_8 = 719,
        /**
         * 魂装地-武器
         */
        HZ_di_weapon = 720,
        /**
         * 魂装地-衣服
         */
        HZ_di_clothing = 721,
        /**
         * 魂装地-头盔
         */
        HZ_di_trinket_1 = 722,
        /**
         * 魂装地-项链
         */
        HZ_di_trinket_2 = 723,
        /**
         * 魂装地-手
         */
        HZ_di_trinket_3 = 724,
        /**
         * 魂装地-镯
         */
        HZ_di_trinket_4 = 725,
        /**
         * 魂装地-戒
         */
        HZ_di_trinket_5 = 726,
        /**
         * 魂装地-指
         */
        HZ_di_trinket_6 = 727,
        /**
         * 魂装地-腰带
         */
        HZ_di_trinket_7 = 728,
        /**
         * 魂装地-鞋
         */
        HZ_di_trinket_8 = 729,
        /**
         * 魂装玄-武器
         */
        HZ_xuan_weapon = 730,
        /**
         * 魂装玄-衣服
         */
        HZ_xuan_clothing = 731,
        /**
         * 魂装玄-头盔
         */
        HZ_xuan_trinket_1 = 732,
        /**
         * 魂装玄-项链
         */
        HZ_xuan_trinket_2 = 733,
        /**
         * 魂装玄-手
         */
        HZ_xuan_trinket_3 = 734,
        /**
         * 魂装玄-镯
         */
        HZ_xuan_trinket_4 = 735,
        /**
         * 魂装玄-戒
         */
        HZ_xuan_trinket_5 = 736,
        /**
         * 魂装玄-指
         */
        HZ_xuan_trinket_6 = 737,
        /**
         * 魂装玄-腰带
         */
        HZ_xuan_trinket_7 = 738,
        /**
         * 魂装玄-鞋
         */
        HZ_xuan_trinket_8 = 739,
        /**
         * 铭文1
         */
        ming_wen_1 = 740,
        /**
         * 铭文2
         */
        ming_wen_2 = 741,
        /**
         * 铭文3
         */
        ming_wen_3 = 742,
        /**
         * 铭文4
         */
        ming_wen_4 = 743,
        /**
         * 铭文5
         */
        ming_wen_5 = 744,
        /**
         * 铭文6
         */
        ming_wen_6 = 745,
        /**
         * 铭文7
         */
        ming_wen_7 = 746,
        /**
         * 铭文8
         */
        ming_wen_8 = 747,
        /**
         * 觉醒0
         */
        new_awaken_0 = 750,
        /**
         * 觉醒1
         */
        new_awaken_1 = 751,
        /**
         * 觉醒2
         */
        new_awaken_2 = 752,
        /**
         * 觉醒3
         */
        new_awaken_3 = 753,
        /**
         * 觉醒4
         */
        new_awaken_4 = 754,
        /**
         * 觉醒5
         */
        new_awaken_5 = 755,
        /**
         * 觉醒6
         */
        new_awaken_6 = 756,
        /**
         * 觉醒7
         */
        new_awaken_7 = 757,
        /**
         * 觉醒8
         */
        new_awaken_8 = 758,
        /**
         * 英雄武器
         */
        hero_weapon = 1000,
        /**
         * 英雄衣服
         */
        hero_clothing = 1001,
        /**
         * 英雄饰品1(头盔)
         */
        hero_trinket_1 = 1002,
        /**
         * 英雄饰品2(项链)
         */
        hero_trinket_2 = 1003,
        /**
         * 英雄饰品3(左手镯)
         */
        hero_trinket_3 = 1004,
        /**
         * 英雄饰品4(右手镯)
         */
        hero_trinket_4 = 1005,
        /**
         * 英雄饰品5(左戒指)
         */
        hero_trinket_5 = 1006,
        /**
         * 英雄饰品6(右戒指)
         */
        hero_trinket_6 = 1007,
        /**
         * 英雄饰品7(腰带)
         */
        hero_trinket_7 = 1008,
        /**
         * 英雄饰品8(鞋子)
         */
        hero_trinket_8 = 1009,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 装备分类:主装/福装(副装:圣装,命装，生肖，符文)等
 */
declare module protocol {
    const enum EnumEquipKind {
        /**
         * 无
         */
        none = 0,
        /**
         * 副装:宝石(现版本是装备)
         */
        gem = 2,
        /**
         * 副装:魂装
         */
        vice_hunzhuang = 4,
        /**
         * 主装
         */
        equip = 6,
        /**
         * 副装:圣装
         */
        vice_shengzhuang = 12,
        /**
         * 副装:生肖
         */
        vice_shengxiao = 13,
        /**
         * 副装:命装
         */
        vice_mingzhuang = 14,
        /**
         * 副装:新觉醒
         */
        vice_newAwken = 15,
        /**
         * 副装:符文
         */
        vice_fuwen = 23,
        /**
         * 副装:跨服副装
         */
        cross_vice_equip = 25,
        /**
         * 副装:铭文
         */
        vice_mingwen = 26,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 附魔类型枚举
 */
declare module protocol {
    const enum EnumEnchantmentType {
        /**
         *
         */
        none = 0,
        /**
         * 至尊圣剑
         */
        type1 = 1,
        /**
         * 至尊玲珑
         */
        type2 = 2,
        /**
         * 至尊承影
         */
        type3 = 3,
        /**
         * 至尊灵镜
         */
        type4 = 4,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 附魔材料类型
 */
declare module protocol {
    const enum EnumEnchantmentMaeriaisType {
        /**
         *
         */
        node = 0,
        /**
         * 高级
         */
        advanced = 1,
        /**
         * 普通
         */
        common = 2,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumDropType {
        /**
         * 未知
         */
        unknown = 0,
        /**
         * 元宝
         */
        gold = 1,
        /**
         * 物品
         */
        item = 2,
        /**
         * 钻石
         */
        money = 3,
        /**
         * 礼卷
         */
        money_coupon = 4,
        /**
         * 创世币
         */
        coin = 5,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumDmgType {
        /**
         * 无
         */
        none = 0,
        /**
         * 普通
         */
        normal = 1,
        /**
         * 破防
         */
        break_def = 2,
        /**
         * 暴击
         */
        cri = 3,
        /**
         * 合击
         */
        he_ji = 4,
        /**
         * 闪避
         */
        miss = 5,
        /**
         * 反伤
         */
        fan_shang = 6,
        /**
         * 加血
         */
        healing = 7,
        /**
         * 神圣
         */
        holy = 8,
        /**
         * 压制
         */
        yazhi = 9,
        /**
         * 护卫/战宠攻击
         */
        mars = 10,
        /**
         * 无双技能
         */
        xp_skill = 11,
        /**
         * 灵佑守护
         */
        shouhu = 12,
        /**
         * 连击
         */
        lianji = 13,
        /**
         * 神罚
         */
        shen_fa = 14,
        /**
         * 灭杀
         */
        mie_sha = 15,
        /**
         * 麻痹(角色)
         */
        ma_bi = 16,
        /**
         * 切割
         */
        qie_ge = 17,
        /**
         * 切割暴击
         */
        qie_ge_cri = 18,
        /**
         * 双倍伤害
         */
        double_hurt = 19,
        /**
         * 三倍伤害
         */
        third_hurt = 20,
        /**
         * 减速免疫
         */
        dece_Immune = 21,
        /**
         * 对怪伤害免疫
         */
        unit_hurt_Immune = 22,
        /**
         * 斩杀
         */
        beheaded = 23,
        /**
         * 麻痹(战宠)
         */
        mars_ma_bi = 24,
        /**
         * 双倍暴击
         */
        cri_double = 25,
        /**
         * 三倍暴击
         */
        cri_triple = 26,
        /**
         * 四倍暴击
         */
        cri_quadruple = 27,
        /**
         * 移除一个Buff
         */
        remove_self_once_buff = 28,
        /**
         * 移除所有Buff
         */
        remove_self_all_buff = 29,
        /**
         * 双倍防御
         */
        double_defense = 30,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumDirection {
        /**
         * 未知
         */
        unknown = 0,
        /**
         * 上
         */
        up = 1,
        /**
         * 右上
         */
        right_up = 2,
        /**
         * 右
         */
        right = 3,
        /**
         * 右下
         */
        right_down = 4,
        /**
         * 下
         */
        down = 5,
        /**
         * 左下
         */
        left_down = 6,
        /**
         * 左
         */
        left = 7,
        /**
         * 左上
         */
        left_up = 8,
        /**
         * (取随机方向用)
         */
        random = 9,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumDeadType {
        /**
         * 普通死亡
         */
        normal = 0,
        /**
         * 攻城战死亡
         */
        gong_cheng_zhan = 1,
        /**
         * 旋云之巅死亡
         */
        xuan_yun_zhi_dian = 2,
        /**
         * 遗忘秘境五层
         */
        yi_wang_mi_jing_five = 3,
        /**
         * 组队副本死亡
         */
        team_clone_die = 4,
        /**
         * 生存战场死亡
         */
        sheng_cun_zhan_chang = 5,
        /**
         * 死亡不弹面板
         */
        unPnel = 6,
        /**
         * 屠魔猎场
         */
        tumo_hunting = 7,
        /**
         * 跨服争霸(GVG1)
         */
        kua_fu_zheng_ba_dead = 8,
        /**
         * 圣龙争霸(GVG2)
         */
        sheng_long_zhang_ba_dead = 9,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 日活跃宝箱状态
 */
declare module protocol {
    const enum EnumDailyAwardState {
        /**
         * 不可领取
         */
        not_receive = 0,
        /**
         * 等待领取
         */
        receive = 1,
        /**
         * 已经领取
         */
        already_received = 2,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumDailyActivityState {
        /**
         * 立即前往
         */
        start = 0,
        /**
         * 即将开始
         */
        ready = 1,
        /**
         * 未开启
         */
        close = 2,
        /**
         * 已结束
         */
        ended = 3,
        /**
         * 停止进入
         */
        stop = 4,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumDailyActivityID {
        /**
         * 旋云之巅
         */
        xuan_yun_zhi_dian = 1,
        /**
         * 帮会篝火
         */
        guild_fire = 2,
        /**
         * 答题1
         */
        da_ti_1 = 3,
        /**
         * 答题2
         */
        da_ti_2 = 4,
        /**
         * 答题步步为营
         */
        da_ti_3 = 5,
        /**
         * 神威魔域1
         */
        shen_wei_mo_yu_1 = 6,
        /**
         * 结晶兽
         */
        jie_jing_shou = 7,
        /**
         * 精英阁
         */
        jing_ying_ge = 8,
        /**
         * 迷魂殿堂
         */
        mi_hun_dian_tang = 9,
        /**
         * 神武殿堂
         */
        shen_wei_pao_dian = 10,
        /**
         * 遗忘秘境
         */
        yi_wang_mi_jing = 11,
        /**
         * 深渊大厅
         */
        shen_yuan_da_ting = 12,
        /**
         * 神威魔域2
         */
        shen_wei_mo_yu_2 = 13,
        /**
         * 领地战
         */
        manor_battle = 14,
        /**
         * 无双战
         */
        wu_shuang_battle = 15,
        /**
         * 元宝大作战
         */
        yuan_bao_da_zuo_zhan = 17,
        /**
         * 生存战场
         */
        sheng_cun_zhan_chang = 18,
        /**
         * 怪物攻城
         */
        guai_wu_gong_cheng = 19,
        /**
         * 安全矿区
         */
        an_quan_kuang_qu = 20,
        /**
         * 帮会押镖
         */
        bang_hui_ya_biao = 22,
        /**
         * 碎银矿脉
         */
        sui_yin_kuang_mai = 23,
        /**
         * 聊天答题
         */
        chat_answer = 24,
        /**
         * 山贼入侵
         */
        shan_zei_ru_qin = 25,
        /**
         * 虚幻洞窟
         */
        xu_huan_dong_ku = 26,
        /**
         * 材料盛宴
         */
        cai_liao_sheng_yan = 27,
        /**
         * 全民饮酒1，策划要一天开两次，活动底层不支持一天开两次新加一个ID
         */
        quan_min_yin_jiu1 = 28,
        /**
         * 全民饮酒
         */
        quan_min_yin_jiu = 29,
        /**
         * 双倍押镖1
         */
        shuang_bei_ya_biao_1 = 30,
        /**
         * 双倍挖矿
         */
        shuang_bei_wa_kuang = 31,
        /**
         * 虚空幻境
         */
        xu_kong_huan_jing = 32,
        /**
         * 守卫盟重
         */
        shou_wei_meng_zhong = 33,
        /**
         * 答题
         */
        da_ti = 34,
        /**
         * 天降洪福
         */
        tian_jiang_hong_fu = 35,
        /**
         * 斩将夺旗
         */
        zhan_jiang_duo_qi = 36,
        /**
         * 洞窟探宝
         */
        dong_ku_tan_bao = 37,
        /**
         * 双倍押镖2，策划要一天开两次，活动底层不支持一天开两次新加一个ID
         */
        shuang_bei_ya_biao_2 = 38,
        /**
         * 远古神殿
         */
        yuan_gu_shen_dian = 39,
        /**
         * 四象祭台
         */
        si_xiang_ji_tai = 42,
        /**
         * 守卫比奇
         */
        shou_wei_bi_qi = 43,
        /**
         * 神域探宝
         */
        shen_yu_tan_bao = 44,
        /**
         * 热血矿区
         */
        blood_mine = 99,
        /**
         * 攻城战
         */
        gong_cheng_zhan = 111,
        /**
         * 沙城争霸
         */
        sha_cheng_zheng_ba = 112,
        /**
         * 膜拜城主1
         */
        mo_bai_cheng_zhu_1 = 113,
        /**
         * 膜拜城主2
         */
        mo_bai_cheng_zhu_2 = 114,
        /**
         * 囚魔之路
         */
        prisoner_road = 202,
        /**
         * 囚魔之路2
         */
        prisoner_road_2 = 203,
        /**
         * 跨服BOSS
         */
        cross_world_boss = 301,
        /**
         * 卧龙山庄
         */
        wo_long_shan_zhuang = 302,
        /**
         * 卧龙大殿
         */
        wo_long_da_dian = 303,
        /**
         * 卧龙秘境1层
         */
        wo_long_mi_jing1 = 304,
        /**
         * 卧龙秘境2层
         */
        wo_long_mi_jing2 = 305,
        /**
         * 跨服战场
         */
        cross_world_battleground = 306,
        /**
         *
         */
        cross_counterfeit = 307,
        /**
         *
         */
        cross_counterfeitB = 308,
        /**
         * 四象封印
         */
        si_xiang_feng_yin_1 = 309,
        /**
         * 四象封印
         */
        si_xiang_feng_yin_2 = 310,
        /**
         * 生化战场
         */
        biochemical_battle = 311,
        /**
         * 膜拜城主(上午)
         */
        fairy_dragon_worship = 312,
        /**
         * 膜拜城主(下午)
         */
        fairy_dragon_worship_two = 313,
        /**
         * 屠魔猎场
         */
        tumo_hunting = 314,
        /**
         * 跨服争霸(GVG1)
         */
        kua_fu_zheng_ba = 315,
        /**
         * 圣龙战场(GVG2)
         */
        sheng_long_zhan_chang = 316,
        /**
         * boss盛宴
         */
        feast_boss = 317,
        /**
         * 跨服盛宴
         */
        feast_boss_cross = 318,
        /**
         * 金猪降临(上午)
         */
        golen_pig_come = 319,
        /**
         * 帮会守护
         */
        bang_hui_shou_hu = 320,
        /**
         * 金猪降临(下午)
         */
        golen_pig_come_2 = 321,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服竞技-竞技奖励条件类型
 */
declare module protocol {
    const enum EnumCrossSportCondition {
        /**
         *
         */
        none = 0,
        /**
         * 条件-附魔1_至尊圣剑
         */
        enchantment_1 = 1,
        /**
         * 条件-附魔2_至尊玲珑
         */
        enchantment_2 = 2,
        /**
         * 条件-附魔3_至尊承影
         */
        enchantment_3 = 3,
        /**
         * 条件-附魔4_至尊灵境
         */
        enchantment_4 = 4,
        /**
         * 条件-跨服日常竞技
         */
        ri_chang = 5,
        /**
         * 条件-跨服饮酒竞技
         */
        drink_wine = 6,
        /**
         * 条件-跨服神装竞技
         */
        shen_zhaung = 7,
        /**
         * 条件-跨服神阶竞技
         */
        shen_jie = 8,
        /**
         * 条件-跨服副装竞技
         */
        cross_vice_equip = 9,
        /**
         * 条件-跨服护盾养成
         */
        shield = 10,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服类型
 */
declare module protocol {
    const enum EnumCrossServerType {
        /**
         * 正常逻辑服
         */
        cst_normal = 0,
        /**
         * 跨服卧龙山庄(应该是集散地)
         */
        cst_wo_long_shang_zhuang = 1,
        /**
         * 跨服BOSS
         */
        cst_cross_boss = 2,
        /**
         * io
         */
        cst_io = 3,
        /**
         * 跨服组跨服
         */
        cst_team_cross = 4,
        /**
         * 跨服3v3
         */
        cst_moba_3v3 = 101,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服竞技类型
 */
declare module protocol {
    const enum EnumCrossAthleticsType {
        /**
         *
         */
        none = 0,
        /**
         * 附魔1_至尊圣剑
         */
        enchantment_1 = 1,
        /**
         * 附魔2_至尊玲珑
         */
        enchantment_2 = 2,
        /**
         * 附魔3_至尊承影
         */
        enchantment_3 = 3,
        /**
         * 附魔4_至尊灵境
         */
        enchantment_4 = 4,
        /**
         * 跨服日常竞技
         */
        ri_chang = 5,
        /**
         * 跨服饮酒竞技
         */
        drink_wine = 6,
        /**
         * 跨服神装竞技
         */
        shen_zhaung = 7,
        /**
         * 跨服神阶竞技
         */
        shen_jie = 8,
        /**
         * 跨服副装竞技
         */
        cross_vice_equip = 9,
        /**
         * 跨服护盾养成
         */
        shield = 10,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 玩家创建角色数量
 */
declare module protocol {
    const enum EnumCreateRoleCount {
        /**
         * 玩家创建角色数量
         */
        create_role_count = 3,
    }
}
/**
 * File is automatically generated, Please do not modify
 * //杂数据表定义
 */
declare module protocol {
    const enum EnumConstantValue {
        /**
         * 昵称最大长度
         */
        name_max_len = 101,
        /**
         * 召唤单位默认改变到return状态得最大距离
         */
        summon_default_change_return_state_max_distance = 104,
        /**
         * 召唤单位其他状态改变到return状态得最大距离
         */
        summon_othore_change_return_state_max_distance = 105,
        /**
         * 护卫单位id
         */
        mars_unit_id = 106,
        /**
         * 战宠跟随模式改变目标时间间隔
         */
        mars_change_target_time = 107,
        /**
         * 麻痹buffid
         */
        ma_bi_buff_id = 108,
        /**
         * 怪物死亡上下击退距离
         */
        unit_dead_fly_dis_up_down = 109,
        /**
         * 怪物死亡其它方向击退距离
         */
        unit_dead_fly_dis_other = 110,
        /**
         * 击退移动时间（毫秒）
         */
        unit_be_fly_time = 111,
        /**
         * 受击抖动时间
         */
        beAttack_time = 112,
        /**
         * 受击抖动X
         */
        beAttack_x = 113,
        /**
         * 受击抖动Y
         */
        beAttack_y = 114,
        /**
         * 自动拾取时间间隔
         */
        auto_pick_up_interval = 115,
        /**
         * 剧情任务是否开启
         */
        polt_open = 116,
        /**
         * 收益提示开启等级
         */
        earning_open_lv = 117,
        /**
         * BOSS虚弱缩小比例
         */
        boss_xuruo_scale_num = 118,
        /**
         * BOSS缩小所用时间
         */
        boss_xuruo_scale_time = 119,
        /**
         * 变羊模型
         */
        longwei_buff_id = 120,
        /**
         * 减速buffID
         */
        dece_buffid = 121,
        /**
         * 减速对抗属性BUFF ID
         */
        dece_confront_buffid = 122,
        /**
         * 麻痹Buff类型
         */
        ma_bi_buff_kind_type = 123,
        /**
         * 免疫dbuff
         */
        immnue_dbuff_buffId = 124,
        /**
         * 固定暴击
         */
        fiexd_cri = 125,
        /**
         * 诅咒BuffId
         */
        curse_buff_id = 126,
        /**
         * 高级诅咒BuffId
         */
        advanced_curse_buff_id = 127,
        /**
         * 超级诅咒BuffId
         */
        super_curse_buff_id = 128,
        /**
         * 诅咒冷却BuffId
         */
        curse_cd_buff_id = 129,
        /**
         * 暴击伤害三倍BuffId
         */
        cri_triple_buffId = 130,
        /**
         * 暴击伤害四倍BuffId
         */
        cri_quadruple_buffId = 131,
        /**
         * 死亡掉落物品保护最大次数
         */
        dead_drop_out_item_protect_max_count = 132,
        /**
         * 自动回城保护检测间隔S
         */
        auto_use_item_logic_interval = 133,
        /**
         * 清除角色对单位的仇恨值的间隔时间
         */
        clear_unit_enemy_threat_time = 134,
        /**
         * 自动吃药检测间隔S
         */
        auto_use_drug_logic_interval = 135,
        /**
         * 创角初始地图ID
         */
        born_map_id = 201,
        /**
         * 创角初始地图X坐标
         */
        born_point_x = 202,
        /**
         * 创角初始地图Y坐标
         */
        born_point_y = 203,
        /**
         * 创角偏移量
         */
        born_point_off = 204,
        /**
         * 护卫喊话时间
         */
        mars_talk_time = 214,
        /**
         * 英雄攻击提升比例
         */
        hero_atk_add = 219,
        /**
         * 英雄免伤增加值
         */
        hero_dmg_add = 220,
        /**
         * 修改战宠攻击模式的等级
         */
        mars_modif_atk_mode_lv = 222,
        /**
         * 初始装备套装1
         */
        equip_suit_1 = 223,
        /**
         * 初始装备套装2
         */
        equip_suit_2 = 224,
        /**
         * 初始装备套装3
         */
        equip_suit_3 = 225,
        /**
         * 初始装备套装4
         */
        equip_suit_4 = 226,
        /**
         * 命装套装属性起始（角色面板用）
         */
        equip_vice_lu_cun_id = 227,
        /**
         * 装备4件套属性起始1
         */
        equip_suit_5 = 228,
        /**
         * 装备4件套属性起始2
         */
        equip_suit_6 = 229,
        /**
         * 装备8件套属性起始3
         */
        equip_suit_7 = 230,
        /**
         * 圣装4件套默认属性
         */
        gold_suit_1 = 231,
        /**
         * 圣装8件套默认属性
         */
        gold_suit_2 = 232,
        /**
         * 圣装10件套默认属性
         */
        gold_suit_3 = 233,
        /**
         * 命装8件套默认id
         */
        equip_vice_lu_cun_id8 = 234,
        /**
         * 八卦装备套装属性起始6件
         */
        sheng_xiao_6_suit_id = 235,
        /**
         * 八卦装备套装属性起始8件
         */
        sheng_xiao_10_suit_id = 236,
        /**
         * 铭文默认1阶4件套
         */
        ming_wen_suit_1 = 237,
        /**
         * 铭文默认1阶8件套
         */
        ming_wen_suit_2 = 238,
        /**
         * 背包格子数量
         */
        item_bag_count = 301,
        /**
         * 初始仓库格数
         */
        item_storage_initial = 302,
        /**
         * 仓库最大页数
         */
        item_storage_page = 303,
        /**
         * 每页仓库最大物品个数
         */
        item_storage_grid = 304,
        /**
         * 物品掉在地上消失时间
         */
        item_drop_duration_time = 305,
        /**
         * 传送石ID
         */
        item_transfer_stone_id = 306,
        /**
         * 初始暴击伤害比例
         */
        cri_up = 401,
        /**
         * 邮件持续时间
         */
        mail_effective_time = 402,
        /**
         * 邮件最大数量
         */
        mail_max_count = 403,
        /**
         * 角色最大邮件数
         */
        mail_role_full_mail = 404,
        /**
         * 回收改变规则天数天数
         */
        recycle_day = 501,
        /**
         * 回收改变之前回收装备最大套数
         */
        recycle_team_min = 502,
        /**
         * 回收改变之后回收装备最大套数
         */
        recycle_team_max = 503,
        /**
         * 回收改变之前回收装备最大强化等级
         */
        recycle_strengthen_min = 504,
        /**
         * 回收改变之后回收装备最大强化等级
         */
        recycle_strengthen_max = 505,
        /**
         * 回收每日最大经验
         */
        recycle_exp_max = 506,
        /**
         * 禁止回收最小组别
         */
        recycle_team_min_limit = 507,
        /**
         * 回收最大等级
         */
        recycle_max_level = 508,
        /**
         * 7天前回收强化最高等级(包括第7天)
         */
        recycle_SevenDayAgo_MaxLevel = 512,
        /**
         * 8天后回收强化最高等级
         */
        recycle_EightDayLater_MaxLevel = 513,
        /**
         * X级之后装备回收界面显示两个按钮
         */
        show_recycle_btn_2 = 514,
        /**
         * X级之后装备回收值显示vip回收按钮
         */
        show_recycle_btn_vip = 515,
        /**
         * 2人组队加成
         */
        team_exp_2 = 520,
        /**
         * 3人组队加成
         */
        team_exp_3 = 521,
        /**
         * 4人组队加成
         */
        team_exp_4 = 522,
        /**
         * 5人组队加成
         */
        team_exp_5 = 523,
        /**
         * 主界面随机石提示等级下限
         */
        rand_strone_level_limit_donwn = 524,
        /**
         * 主界面随机石提示等级上限
         */
        rand_strone_level_limit_up = 525,
        /**
         * 最大组队人数
         */
        team_max_member_count = 600,
        /**
         * 组队后队友人数对经验加成比例
         */
        team_exp = 601,
        /**
         * 自动组队最大等级
         */
        team_level_max = 602,
        /**
         * 向服务器请求最大的附近的人的数量
         */
        team_near_player_max_count = 603,
        /**
         * 组队副本免费复活次数
         */
        team_free_relive_count = 604,
        /**
         * 组队副本花费元宝复活次数
         */
        team_cost_relive_count = 605,
        /**
         * 组队副本超时时间
         */
        team_clone_time_limit = 606,
        /**
         * 组队平台匹配最大时间秒
         */
        team_matching_max_time = 607,
        /**
         * 组队平台附近按钮刷新CD
         */
        team_refresh_near = 608,
        /**
         * 组队一键喊话CD
         */
        team_one_key_talk = 609,
        /**
         * 装备回收传送点ID
         */
        equiprecycle_transformID = 610,
        /**
         * 原地复活需要元宝数量
         */
        relive_need_money = 700,
        /**
         * 原地复活血量万分比
         */
        role_relive_immediately_hp = 701,
        /**
         * 原地复活魔法量万分比
         */
        role_relive_immediately_mp = 702,
        /**
         * 回城复活血量万分比
         */
        role_relive_back_hp = 703,
        /**
         * 回城复活魔法量万分比
         */
        role_relive_back_mp = 704,
        /**
         * 原地复活护盾万分比
         */
        role_relive_immediately_neigong = 705,
        /**
         * 回城复活护盾万分比
         */
        role_relive_back_neigong = 706,
        /**
         * 初始复活元宝数
         */
        role_relive_min_need_money = 707,
        /**
         * 最大复活元宝数
         */
        role_relive_max_need_money = 708,
        /**
         * 递增复活元宝数
         */
        role_relive_add_need_money = 709,
        /**
         * 复活恢复血量等级限制
         */
        role_relive_level_limit = 710,
        /**
         * 免费复活时间
         */
        role_relive_free_time = 711,
        /**
         * 角色每日免费降级获得转生经验次数
         */
        rebirth_count = 803,
        /**
         * 角色降级获得转生经验所需绑定金币
         */
        rebirth_expend_gold = 804,
        /**
         * 自动完成任务时间（毫秒）
         */
        task_auto_complete_time = 900,
        /**
         * 空闲自动做主线任务时间（秒）
         */
        task_do_when_idle_time = 901,
        /**
         * 日常除魔任务最大星级
         */
        chu_mo_max_star = 902,
        /**
         * vip购买除魔一次花费元宝
         */
        task_chu_mo_vip_buy_cost = 903,
        /**
         * 每日挖矿最大次数
         */
        every_day_wakuang_maxnum = 904,
        /**
         * 日常除魔任务刷星金币价格
         */
        chu_mo_refresh_cost = 905,
        /**
         * 日常除魔任务二倍领取价格
         */
        chu_mo_submit_double = 906,
        /**
         * 日常除魔任务三倍领取价格
         */
        chu_mo_submit_triple = 907,
        /**
         * 除魔任务必不满星等级(低于或等于此等级)
         */
        chu_mo_star_not_full_level = 909,
        /**
         * 天关每日挑战次数
         */
        tian_guan_max_count = 910,
        /**
         * 共享任务怪最高等级限制
         */
        mission_monster_share_level = 911,
        /**
         * 特殊地图自动战斗引导时间
         */
        auto_fight_guide_time = 922,
        /**
         * 特权卡-材料副本双倍领取折扣
         */
        silver_card_clone_private_award_discount = 931,
        /**
         * 特权卡-聚灵珠双倍使用免费次数
         */
        silver_card_energy_count = 932,
        /**
         * 特权卡-技能熟练加成
         */
        supreme_card_skill_category = 933,
        /**
         * 除魔任务重置次数等级
         */
        chu_mo_reset_lv = 942,
        /**
         * 除魔任务非特权玩家可购买次数
         */
        chu_mo_buy_count_noCard = 943,
        /**
         * 神器引导最大等级
         */
        guide_up_artifact_max_lv = 944,
        /**
         * 除魔快速完成消耗道具ID
         */
        chu_mo_first_compent_itemID = 945,
        /**
         * 除魔快速完成消耗道具数量
         */
        chu_mo_first_compent_itemCount = 946,
        /**
         * 改名卡id
         */
        change_name_card_id = 948,
        /**
         * 消费连击上榜要求钻石数量
         */
        consume_combo_lowest_value = 950,
        /**
         *
         */
        mine_yaoshi = 1001,
        /**
         *
         */
        mine_grid = 1002,
        /**
         *
         */
        mine_base_Luck = 1003,
        /**
         *
         */
        mine_base_Luck_max = 1004,
        /**
         * 挖宝50打折
         */
        mine_discount = 1005,
        /**
         * 特戒GO单个钥匙钻石消耗
         */
        ringgo_cost_monery = 1006,
        /**
         * 特戒GO连抽次数1
         */
        ringgo_fruit_1 = 1007,
        /**
         * 特戒GO连抽次数2
         */
        ringgo_fruit_2 = 1008,
        /**
         * 特戒GO多次抽奖判断背包不足格子数
         */
        ringgo_fruit_multiple_bag_count = 1009,
        /**
         * 特戒GO单次抽奖判断背包不足格子数
         */
        ringgo_fruit_single_bag_count = 1010,
        /**
         * 命中率基数
         */
        hit_cardinal = 1101,
        /**
         * 基础命中率
         */
        hit_base = 1102,
        /**
         * 最大命中率
         */
        hit_max = 1103,
        /**
         * 最小命中率
         */
        hit_min = 1104,
        /**
         * pk最大暴击率
         */
        crit_pk_max = 1105,
        /**
         * 打怪最大暴击率
         */
        crit_pve_max = 1106,
        /**
         * 英雄每日免费降级获得转生经验次数
         */
        hero_rebirth_count = 1201,
        /**
         * 英雄降级获得转生经验所需绑定金币
         */
        hero_rebirth_expend_gold = 1202,
        /**
         * 炼魂值最低兑换等级
         */
        lianhun_min_lv = 1401,
        /**
         * 炼魂值兑换消耗的绑定金币
         */
        lianhun_need_gold_bind = 1402,
        /**
         * 杀死角色增加罪恶值
         */
        hg_add_val = 1501,
        /**
         * 衰减时间间隔
         */
        hg_sub_time = 1502,
        /**
         * 普通衰减罪恶值
         */
        hg_sub_val_common = 1503,
        /**
         * 快速衰减罪恶值
         */
        hg_sub_val_quick = 1504,
        /**
         * 灰名持续时间
         */
        hg_gray_sustain_time = 1505,
        /**
         * 红名多次击杀同一人物时间段
         */
        hong_ming_repetition_skill_time = 1506,
        /**
         *
         */
        hong_ming_repetition_skill_coefficient = 1507,
        /**
         * 红名村地图编号
         */
        hong_ming_cun_map = 1509,
        /**
         * 全服需要多少材料可以激活BOSS
         */
        xinmo_server_material_max = 1511,
        /**
         * 每人每天能提交多少
         */
        xinmo_role_material_max = 1512,
        /**
         * 心魔之魂物品ID
         */
        xinmo_material_item_id = 1513,
        /**
         * 神武第一名压制比例
         */
        shenwu_first_rate = 1601,
        /**
         * 神武第二名压制比例
         */
        shenwu_second_rate = 1602,
        /**
         * 神武第三名压制比例
         */
        shenwu_third_rate = 1603,
        /**
         * 神武其他名次压制比例
         */
        shenwu_common_rate = 1604,
        /**
         * 等级排行榜限制
         */
        rank_level_restriction = 1701,
        /**
         * 战斗力排行榜
         */
        rank_power_restriction = 1702,
        /**
         * 翅膀排行榜
         */
        rank_wing_restriction = 1703,
        /**
         * 神武排行榜
         */
        rank_shenwu_restriction = 1704,
        /**
         * 龙珠排行榜下限
         */
        rank_longzhu_restriction = 1705,
        /**
         * 如意排行榜下限
         */
        rank_ruyi_restriction = 1706,
        /**
         * 神格排行限制
         */
        rank_shenge_restriction = 1707,
        /**
         * 神脉排行限制
         */
        rank_shenmai_restriction = 1708,
        /**
         * 宝石排行限制
         */
        rank_gem_restriction = 1709,
        /**
         * 龙魂(切割)排行限制
         */
        rank_longhun_restriction = 1710,
        /**
         * 觉醒排行限制
         */
        rank_juexing_restriction = 1711,
        /**
         * 装备排行限制
         */
        rank_equip_restriction = 1712,
        /**
         * 转生排行榜限制
         */
        rank_re_level_restriction = 1713,
        /**
         * 怒气值上限
         */
        nuqi_max = 1901,
        /**
         * 怒气恢复速度，当前按照2s一次
         */
        nuqi_add = 1902,
        /**
         * 战士合击技能类型
         */
        heji_skill1 = 1903,
        /**
         * 法师合击技能类型
         */
        heji_skill2 = 1904,
        /**
         * 道士合击技能类型
         */
        heji_skill3 = 1905,
        /**
         * 合击展示男模型
         */
        combo_male_res = 1907,
        /**
         * 合击展示女模型
         */
        combo_femal_res = 1908,
        /**
         * 合击展示怪物模型
         */
        combo_monster_res = 1909,
        /**
         * 天赋洗点所需元宝
         */
        talent_reset = 2001,
        /**
         * 攻击生效系数1
         */
        atk_rate1 = 2101,
        /**
         * 攻击生效系数2
         */
        atk_rate2 = 2102,
        /**
         * 攻击生效系数3
         */
        atk_rate3 = 2103,
        /**
         * 防御限制系数
         */
        defense_rate = 2104,
        /**
         * 血量限制系数
         */
        hp_rate = 2105,
        /**
         * 暴击伤害最小生效系数
         */
        crit_dmg_rate = 2106,
        /**
         * 最低充值记录
         */
        recharge_rank = 2201,
        /**
         * 挖宝一次增加幸运宝藏积分
         */
        mine_add_score = 2203,
        /**
         * 最低消费记录
         */
        consume_rank = 2205,
        /**
         * 转盘排行最小额度
         */
        zhuanpan_min_money = 2206,
        /**
         * 幸运转盘选取所需充值元宝
         */
        luck_turntable_min_money = 2207,
        /**
         * 幸运转盘活动时间
         */
        luck_turntable_active_day = 2208,
        /**
         * 挑战boss公告记录最大数量
         */
        challenge_boss_notice_max = 2301,
        /**
         * 挑战BOSS掉落公告显示置顶条目数
         */
        boss_drop_info_top_count = 2302,
        /**
         * 帮会名称最大字符数量
         */
        guild_name_max_length = 3900,
        /**
         * 建帮会角色等级下限
         */
        guild_create_role_level = 3901,
        /**
         * 创建帮会所需元宝
         */
        guild_create_vippoit_count = 3902,
        /**
         * 创建帮会所需vip等级
         */
        guild_create_vippoit_level = 3903,
        /**
         * 帮会日志最大页数
         */
        guild_log_page_max = 3904,
        /**
         * 帮会日志每页数量
         */
        guild_log_page_count = 3905,
        /**
         * 帮会仓库最大页数
         */
        guild_storage_page_max = 3906,
        /**
         * 帮会仓库每页数量
         */
        guild_storage_page_count = 3907,
        /**
         * 帮会红包最大页数
         */
        guild_red_page_max = 3908,
        /**
         * 帮会红包每页数量
         */
        guild_red_page_count = 3909,
        /**
         * 红包最大数量
         */
        guild_red_max = 3910,
        /**
         * 红包最小金额
         */
        guild_red_gold_min = 3911,
        /**
         * 红包持续时间
         */
        guild_red_time = 3912,
        /**
         * 红包最小数量
         */
        guild_red_min = 3913,
        /**
         * 帮会宝箱ID
         */
        guild_treasure_chest = 3914,
        /**
         * 帮会争霸最小杀boss数目
         */
        guild_kill_boos_count = 3915,
        /**
         * 第一次加入帮会模式修改
         */
        guild_pk_Module = 3917,
        /**
         * 帮会解散所需天数
         */
        guild_auto_dissolve_time = 3918,
        /**
         * 帮会战持续时间(秒)
         */
        guild_rival_time = 3919,
        /**
         * 帮会战每日宣战次数
         */
        guild_rival_number = 3920,
        /**
         * 创建免费帮会数量
         */
        guild_recommend_create = 3921,
        /**
         * 入帮推荐帮会列表数量
         */
        guild_recommend_join = 3926,
        /**
         * 入帮推荐列表数量
         */
        guild_recommend_list = 3927,
        /**
         * 入帮开服天数规则
         */
        guild_recommend_day = 3928,
        /**
         * 帮主被弹劾时间
         */
        guild_impeach_chairman = 3930,
        /**
         * 弹劾持续时间
         */
        guild_impeach_member = 3931,
        /**
         * 弹劾消耗元宝数量
         */
        guild_impeach_money = 3932,
        /**
         * 帮会守护地图id
         */
        guild_ward_mapid = 3933,
        /**
         * 帮会boss地图id
         */
        guild_boss_mapid = 3934,
        /**
         * 帮会召唤所需元宝数
         */
        guild_gang_call_yb = 3935,
        /**
         * 帮会召唤CD
         */
        guild_call_cd = 3936,
        /**
         * 帮会每日免费上香次数
         */
        guild_free_pray_max = 3937,
        /**
         * 帮会免费上香单次获得的帮会经验
         */
        guild_free_pray_exp = 3938,
        /**
         * 帮会免费上香单次获得的个人帮会贡献
         */
        guild_free_pray_contribute = 3939,
        /**
         * 帮会每日元宝上香次数
         */
        guild_money_pray_max = 3940,
        /**
         * 帮会元宝上香单次花费元宝
         */
        guild_money_pray_price = 3941,
        /**
         * 帮会元宝上香单次获得的帮会经验
         */
        guild_money_pray_exp = 3942,
        /**
         * 帮会元宝上香单次获得的个人帮会贡献
         */
        guild_money_pray_contribute = 3943,
        /**
         * 弹劾所需个人贡献限制
         */
        guild_impeach_contribute = 3944,
        /**
         * 帮会旗帜开启天数
         */
        shame_stain_open_day = 3945,
        /**
         * 更改旗帜元宝
         */
        change_stain_flag_money = 3946,
        /**
         * 旗帜存在时间
         */
        shame_stain_time = 3947,
        /**
         * 更改旗帜元宝所需帮会等级
         */
        change_stain_flag_level = 3948,
        /**
         * 帮会开启主殿建筑所需等级
         */
        gang_main_open_level = 3949,
        /**
         * 帮会开启珍宝阁建筑所需等级
         */
        gang_zhembao_open_level = 3950,
        /**
         * 帮会开启藏经阁建筑所需等级
         */
        guild_cang_jing_ge_lv = 3951,
        /**
         * 帮会地图id
         */
        guild_map_id = 3952,
        /**
         * 帮会成员召唤冷却时间
         */
        guid_call_member_cd = 3953,
        /**
         * 帮会道具红包金币类型
         */
        guid_item_red_type = 3954,
        /**
         * 帮会召唤令
         */
        guild_call_token = 3955,
        /**
         * 队伍召唤令
         */
        team_call_token = 3956,
        /**
         * 帮会解散倒计时，单位：小时
         */
        guild_dismiss_count_down = 3957,
        /**
         * 帮会解散CD，单位：小时
         */
        guild_dismiss_cd = 3958,
        /**
         * 帮会无人上线解散天数，单位：天
         */
        guild_offline_dismiss_day = 3959,
        /**
         * 玩家召唤所需要的元宝数
         */
        call_friend_money = 4001,
        /**
         * 仇人追踪所需要的元宝数
         */
        relation_trace_enemie = 4002,
        /**
         * 好友召唤被请求上限
         */
        called_friend_count = 4003,
        /**
         * 好友召唤请求时长/S
         */
        call_friend_time = 4004,
        /**
         * 拜师的最高等级
         */
        st_baishi_maxLv = 4005,
        /**
         * 收徒的最低等级
         */
        st_shoutu_minLv = 4006,
        /**
         * 拥有徒弟个数
         */
        st_own_tudi_maxcount = 4007,
        /**
         * 解除关系惩罚时间
         */
        st_punish_time = 4008,
        /**
         * 成为徒弟一次性奖励
         */
        st_once_award = 4009,
        /**
         * 好友数量的上线
         */
        call_friend_friendCount = 4010,
        /**
         * 黑名单的上线
         */
        call_friend_blackCount = 4011,
        /**
         * 仇人数量的上线
         */
        call_friend_enemyCount = 4012,
        /**
         * 人上限
         */
        call_friend_stranger = 4013,
        /**
         * 战斗宣言
         */
        call_friend_attDeclaration = 4014,
        /**
         * 好友留言限制字数
         */
        friend_leavemessage_MaxCount = 4015,
        /**
         * 好友签名限制
         */
        friend_qianming_Limit = 4016,
        /**
         * 装备镶嵌最低要求转生级别
         */
        equip_keyin = 4101,
        /**
         * 直升等级
         */
        wing_up_level = 4601,
        /**
         * 直升等级元宝
         */
        wing_up_money = 4602,
        /**
         * 翅膀祝福清空阀值
         */
        cloak_empty_limit = 4605,
        /**
         * 披风换化按钮显示阈值
         */
        wing_limit_lv = 4606,
        /**
         * 消耗的押镖令牌id
         */
        yabiao_lingpai = 4701,
        /**
         * 押镖刷新消耗礼券
         */
        yabiao_coupons = 4702,
        /**
         * 消耗的元宝数量
         */
        yabiao_yuanbao = 4703,
        /**
         * 押镖免费刷新次数
         */
        yabiao_free_refresh = 4704,
        /**
         * 押镖每日次数
         */
        yabiao_day_count = 4705,
        /**
         * 镖车最高等级
         */
        yabiao_escort_max_level = 4706,
        /**
         * 押送半径
         */
        yabiao_che_radio = 4707,
        /**
         * 押镖传送消耗绑元
         */
        yabiao_translate_by = 4711,
        /**
         * 押镖求助消耗绑元
         */
        yabiao_help_by = 4712,
        /**
         * 信物上交上限
         */
        yabiao_tokenMax = 4713,
        /**
         * 信物奖励物品1ID
         */
        token_awardGoodsID1 = 4714,
        /**
         * 信物奖励物品1数量
         */
        token_awardGoodsNum1 = 4715,
        /**
         * 信物奖励物品2ID
         */
        token_awardGoodsID2 = 4716,
        /**
         * 信物奖励物品2数量
         */
        token_awardGoodsNum2 = 4717,
        /**
         * 押镖失败奖励百分比
         */
        yabiao_failed_reward_percent = 4718,
        /**
         * 押镖信物id
         */
        yabiao_tokenId = 4719,
        /**
         * 押囚传送点ID
         */
        yabiao_maptransfer_Id = 4720,
        /**
         * 护卫返利开始返利开服天数
         */
        mars_fan_li_open_day = 4803,
        /**
         * 中级矿区可挖矿时间
         */
        dig_mine_have_time_normal = 4901,
        /**
         * 高级矿区可挖矿时间
         */
        dig_mine_have_time_hight = 4902,
        /**
         * 主界面屏蔽系统聊天等级
         */
        mainui_shield_sys_lv = 5000,
        /**
         * 聊天栏系统引导提示间隔时间（毫秒）
         */
        chat_system_guild_time = 5001,
        /**
         * 聊天栏系统引导提示最大等级
         */
        chat_system_guild_lv = 5002,
        /**
         * 聊天记录最大条数
         */
        chat_channel_max_count = 5003,
        /**
         * 综合聊天记录最大条数
         */
        chat_system_channel_max_count = 5004,
        /**
         * 最大历史消息缓冲长度
         */
        chat_history_max_count = 5005,
        /**
         * 语音缓冲长度
         */
        chat_voice_max_count = 5006,
        /**
         * 聊天输入文字最大字符数
         */
        chat_input_max_chars = 5007,
        /**
         * 私聊头像显示的最大数量
         */
        chat_secret_max_count = 5008,
        /**
         * 联盟频道使用活动类型
         */
        chat_union_act = 5009,
        /**
         * 联盟地图
         */
        chat_union_map1 = 5010,
        /**
         * 联盟聊天地图
         */
        chat_union_map2 = 5011,
        /**
         * 大表情需求Vip等级
         */
        big_emoji_need_vip = 5012,
        /**
         * 摊位物品最大数量
         */
        stall_item_count = 6401,
        /**
         * 摊位记录条数
         */
        stall_record_number = 6402,
        /**
         * 背包整理冷却时间
         */
        bag_packup_time = 6406,
        /**
         * 大刀守卫伤害比例
         */
        jinjun_dmg_rate = 6501,
        /**
         * 皇宫技能伤害当前血量比例
         */
        huanggong_dmg_rate = 6502,
        /**
         * 掉落每页显示条数
         */
        kill_boss_one_page_show_conut = 6601,
        /**
         * 掉落总页数
         */
        kill_boss_page_conut = 6602,
        /**
         * 皇宫技能伤害当前血量比例
         */
        trade_item_count = 6701,
        /**
         * 膜拜城主一键10倍消耗元宝
         */
        daily_activity_mbcz_vote_yjsb = 6702,
        /**
         * 膜拜城主刷倍消耗金币
         */
        daily_activity_mbcz_vote_cost = 6703,
        /**
         * 膜拜城主次数上限
         */
        daily_activity_mbcz_vote_count = 6704,
        /**
         * 城主大赦天下花费元宝
         */
        daily_activity_mbcz_vote_dstx = 6705,
        /**
         * 城主buff生效支持率
         */
        daily_activity_mbcz_vote_buff = 6706,
        /**
         * 累充奖励开启日期
         */
        accumulative_recharge_active_open_day = 6720,
        /**
         * 累充奖励合服开启日期
         */
        accumulative_recharge_active_merger_open_day = 6721,
        /**
         * 累充奖励对应表的classid
         */
        accumulative_recharge_class_id = 6722,
        /**
         * 帮会押镖次数
         */
        guild_yabiao_count = 7001,
        /**
         * 帮会boss召唤次数
         */
        guild_boss_count = 7003,
        /**
         * 帮会BOSS CD
         */
        guild_boss_cd_count_time = 7004,
        /**
         * 【经验炼制】开启日期（开服第N天）
         */
        exp_smelt_open_day = 7301,
        /**
         * 【经验炼制】关闭日期（开服第N天）
         */
        exp_smelt_close_day = 7302,
        /**
         * 【经验炼制】玩家等级需求
         */
        exp_smelt_need_lv = 7303,
        /**
         * 【经验炼制】最大次数
         */
        exp_smelt_all_count = 7304,
        /**
         * 【经验炼制】角色炼制剩余次数
         */
        exp_smelt_role_left_count = 7307,
        /**
         * 【经验炼制】英雄炼制剩余次数
         */
        exp_smelt_hero_left_count = 7308,
        /**
         * 【经验炼制】经验炼制记录剩余时间
         */
        exp_smelt_record_left_second = 7309,
        /**
         * 免费领取首充人物达到等级
         */
        recharge_day_level = 7601,
        /**
         * 免费领取首充人数限制
         */
        recharge_day_limit = 7602,
        /**
         * 探宝大礼领取奖励需要抽奖次数
         */
        tanbao_need_count = 7703,
        /**
         * 探宝大礼奖励的物品id
         */
        tanbao_award_item = 7704,
        /**
         * 卡牌2卡槽开启VIP等级
         */
        brand_slot_vip_level = 7820,
        /**
         * 卡牌3卡槽开启消耗元宝数
         */
        brand_slot_money = 7821,
        /**
         * 离线每小时获得的单倍经验值
         */
        off_line_time_long = 8001,
        /**
         * 每日摇色子次数
         */
        yoyo_count = 10501,
        /**
         * 每日免费摇色子次数
         */
        yoyo_free = 10502,
        /**
         * 付费摇色子金额
         */
        yoyo_money = 10503,
        /**
         * 色子个数
         */
        yoyo_number = 10504,
        /**
         * 踢人开启的在线人数阀值
         */
        kick_count = 10601,
        /**
         * 踢人的等级阀值
         */
        kick_lev = 10602,
        /**
         * 踢人的在线时间限制分钟
         */
        kick_minite = 10603,
        /**
         * 通天塔第一层消耗金币
         */
        tong_tian_tower_cost_gold = 12001,
        /**
         * 通天塔最大进入次数
         */
        tong_tian_tower_enter_max_count = 12002,
        /**
         * 通天塔开关 玩家进入等级
         */
        tong_tian_tower_switch = 12003,
        /**
         * 个人boss回复挑战次数一次的间隔时间(s)
         */
        private_boss_recover_interval_time = 12102,
        /**
         * 神秘商城刷新时间（秒）
         */
        merge_secret_mall_refresh_time = 13000,
        /**
         * 极致强化开启等级
         */
        ace_equip_intensify_lv = 14104,
        /**
         * 极致强化金币次数
         */
        ace_equip_intensify_count = 14105,
        /**
         * 拍卖行物品拍卖时间
         */
        auction_last_time = 14301,
        /**
         * 拍卖行手续费
         */
        auction_procedures_price = 14302,
        /**
         * 拍卖行税率
         */
        auction_taxRate = 14303,
        /**
         * 商品强制下架所扣税率
         */
        auction_undercarriage_taxRate = 14304,
        /**
         * 竞拍加价税率
         */
        auction_bidding_taxRate = 14305,
        /**
         * 玩家上架商品数量的最大限制
         */
        auction_myAuction_Num = 14306,
        /**
         * 交易元宝上限
         */
        trade_max_money = 14307,
        /**
         * 交易金币上限
         */
        trade_max_gold = 14308,
        /**
         * 内功最大重数
         */
        nei_gone_max_chong = 14309,
        /**
         * 交易行功能开启所需VIP等级
         */
        auction_open_vip_lv = 14310,
        /**
         * 拍卖行求购上架数量
         */
        auction_to_buy_num = 14311,
        /**
         * 官印界限
         */
        chop_limit = 15005,
        /**
         * 锻造仓库格子数
         */
        forge_grid_max_count = 15006,
        /**
         * 披风预览阶数
         */
        wing_pre_num = 18001,
        /**
         * 九龙山：角色体力上限
         */
        jiulong_max_physical_power = 19001,
        /**
         * 九龙山：角色回复1点体力时间（秒）
         */
        jiulong_one_power_second = 19002,
        /**
         * 第一次展示帮会创建界面等级
         */
        first_show_create_gang_lv = 19006,
        /**
         * 第一次推荐帮会等级
         */
        first_show_recommend_gang_lv = 19007,
        /**
         * 第二次推荐帮会等级
         */
        two_show_recommend_gang_lv = 19008,
        /**
         * 生存战场每次复活倒计时时间（秒）
         */
        resurgence_shengcun_time = 19009,
        /**
         * 特戒复活buff
         */
        fuhuo_buff = 20000,
        /**
         * 特戒麻痹buff
         */
        mabi_buff = 20001,
        /**
         * 无双战柱子坐标X
         */
        unparalleled_pos_x = 20002,
        /**
         * 无双战柱子坐标Y
         */
        unparalleled_pos_y = 20003,
        /**
         * 攻城战落脚点坐标x1
         */
        sha_cheng_map_x1 = 20101,
        /**
         * 攻城战落脚点坐标y1
         */
        sha_cheng_map_y1 = 20102,
        /**
         * 攻城战落脚点坐标x2
         */
        sha_cheng_map_x2 = 20103,
        /**
         * 攻城战落脚点坐标y2
         */
        sha_cheng_map_y2 = 20104,
        /**
         * 皇宫落脚点坐标x1
         */
        sha_cheng_palace_x1 = 20105,
        /**
         * 皇宫落脚点坐标y1
         */
        sha_cheng_palace_y1 = 20106,
        /**
         * 皇宫落脚点坐标x2
         */
        sha_cheng_palace_x2 = 20107,
        /**
         * 皇宫落脚点坐标y2
         */
        sha_cheng_palace_y2 = 20108,
        /**
         * 皇宫落脚点坐标x3
         */
        sha_cheng_palace_x3 = 20109,
        /**
         * 皇宫落脚点坐标y3
         */
        sha_cheng_palace_y3 = 20110,
        /**
         * 皇宫落脚点坐标x4
         */
        sha_cheng_palace_x4 = 20111,
        /**
         * 皇宫落脚点坐标y4
         */
        sha_cheng_palace_y4 = 20112,
        /**
         * 皇宫落脚点坐标x5
         */
        sha_cheng_palace_x5 = 20113,
        /**
         * 皇宫落脚点坐标y5
         */
        sha_cheng_palace_y5 = 20114,
        /**
         * 攻城战地图id
         */
        sha_cheng_map = 20115,
        /**
         * 沙城战石柱坐标X
         */
        sand_castle_pos1_x = 20116,
        /**
         * 沙城战石柱坐标Y
         */
        sand_csstle_pos1_y = 20117,
        /**
         * 沙城战皇宫守卫坐标X
         */
        sand_castle_pos2_x = 20118,
        /**
         * 沙城战皇宫守卫坐标Y
         */
        sand_castle_pos2_y = 20119,
        /**
         * 攻城战广场复活点
         */
        gcz_guang_chang_relive = 20120,
        /**
         * 攻城战营地复活点
         */
        gcz_ying_di_relive = 20121,
        /**
         * 沙城战最大申请数量
         */
        sha_cheng_apply_max = 21001,
        /**
         * 元宝大作战boss变身概率
         */
        yan_bao_da_zuo_zhan_probability = 22001,
        /**
         * 元宝大作战bossbuff
         */
        yan_bao_da_zuo_zhan_buff = 22002,
        /**
         * 结晶兽变身前掉落id
         */
        yuan_bao_da_zuo_zhan_boss_no_change = 22003,
        /**
         * 结晶兽变身后掉落id
         */
        yuan_bao_da_zuo_zhan_boss_change = 22004,
        /**
         * boss预警关闭等级
         */
        boss_warning_close_lv = 23001,
        /**
         * 新手引导等级
         */
        xin_shou_yin_dao_lv = 23002,
        /**
         * 组队烧猪奖励物品ID
         */
        shao_zhu_award = 24001,
        /**
         * 答题晋级名次
         */
        answer_rank_count = 25001,
        /**
         * 答题每题CD时间
         */
        answer_cd = 25002,
        /**
         * 作弊没费次数
         */
        answer_cheat_free_count = 25003,
        /**
         * 作弊消耗元宝
         */
        answer_cheat_cost = 25004,
        /**
         * 奖励称号
         */
        answer_award_title = 25005,
        /**
         * 材料副本击杀总数量
         */
        material_kill_snum = 25006,
        /**
         * 全民红包首次领取最低钱数
         */
        national_red_rob_min = 26001,
        /**
         * 全民红包首领取最高钱数
         */
        national_red_rob_max = 26002,
        /**
         * 全民红包领取CD
         */
        national_red_rob_cd = 26003,
        /**
         * 全民红包每日领取最大次数
         */
        national_red_rob_count = 26004,
        /**
         * 全民红包开服初始元宝数量
         */
        national_red_open_server_count = 26005,
        /**
         * 全民红包合服初始元宝数量
         */
        national_red_join_server_count = 26006,
        /**
         * 全名红包每次发送得最少数量
         */
        national_red_donte_count = 26007,
        /**
         * 全民红包排行榜最大条数
         */
        national_red_rank_list_count = 26008,
        /**
         * 全民红包捐抢显示得条数
         */
        national_red_list_count = 26009,
        /**
         * 全民红包奖池上限
         */
        national_red_max_all = 26010,
        /**
         * 全民红包个人捐献上限
         */
        national_red_max_single = 26011,
        /**
         * 全民红包奖池商城消费转化比例（万分比）
         */
        money_modify_add_red_envelopes_proportion = 26012,
        /**
         * 第一次领取红包人数上限
         */
        first_scramble_for_max_count = 26014,
        /**
         * 首次抢红包可获得钻石的限制规则调整
         */
        rob_packet_min_vip_lv = 26015,
        /**
         * 聊天答题开始时间
         */
        chat_answer_begin_time = 27001,
        /**
         * 聊天答题结束时间
         */
        chat_answer_end_time = 27002,
        /**
         * 聊天答题cd最小间隔
         */
        chat_answer_cd_min_time = 27003,
        /**
         * 聊天答题cd最大间隔
         */
        chat_answer_cd_max_time = 27004,
        /**
         * 聊天答题时间
         */
        chat_answer_cd_time = 27005,
        /**
         * 碎银矿脉开启准备时间
         */
        sui_yin_kuang_mai_ready = 28001,
        /**
         * 碎银矿脉矿车间隔时间
         */
        sui_yin_kuang_mai_refresh = 28002,
        /**
         * 虚幻洞窟刷出金币怪的概率（万分比）
         */
        xu_huan_dong_ku_gold_monster = 29004,
        /**
         * 从答题题库中随机出的题目数量
         */
        answer_question_count = 30001,
        /**
         * 四神宫普通难度血量bossID
         */
        four_temple_hp_boss_1 = 30002,
        /**
         * 四神宫中等难度血量bossID
         */
        four_temple_hp_boss_2 = 30006,
        /**
         * 四神宫困难难度血量bossID
         */
        four_temple_hp_boss_3 = 30010,
        /**
         * 四神宫普通难度变蛋单位ID
         */
        four_temple_egg_lv_1 = 30013,
        /**
         * 四神宫中等难度变蛋单位ID
         */
        four_temple_egg_lv_2 = 30014,
        /**
         * 四神宫困难难度变蛋单位ID
         */
        four_temple_egg_lv_3 = 30015,
        /**
         * 四神宫普通难度变蛋生命周期
         */
        four_temple_egg_time_1 = 30016,
        /**
         * 四神宫中等难度变蛋生命周期
         */
        four_temple_egg_time_2 = 30017,
        /**
         * 四神宫困难难度变蛋生命周期
         */
        four_temple_egg_time_3 = 30018,
        /**
         * 四神宫普通难度变蛋暴击秒杀buffID
         */
        four_temple_cri_buff_1 = 30019,
        /**
         * 四神宫中等难度变蛋暴击秒杀buffID
         */
        four_temple_cri_buff_2 = 30020,
        /**
         * 四神宫困难难度变蛋暴击秒杀buffID
         */
        four_temple_cri_buff_3 = 30021,
        /**
         * 四神宫普通难度变蛋暴击计数
         */
        four_temple_cri_count_1 = 30022,
        /**
         * 四神宫中等难度变蛋暴击计数
         */
        four_temple_cri_count_2 = 30023,
        /**
         * 四神宫困难难度变蛋暴击计数
         */
        four_temple_cri_count_3 = 30024,
        /**
         * 开服第3天开启公告编辑权限
         */
        guild_notice_open_day = 30025,
        /**
         * 经验修为神炉经验炉子每日炼制次数
         */
        exp_shenlu_exp_count = 31001,
        /**
         * 经验修为神炉修为炉子每日炼制次数
         */
        exp_shenlu_xiuwei_count = 31002,
        /**
         * boss召唤令使用的地图
         */
        boss_call_order_map = 33001,
        /**
         * 小飞鞋开启等级
         */
        xiao_fei_xie_open_level = 33002,
        /**
         * 答题实话技能
         */
        answer_skill_id = 34001,
        /**
         * vip体验时间
         */
        vip_tiyan_time = 35001,
        /**
         * 经验大礼物品使用次数
         */
        exp_most_use_count = 35100,
        /**
         * 未知暗殿礼包推送击杀boss数
         */
        gift_bag_notice_kill_count = 36001,
        /**
         * 主线任务推送烧猪洞所需降妖除魔次数
         */
        count_chumo_roast_pig = 36002,
        /**
         * 决定显示特殊部件的开服天数
         */
        open_special_equip_day = 36100,
        /**
         * 代练宝宝增加1分钟代练时间消耗的元宝数
         */
        dailianbaobao_add_money = 37001,
        /**
         * 代练宝宝减少1分钟代练cd消耗的元宝数
         */
        dailianbaobao_reduce_money = 37002,
        /**
         * 代练宝宝初每日免费代练时间（秒）
         */
        dailianbaobao_unMoney_time = 37003,
        /**
         * 代练宝宝每次购买增加的时间（秒）
         */
        dailianbaobao_one_buy_receive_time = 37004,
        /**
         * 帮会争霸领奖最小等级
         */
        guild_kill_boos_award_level = 39126,
        /**
         * 组队快速购买机器人时间
         */
        team_quick_buy_robot = 40000,
        /**
         * 每份理财需求额度
         */
        invest_num_per = 40001,
        /**
         * 投资理财总份数
         */
        invest_to_all_num = 40002,
        /**
         * 合服活动神秘商店刷新时间（秒）
         */
        hefu_mystical_store_refresh_time = 41001,
        /**
         * 合服活动神秘商店刷新时间消耗元宝数量
         */
        hefu_mystical_store_refresh_money = 41002,
        /**
         * boss隐藏关卡删除传送门时间
         */
        boss_hide_clone_del_door = 43001,
        /**
         * boss隐藏关卡副本生命周期
         */
        boss_hide_clone_time = 43002,
        /**
         * 沙城霸主
         */
        title_shacheng_bazhu = 43030,
        /**
         * 沙城枭雄
         */
        title_shacheng_xiaoxiong = 43031,
        /**
         * 沙城王侯
         */
        title_shacheng_wanghou = 43032,
        /**
         * 沙城干将
         */
        title_shacheng_ganjiang = 43033,
        /**
         * 首充二次充值 最小限制
         */
        recharge_first_min = 44001,
        /**
         * 非充值用户VIP界面显示等级
         */
        not_recharge_show_ui_level = 44002,
        /**
         * 挖矿任务快速完成消耗物品
         */
        wa_kuang_quickly_item = 46002,
        /**
         * 挖矿任务快速完成消耗物品数量
         */
        wa_kuang_quickly_item_count = 46003,
        /**
         * 每日装备捐献的次数限制
         */
        equip_recycl_mission_count = 47001,
        /**
         * 刷新时间
         */
        mall_score_refresh_hour = 50001,
        /**
         * 刷新需要元宝
         */
        mall_score_refresh_money = 50002,
        /**
         * 书魂任务接受次数
         */
        book_soul_mission_max_count = 50003,
        /**
         * 英雄历练奖励间隔秒
         */
        hero_toughen_award_second = 51001,
        /**
         * 离线挂机选择技能数
         */
        offline_gua_skill_num = 51002,
        /**
         * 英雄试炼免费进入次数
         */
        hero_trial_free_enter_count = 60001,
        /**
         * 英雄试炼购买一次花费得元宝
         */
        hero_trial_buy_money = 60002,
        /**
         * 斗兽场每日免费挑战次数
         */
        dou_shou_chang_cout = 60101,
        /**
         * 全民屠魔每日免费次数
         */
        quan_min_tu_mo_free_count = 61001,
        /**
         * 盟重边防每日免费10次任务
         */
        mzborder_one_loop_task_count = 65001,
        /**
         * 盟重边防购买一环花费元宝数量
         */
        mzborder_buy_one_loop_cost = 65002,
        /**
         * 盟重边防立即完成花费元宝
         */
        mzborder_complete_one_immediately = 65003,
        /**
         * 盟重边防完成第10次任务后获得的物品ID
         */
        mzborder_complete_one_loop_award_id = 65004,
        /**
         * 盟重边防完成第10次任务后获得的物品数量
         */
        mzborder_complete_one_loop_award_count = 65005,
        /**
         * 盟重边防每日可以购买的轮次
         */
        mzborder_every_day_buy_count = 65006,
        /**
         * 盟重边防默认奖励1
         */
        mz_border_show_award_id1 = 65007,
        /**
         * 盟重边防默认奖励1数量
         */
        mz_border_show_award_count1 = 65008,
        /**
         * 盟重边防默认奖励2
         */
        mz_border_show_award_id2 = 65009,
        /**
         * 强化副本（猎魔幻狱）的魔灵值上限
         */
        mo_ling_value_max = 65010,
        /**
         * 盟重边防默认奖励2数量
         */
        mz_border_show_award_count2 = 65011,
        /**
         * 盟重边防默认双倍领取消耗钻石（单次）
         */
        mzborder_get_double_default_cost = 65012,
        /**
         * 盟重边防-特权卡折扣双倍领取消耗钻石（单次）
         */
        mzborder_get_double_discount_cost = 65013,
        /**
         * 主线盟重边防单倍领取的任务ID
         */
        mz_border_single_id = 65014,
        /**
         * 主线盟重边防双倍免费领取的任务ID
         */
        mz_border_free_task_id = 65015,
        /**
         * 盟重边防2倍领取消耗道具（单次）
         */
        mzborder_two_cost_item = 65018,
        /**
         * 盟重边防2倍领取消耗道具数量（单次）
         */
        mzborder_two_cost_item_count = 65019,
        /**
         * 盟重边防2倍领取消耗绑钻（单次）
         */
        mzborder_two_cost_money = 65020,
        /**
         * 盟重边防3倍领取消耗道具（单次）
         */
        mzborder_three_cost_item = 65021,
        /**
         * 盟重边防3倍领取消耗道具数量（单次）
         */
        mzborder_three_cost_item_count = 65022,
        /**
         * 盟重边防3倍领取消耗绑钻（单次）
         */
        mzborder_three_cost_money = 65023,
        /**
         * 猎魔幻狱一键扫荡解锁等级
         */
        lie_mo_huan_yu_sao_dang_level = 65031,
        /**
         * 猎魔幻狱进入副本挑战时间(秒)
         */
        lie_mo_huan_yu_fu_ben_time = 65032,
        /**
         * 第几天开服开启英雄副装
         */
        hero_god_open_day = 75001,
        /**
         * 无敌冷却buff类型
         */
        wu_di_cooling_buff_type = 76001,
        /**
         * 玩家召唤所消耗的绑定元宝数
         */
        call_friend_bind_money = 77001,
        /**
         * 玩家召唤所消耗的绑定元宝限制次数
         */
        call_friend_bind_money_count = 77002,
        /**
         * 旋云之巅原地复活所需元宝数
         */
        xuan_yun_zhi_dian_need_money = 77003,
        /**
         * 旋云之巅复活CD时间
         */
        xuan_yun_zhi_dian_need_time = 77004,
        /**
         * 周累计计时阀值
         */
        week_award_threshold = 77005,
        /**
         * 无双战地图编号
         */
        wu_shuang_battle_map = 77008,
        /**
         * 回城石ID
         */
        hui_cheng_stone_id = 80001,
        /**
         * 随机石ID
         */
        sui_ji_stone_id = 80002,
        /**
         * 帮会召集令
         */
        gang_call_up_stone_id = 80003,
        /**
         * 转生答题时默认进入下一题的倒计时
         */
        zhuan_sheng_dati_next_wiat_time = 80100,
        /**
         * 每日试炼获得神武值上限
         */
        shen_wu_shi_lian_daily_max = 80101,
        /**
         * 神武试炼每日免费次数
         */
        shen_wu_shi_lian_free_count = 80102,
        /**
         * 开始试炼消耗元宝数量
         */
        shi_lian_start_money = 80103,
        /**
         * 重置技能所消耗元宝
         */
        shi_lian_refresh_money = 80104,
        /**
         * 帝陵遗迹进入总次数
         */
        di_ling_yi_ji_enter_all_count = 81001,
        /**
         * 英雄密室进入总次数
         */
        ying_xiong_mi_shi_enter_all_count = 81002,
        /**
         * 付费治疗消耗货币类型
         */
        treatmentelder_cost_type = 83001,
        /**
         * 付费治疗消耗货币值
         */
        treatmentelder_cost_value = 83002,
        /**
         * 免费治疗冷却时间
         */
        treatmentelder_cost_freeCD_time = 83003,
        /**
         * 勇士回归功能等级限制大于等于70
         */
        warriors_return_min_open_level = 83004,
        /**
         * 勇士回归角色未登录天数大于等于5
         */
        warriors_return_min_offline_days = 83005,
        /**
         * 勇士回归功能开启时间天数大于等于10
         */
        warriors_return_max_server_days = 83006,
        /**
         * 勇士回归持续天数
         */
        warriors_return_max_open_days = 83007,
        /**
         * 转盘最小的重置物品数量
         */
        destiny_reset_min_count = 84001,
        /**
         * 转盘单次领取的价格
         */
        destiny_one_price = 84002,
        /**
         * 转盘全部领取的价格
         */
        destiny_all_price = 84003,
        /**
         * 转盘重置的价格
         */
        destiny_reset_price = 84004,
        /**
         * 转盘最小的折扣物品数量
         */
        destiny_cheap_min_count = 84005,
        /**
         * 转盘重置次数
         */
        destiny_reset_count = 84006,
        /**
         * 快捷回城石
         */
        quk_use_huicheng = 84008,
        /**
         * 快捷随机石
         */
        quk_use_suiji = 84009,
        /**
         * 快捷传送石
         */
        quk_use_chuansong = 84010,
        /**
         * 设置系统装备等级
         */
        setting_equip_level = 84011,
        /**
         * 等级限制石头
         */
        auto_buy_level = 84012,
        /**
         * 新手村播放战斗音效的任务
         */
        new_city_task_changeID = 85001,
        /**
         * 新手村播放战斗音效的背景音乐
         */
        new_city_change_bgm = 85002,
        /**
         * 队伍召唤令商品表ID
         */
        team_call_mall_ID = 85003,
        /**
         * 触发体验VIP引导的任务ID
         */
        activate_experience_vip_missionID = 86001,
        /**
         * 沙城展示持续时长
         */
        shacheng_map_time = 87001,
        /**
         * 沙城展示地图ID
         */
        shacheng_mapID = 87002,
        /**
         * 进入沙城展示地图前地图ID
         */
        shacheng_enterID = 87003,
        /**
         * 沙城展示后地图ID
         */
        shacheng_exitID = 87004,
        /**
         * 摄像机移动终点X
         */
        shacheng_cameraX = 87005,
        /**
         * 摄像机移动终点Y
         */
        shacheng_cameraY = 87006,
        /**
         * 卧龙伏魔一件三倍每次消耗元宝数量
         */
        wlfm_first_monery = 88006,
        /**
         * 卧龙伏魔三倍领取价格
         */
        wlfm_3_times_monery = 88007,
        /**
         * 卧龙附魔二倍领取价格
         */
        wlfm_2_times_monery = 88008,
        /**
         * 卧龙附魔完成5此额外奖励物品ID
         */
        wlfm_itemID = 88009,
        /**
         * 卧龙附魔完成5次额外奖励数量
         */
        wlfm_itemCount = 88010,
        /**
         * 卧龙山庄治疗npc花费绑元
         */
        wlsz_health_npc_by = 88011,
        /**
         * 卧龙山庄治疗npc花费元宝
         */
        wlsz_health_npc_yb = 88012,
        /**
         * 跨服联盟申请消耗绑元
         */
        wlsz_alliance_apply_bind_money = 88013,
        /**
         * 跨服联盟申请每日限制数量
         */
        wlsz_alliance_apply_limit = 88014,
        /**
         * 圣龙谷治疗老人ID
         */
        cross_zhiliao_id = 88015,
        /**
         * 圣龙谷传送员ID
         */
        cross_chuansong_id = 88016,
        /**
         * 跨服n v n 匹配cd
         */
        cross_match_cd = 88020,
        /**
         * 跨服匹配每日免费获得参与次数
         */
        moba_transexp_daliy = 88021,
        /**
         * 跨服匹配最多可累计的免费参与次数
         */
        moba_transexp_maxcount = 88022,
        /**
         * 跨服匹配每天最多可购买次数
         */
        moba_transexp_buycount = 88023,
        /**
         * 匹配战旗积分
         */
        PP3v3_score = 88024,
        /**
         * 排行榜最低积分数
         */
        cross_battleground_min_bp = 88025,
        /**
         * 3v3超时
         */
        trans_3v3_time_out = 88026,
        /**
         * 槽位强化上限
         */
        strength_max_lv = 88102,
        /**
         * 无敌buffID
         */
        invincible_buff = 88201,
        /**
         * 对怪物得麻痹buffId
         */
        to_monster_ma_bi_buff_id = 88202,
        /**
         * 无敌BuffType
         */
        invicible_buff_kind_type = 88203,
        /**
         * 对人麻痹buffID
         */
        to_role_ma_bi_buff_id = 88204,
        /**
         * 精炼等级上限
         */
        equip_refine_max_lv = 88301,
        /**
         * 精炼锁链等级上限
         */
        equip_refine_lian_max_lv = 88302,
        /**
         * 进入总次数-迷惘墓室
         */
        copy_mwmx_enter_num = 88401,
        /**
         * 迷惘墓室天灯总数
         */
        copy_mwmx_tiandeng_num = 88402,
        /**
         * 迷惘墓室棺材总数
         */
        copy_mwmx_guancai_num = 88403,
        /**
         * 额外增加战宠麻痹概率
         */
        warspoil_supermb = 88501,
        /**
         * 额外增加战宠攻击速度
         */
        warspoil_supergs = 88502,
        /**
         * 装备捐献任务双倍领取
         */
        equip_recycl_double = 88503,
        /**
         * 宠物麻痹显示等级限制
         */
        limit_warspoilmabi_level = 88504,
        /**
         * 神罚圣药ID
         */
        shen_fa_id = 88601,
        /**
         * 灭杀秘药物品ID
         */
        mi_yao_id = 88602,
        /**
         * 超级龙魂道具
         */
        chaoji_longhun = 88603,
        /**
         * 超级炼符ID
         */
        chaoji_lianfu = 88604,
        /**
         * 藏宝图每日次数
         */
        treasure_digcount_daily = 88701,
        /**
         * 藏宝图每次基础翻牌次数
         */
        extract_card_ji_chu_count = 88702,
        /**
         * 自动使用物品货币不足系统提示频率
         */
        auto_use_item_times = 88801,
        /**
         * 选择人物自动进入游戏时间
         */
        auto_entergame_time = 88901,
        /**
         * 战宠麻痹丹ID
         */
        war_mb_id = 89003,
        /**
         * 战宠攻速丹ID
         */
        war_gs_id = 89004,
        /**
         * 跨服环任务-立即完成消耗钻石
         */
        cross_mzborder_complete_one_immediately = 89005,
        /**
         * 跨服环任务-双倍领取消耗钻石
         */
        cross_mzborder_complete_one_double = 89006,
        /**
         * 跨服盟重边防每日免费10次任务
         */
        cross_mzborder_one_loop_task_count = 89007,
        /**
         * 跨服盟重默认奖励1
         */
        cross_mzborder_show_award_id1 = 89008,
        /**
         * 跨服盟重默认奖励数量1
         */
        cross_mzborder_show_award_count1 = 89009,
        /**
         * 跨服盟重默认奖励2
         */
        cross_mzborder_show_award_id2 = 89010,
        /**
         * 跨服盟重默认奖励数量2
         */
        cross_mzborder_show_award_count2 = 89011,
        /**
         * 跨服盟重默认奖励3
         */
        cross_mzborder_show_award_id3 = 89012,
        /**
         * 跨服盟重默认奖励数量3
         */
        cross_mzborder_show_award_count3 = 89013,
        /**
         * 宠物气泡
         */
        main_task_pet_bubble = 100001,
        /**
         * npc气泡
         */
        main_task_npc_bubble = 100002,
        /**
         * boss气泡1
         */
        main_task_boss_bubble1 = 100003,
        /**
         * boss气泡2
         */
        main_task_boss_bubble2 = 100004,
        /**
         * boss气泡3
         */
        main_task_boss_bubble3 = 100005,
        /**
         * 感染者
         */
        kill_infected = 100010,
        /**
         * 对抗者
         */
        kill_antagonist = 100011,
        /**
         * 个人专属掉落存活时间
         */
        item_drop_for_personal_duration_time = 100021,
        /**
         * 仓库老板地图传送点ID
         */
        storage_boss_maptramsformID = 100031,
        /**
         * 沙城争霸ID
         */
        shachengzhengba_ID = 100041,
        /**
         * 沙城争霸副本初始暂停时间
         */
        shachengzhengba_Time = 100042,
        /**
         * 尸王殿ID
         */
        shiwangdian_ID = 100051,
        /**
         * 尸王殿副本初始暂停时间
         */
        shiwangdian_Time = 100052,
        /**
         * 战宠主界面显示麻痹等级
         */
        war_mabi_show_lv = 100053,
        /**
         * 武魂任务重置次数
         */
        wu_hun_reset_count = 100054,
        /**
         * 生化战场杀人数奖励需要击杀数量
         */
        biochemical_kill_count = 100056,
        /**
         * 打开随机礼包消耗钻石
         */
        open_random_gift_bag_consume_money = 100057,
        /**
         * 打开随机礼包领取倍数
         */
        open_random_gift_bag_receive_multiple = 100058,
        /**
         * 新转生等级公告
         */
        new_level_r = 100061,
        /**
         * 宝藏自动回收武器的阶数
         */
        recycle_mine = 100070,
        /**
         * 自动进行引导等待时间
         */
        auto_guide_wait_time = 100080,
        /**
         *
         */
        new_equip_fly_level = 100090,
        /**
         * 盟重边防快速完成特权卡Id
         */
        meng_zhong_bain_fang_fast_complete_card = 100091,
        /**
         *
         */
        quick_upgrade_level_1 = 100101,
        /**
         *
         */
        quick_upgrade_level_2 = 100102,
        /**
         * 重置天赋所需道具
         */
        book_soul_reset_item_id = 100103,
        /**
         * 重置天赋所需道具数量
         */
        book_soul_reset_item_num = 100104,
        /**
         * 每日可祈福次数
         */
        praying_times = 100105,
        /**
         * 生化战场复活时间
         */
        sheng_cun_zhan_chang_times = 100109,
        /**
         * 法宝转盘价格系数
         */
        fabao_turntable_price_ratio = 100111,
        /**
         * 祭拜每日限制次数
         */
        jibai_limit_num = 100112,
        /**
         * 四象祭台副本时间（秒）
         */
        si_xiang_ji_tai_copy_time = 100120,
        /**
         * 四象祭台准备时间（秒）
         */
        si_xiang_ji_tai_wait_time = 100121,
        /**
         * 四象祭台退出副本时间（秒）
         */
        si_xiang_ji_tai_exit_time = 100122,
        /**
         * 四象祭台每日进入次数
         */
        si_xiang_ji_tai_day_enter_num = 100123,
        /**
         * 四象祭台全屏技能ID
         */
        si_xiang_ji_tai_skill = 100124,
        /**
         * 守卫比奇击杀小怪不得进度阈值万分比
         */
        small_boss_max_progress = 100131,
        /**
         * 圣域龙灵进入次数限制
         */
        saint_dragon_spirit_enter_num = 100139,
        /**
         * 圣域龙灵中间传送点NPC id
         */
        saint_dragon_spirit_entermap_npc_id = 100140,
        /**
         * 圣域龙灵进入时间，秒
         */
        saint_dragon_spirit_duration = 100141,
        /**
         * 圣域龙灵传送点所在地图ID
         */
        saint_dragon_spirit_premap_id = 100142,
        /**
         * 圣域龙灵副本进入的地图 ID
         */
        saint_dragon_spirit_map_id = 100143,
        /**
         * 全民改名奖励 改名卡
         */
        quan_min_change_name_awards = 100144,
        /**
         * 角色界面魂牌套装默认显示1
         */
        hunpai_default_suitId1 = 100145,
        /**
         * 角色界面魂牌套装默认显示2
         */
        hunpai_default_suitId2 = 100146,
        /**
         * 角色界面魂牌套装默认显示3
         */
        hunpai_default_suitId3 = 100147,
        /**
         * 角色界面圣印套装默认显示1
         */
        shengyin_default_suitId1 = 100148,
        /**
         * 角色界面圣印套装默认显示2
         */
        shengyin_default_suitId2 = 100149,
        /**
         * 角色界面圣印套装默认显示3
         */
        shengyin_default_suitId3 = 100150,
        /**
         * 龙魂100级开启突破功能
         */
        dragon_spririt_breach_open_condition = 100201,
        /**
         * 龙魂30级开启战纹功能
         */
        dragon_vein_open_condition = 100202,
        /**
         * 精炼大礼包
         */
        refine_biggift = 100203,
        /**
         * 传送阵ID
         */
        chuan_song_zhen_id = 100204,
        /**
         * 龙柱起始
         */
        zhuzi_start = 100205,
        /**
         * 龙柱结束
         */
        zhuzi_end = 100206,
        /**
         * 龙柱提示文字
         */
        ti_shi_wen_zi = 100207,
        /**
         * 龙柱提示文字ID
         */
        ti_shi_wen_zi_id = 100208,
        /**
         * npc快捷对话显示最低等级
         */
        npc_dialog_show_level = 100209,
        /**
         * 默认角色血量低于此万分比自动吃药
         */
        setting_default_hp_percent = 100210,
        /**
         * 默认角色蓝量低于此万分比自动吃药
         */
        setting_default_mp_percent = 100211,
        /**
         * 默认角色血量低于此万分比自动使用回城石
         */
        setting_default_stone_percent = 100212,
        /**
         * 购买跟宠优惠天数
         */
        mars_open_server_day = 100213,
        /**
         * 福利地图奖励1
         */
        welfare_map_reward1 = 100214,
        /**
         * 福利地图奖励2
         */
        welfare_map_reward2 = 100215,
        /**
         * 福利地图奖励3
         */
        welfare_map_reward3 = 100216,
        /**
         *
         */
        day_act_tab_level_limit = 100217,
        /**
         * 左下角收益栏显示等级限制
         */
        left_notice_profit_limit = 100218,
        /**
         * 前置称号表ID组队称号
         */
        before_title_ID = 100219,
        /**
         * 小于等于此开服天数执行新怪物刷新表
         */
        opensever_refresh_monster = 100220,
        /**
         * 封包检测
         */
        feng_bao_test = 100221,
        /**
         * 封包检测成功后原地停止时间
         */
        feng_bao_move_cd = 100222,
        /**
         * 发送移动数据时间间隔
         */
        move_data_send_jiange = 100223,
        /**
         * 移动时间判断异常值
         */
        move_data_error_min = 100224,
        /**
         * 帧数提示冷却时间单位秒
         */
        setting_optimize_time = 100225,
        /**
         * 限时活动开启推送等级
         */
        limitActivity_lv_limit = 100226,
        /**
         * 特殊处理日常玩法在list中的显示逻辑
         */
        dayact_level_limit_inTopRightLst = 100227,
        /**
         * 主界面受击反馈播放频次
         */
        mainui_hpbar_playRate = 100228,
        /**
         * 主界面受击反馈播放时间
         */
        mainui_hpbar_playTime = 100229,
        /**
         * 物品表转生相关参数
         */
        item_zhuansheng_parama = 100230,
        /**
         * 任务可提交时自动传送延迟单位毫秒
         */
        task_can_submit_delay_time = 100231,
        /**
         * 龙魂引导延迟关闭窗口单位秒
         */
        dragon_soul_guide_close_window_delay_time = 100232,
        /**
         * 转生副本主线任务ID
         */
        zhuan_sheng_main_task_id = 100233,
        /**
         * 挖矿最大可累计时间
         */
        kuang_max_time = 100234,
        /**
         * 生命回复间隔
         */
        sheng_ming_hui_fu_jian_ge = 100235,
        /**
         * 自动战斗寻路站位优化等级
         */
        auto_fight_stand_optimize_lv = 100236,
        /**
         * 镜头范围最低值
         */
        screen_num_min = 100237,
        /**
         * 镜头范围初始值
         */
        screen_num_default = 100238,
        /**
         * 镜头范围最高值
         */
        screen_num_max = 100239,
        /**
         * 首日玩家在线时长达到（单位秒）推送挖矿条件
         */
        login_day_push_mine = 100240,
        /**
         * 首日最多推送次数挖矿
         */
        first_day_push_mine_num = 100241,
        /**
         * 首日第一次玩家挖矿时间达到（单位秒）
         */
        first_day_push_time_one = 100242,
        /**
         * 首日第二次玩家挖矿时间达到（单位秒）
         */
        first_day_push_time_two = 100243,
        /**
         * 首日第三次玩家挖矿时间达到（单位秒）
         */
        first_day_push_time_three = 100244,
        /**
         * 非首日最多推送次数挖矿
         */
        second_day_push_mine_num = 100245,
        /**
         * 非首日第一次玩家挖矿时间达到（单位秒）
         */
        second_day_push_time_one = 100246,
        /**
         * 非首日第二次玩家挖矿时间达到（单位秒）
         */
        second_day_push_time_two = 100247,
        /**
         * 非首日第三次玩家挖矿时间达到（单位秒）
         */
        second_day_push_time_three = 100248,
        /**
         * 第几天开启工资
         */
        open_day_open_pay = 100249,
        /**
         * 第一天VIp最高升级
         */
        vip_day_one = 100250,
        /**
         * 被变羊喊话得单位ID
         */
        bianyang_boss_ID = 100252,
        /**
         * 被变羊喊话的内容翻译表ID
         */
        bianyang_content = 100253,
        /**
         * 被虚弱喊话的内容翻译表ID
         */
        xuruo_content = 100254,
        /**
         * 符文炼制最大格子数量
         */
        fuwenlianzhi_max_grid = 100255,
        /**
         * 符文分解可选最高品质
         */
        fuwenfenjie_max_quality = 100256,
        /**
         * 一件炼制符文开启角色等级
         */
        fuwenlianzhi_onekey_click_open_lv = 100257,
        /**
         * 元宝特效播放上限
         */
        money_effect_max_num = 100258,
        /**
         * 掉落追光播放上限
         */
        drop_effect_max_num = 100259,
        /**
         * 玩家角色固定视野
         */
        role_fix_sight = 100260,
        /**
         * boss传送数量值显示控制
         */
        boss_transfer_txt_num = 100261,
        /**
         * 伤害比例下限
         */
        dmg_rate_min = 100262,
        /**
         * 伤害比例上限
         */
        dmg_rate_max = 100263,
        /**
         * 圣装最大阶数
         */
        gold_equip_max_Lv = 100265,
        /**
         * 多少级之前关闭刺杀剑法系统自动开启
         */
        auto_skill_open_lv = 100266,
        /**
         * 关闭刺杀剑法多少秒后开启
         */
        auto_skill_open_time = 100267,
        /**
         * 触发个人暗箱最大距离
         */
        drop_limit_dist = 100268,
        /**
         * 超爽大爆能量增长间隔秒
         */
        super_drop_interval_time = 100301,
        /**
         * 超爽大爆每次增长能量
         */
        super_drop_add_energy = 100302,
        /**
         * 超爽大爆能量上限
         */
        super_drop_max_energy = 100303,
        /**
         * 超爽大爆每日次数上限
         */
        super_drop_day_count = 100304,
        /**
         * 超爽大爆记录条数
         */
        super_drop_record_max = 100305,
        /**
         * 超爽大爆最低记录装备等级
         */
        super_drop_record_lowest = 100306,
        /**
         * 每次击杀触发超爽大爆概率万分比
         */
        super_drop_probability = 100307,
        /**
         * 超爽大爆能量卡ID
         */
        super_drop_item_id = 100308,
        /**
         * 翻牌持续时间 秒
         */
        extent_card_time = 100309,
        /**
         * 帮会最大等级
         */
        guild_max_level = 100310,
        /**
         * 战神宝库npcID
         */
        zhan_shen_bao_ku_npc_id = 100311,
        /**
         * 战神宝库所用材料ID
         */
        need_bao_ku_metrial_id = 100312,
        /**
         * 挖矿获得技能书权重
         */
        kuang_weight = 100313,
        /**
         * boss商店显示代币道具1
         */
        bossmall_needItem_id1 = 100314,
        /**
         * boss商店显示代币道具2
         */
        bossmall_needItem_id2 = 100315,
        /**
         * boss商店显示代币道具3
         */
        bossmall_needItem_id3 = 100316,
        /**
         * 离线奖励获取间隔(秒)
         */
        interval_time = 100501,
        /**
         * 离线奖励购买消耗钻石
         */
        need_buy_money = 100502,
        /**
         * 离线奖励购买次数
         */
        buy_times = 100503,
        /**
         * 符文首个套装ID
         */
        first_fuwen_suit_id = 100504,
        /**
         * 该等级以后不弹等级上限提高转生的提示
         */
        not_show_reLevel_tips = 100505,
        /**
         * 饮酒券ID
         */
        allpeople_drinkcoupon = 100506,
        /**
         * 1次饮酒消耗的饮酒券数量
         */
        drinkone_costcoupons = 100507,
        /**
         * 10次饮酒消耗的饮酒券数量
         */
        drinkten_costcoupons = 100508,
        /**
         * 帮会排行最大数
         */
        guild_rank_max = 100509,
        /**
         * 跨服争霸_采集将要刷新时间
         */
        kfzb_vill_refresh_collec_time = 100510,
        /**
         * 转生气泡最小显示等级
         */
        not_show_reLevel_tips_min = 100511,
        /**
         * 开服活动-沙城争霸帮主奖励1
         */
        open_sandcastle_leader_award_1 = 100601,
        /**
         * 开服活动-沙城争霸帮主奖励2
         */
        open_sandcastle_leader_award_2 = 100602,
        /**
         * 开服活动-沙城争霸帮众奖励1
         */
        open_sandcastle_member_award_1 = 100603,
        /**
         * 开服活动-沙城争霸帮众奖励2
         */
        open_sandcastle_member_award_2 = 100604,
        /**
         * 沙城争霸奖励面板-占领帮主奖励
         */
        capture_sandcastle_leader_award = 100605,
        /**
         * 沙城争霸奖励面板-占领帮众奖励
         */
        capture_sandcastle_member_award = 100606,
        /**
         * 沙城争霸奖励面板-积分第一帮主奖励
         */
        scoreFirst_sandcastle_leader_award = 100607,
        /**
         * 沙城争霸奖励面板-积分第一帮众奖励
         */
        scoreFirst_sandcastle_member_award = 100608,
        /**
         * 沙城争霸奖励面板-积分第二帮主奖励
         */
        scoreSecond_sandcastle_leader_award = 100609,
        /**
         * 沙城争霸奖励面板-积分第二帮众奖励
         */
        scoreSecond_sandcastle_member_award = 100610,
        /**
         * 帮会BOSS开始打时间（没有等于）
         */
        fack_boss_min_time = 110001,
        /**
         * 帮会BOSS不许打时间（有等于）
         */
        fack_boss_max_time = 110002,
        /**
         * 角色面板假爆率
         */
        fake_ratio = 110003,
        /**
         * 玲珑塔每日扫荡次数
         */
        ll_tower_limit = 110004,
        /**
         * 跨服饮酒大赛开启日期(每周四开启)
         */
        yinjiu_activity_open_time = 110005,
        /**
         * 特戒GO双倍奖励
         */
        ring_fruit_double_award = 110006,
        /**
         * 特戒GO三倍奖励
         */
        ring_fruit_triple_award = 110007,
        /**
         * 连续移动检测最大时间
         */
        continuous_move_max_time = 110008,
        /**
         * 连续移动检测最小时间
         */
        continuous_move_min_time = 110009,
        /**
         * 每日礼包出现时间
         */
        day_gift_refresh_time = 110010,
        /**
         * 回收公告开服天数限制
         */
        recover_notice_limit = 110011,
        /**
         * 掘金之路每日限制次数
         */
        gold_digger_limit_num = 110012,
        /**
         * 玲珑塔每日次数限制
         */
        ll_tower_chal_count_limit = 110013,
        /**
         * 高级回收装备阶数（大于）
         */
        special_recycle_lv = 110014,
        /**
         * 主线回城保护提示的最大等级
         */
        main_task_protect_maxlv = 110015,
        /**
         * 回收装备品质显示（高于这个品质的不在低级回收显示筛选）
         */
        special_recycle_quality = 110016,
        /**
         * 附近列表ui显示等级
         */
        near_view_open_lv = 110017,
        /**
         * 盟重边防领取特效判断的Vip等级
         */
        mzborder_task_effect_need_viplv = 110018,
        /**
         * 膜拜城主Buff类型ID
         */
        mobai_buff_id = 110019,
        /**
         * 稀有boss领取排行奖励次数限制
         */
        boss_rank_award_limit = 110020,
        /**
         * 帮主X天不上线后禅让帮主
         */
        guild_shan_rang_day = 110021,
        /**
         * X天内有上线记录的玩家可以被禅让
         */
        guild_can_shan_rang_day = 110022,
        /**
         * 悬赏任务最大次数
         */
        fiery_dragon_mission_limit = 110023,
        /**
         * 任务完成后拾取格数
         */
        main_task_submit_grid_num = 110025,
        /**
         * 该等级前生命恢复的飘字不显示
         */
        show_add_damage_font_level = 110026,
        /**
         * 普通饮酒卷物品ID
         */
        yinjiu_itemId_normal = 110027,
        /**
         * 高级饮酒卷物品ID
         */
        yinjiu_itemId_advanced = 110028,
        /**
         * 普通饮酒一次消耗数量
         */
        yinjiu_once_cost_num_normal = 110029,
        /**
         * 高级饮酒一次消耗数量
         */
        yinjiu_once_cost_num_advanced = 110030,
        /**
         * 嘉年华修改等级
         */
        vip_jia_nian_hua_level = 110031,
        /**
         * 附近和选中处理为神秘人地图ID
         */
        select_role_show_name_change_mapid = 110032,
        /**
         * 材料副本特效
         */
        cai_liao_te_xiao_id = 110033,
        /**
         * 帮会欢迎语是否开启
         */
        guild_welcome_open = 110034,
        /**
         * 组队喊话等级限制
         */
        team_join_t_call_lv = 110035,
        /**
         * 升级特效控制
         */
        up_lv_eff_limit = 110036,
        /**
         * 等级直升丹推荐使用等级
         */
        use_lv_elixir_up_level = 110037,
        /**
         * 新手进场公告等级
         */
        lv_notice = 110038,
        /**
         * 快捷喊话 盟重边防组队开服第二天显示
         */
        mengzhong_oneKey_day = 110039,
        /**
         * 拾取宠物待机距离玩家距离
         */
        pet_with_master_idle_distance = 110040,
        /**
         * 战斗宠物待机距离玩家距离
         */
        mars_with_master_idle_distance = 110041,
        /**
         * 快捷组队更优组队判断人数
         */
        vip_better_count_limit = 110042,
        /**
         * 快捷组队开关
         */
        qick_team_flag = 110043,
        /**
         * 跨服聊天红点时间
         */
        chat_red_time = 110044,
        /**
         * BOSS狂欢全服击杀怪物最低等级限制
         */
        boss_kuang_huan_unit_min_lv = 110045,
        /**
         * boss狂欢天数据
         */
        boss_kuanghuan_day = 110046,
        /**
         * 等级丹红点显示等级
         */
        deng_ji_dan_red_limit = 110047,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 更新数据
 */
declare module protocol {
    class wing_change_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        WingId: number;
        Exp: number;
        WingId_changed: boolean;
        Exp_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 加载数据
 */
declare module protocol {
    class wing_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        WingId: number;
        Exp: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 升级
 */
declare module protocol {
    class wing_upgrade_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        auto: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 返回升级状态
 */
declare module protocol {
    class wing_upgrade_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        critTime: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 卧龙大殿开启公告(跨服服务器广播通知正常逻辑服)
 */
declare module protocol {
    class wldd_cs2s_active_open_syn extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 卧龙联盟处理申请
 */
declare module protocol {
    class wlsz_alliance_apply_handle_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        guildId: string;
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 卧龙联盟处理申请
 */
declare module protocol {
    class wlsz_alliance_apply_handle_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumConfigDataType {
        /**
         * 技能设置
         */
        skill = 1,
        /**
         * 辅助
         */
        assist = 2,
        /**
         * 组队模式(EnumTeamMode)
         */
        teamMode = 3,
        /**
         * 自动添加好友
         */
        AutoAcceptFriendInvite = 4,
        /**
         * 自动拒绝交易
         */
        tradeRefuse = 5,
        /**
         * 自动拒绝添加好友
         */
        AutoAcceptFriendRefuse = 6,
        /**
         * 战斗宣言
         */
        attDeclaration = 7,
        /**
         * boss预警
         */
        boss_warning = 8,
        /**
         * 特权卡或官职显示设置1官职2特权卡
         */
        postShowMode = 9,
        /**
         * 手机推送设置
         */
        mobile_push = 10,
        /**
         * 装备拾取设置
         */
        equip_pickup = 11,
        /**
         * 元宝拾取设置
         */
        coin_pickup = 12,
        /**
         * 转生葫芦拾取设置
         */
        lvElixir_pickup = 13,
        /**
         * 其他拾取设置
         */
        other_pickup = 14,
        /**
         * 游戏音效
         */
        game_sound = 15,
        /**
         * 挂机使用物品
         */
        hungup_use_item = 16,
        /**
         * 基础其他设置
         */
        basic_other = 17,
        /**
         * 圣龙币拾取设置
         */
        slcoin_pickup = 18,
        /**
         * 技能书拾取设置
         */
        skillbook_pickup = 19,
        /**
         * 游戏屏蔽设置
         */
        shield_option = 20,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 卧龙联盟申请
 */
declare module protocol {
    class wlsz_alliance_apply_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        id: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 卧龙联盟申请
 */
declare module protocol {
    class wlsz_alliance_apply_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        id: string;
        newState: number;
        dayNum: number;
        id_changed: boolean;
        newState_changed: boolean;
        dayNum_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 卧龙联盟通知
 */
declare module protocol {
    class wlsz_alliance_apply_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        guildId: string;
        guildName: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 卧龙联盟结盟通知
 */
declare module protocol {
    class wlsz_alliance_guild_add_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        targetGuild1: string;
        guildServer1: string;
        guildName1: string;
        targetGuild2: string;
        guildServer2: string;
        guildName2: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 卧龙联盟解盟帮会通知
 */
declare module protocol {
    class wlsz_alliance_guild_remove_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        targetGuild1: string;
        guildName1: string;
        targetGuild2: string;
        guildName2: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumConditionType {
        /**
         * 登录游戏
         */
        role_login = 101,
        /**
         * 微端登录
         */
        micro_client_login = 102,
        /**
         * 签到
         */
        sign_day = 103,
        /**
         * 充值
         */
        recharge = 104,
        /**
         * 抽奖挖宝次数
         */
        wa_bao = 105,
        /**
         * 押镖次数
         */
        ya_biao = 106,
        /**
         * 帮会捐献
         */
        guild_donate = 107,
        /**
         * 英雄试练提交次数
         */
        hero_train_count = 108,
        /**
         * 挖到矿石次数
         */
        wa_kuang_shi = 109,
        /**
         * 完成指定任务类型次数(EnumMissionType)
         */
        submit_mission = 110,
        /**
         * 与指定npc对话(npc单位ID)
         */
        role_npc_dialogue = 111,
        /**
         * 升级到等级
         */
        role_level_to = 112,
        /**
         * 转生到等级
         */
        role_rebirth_to = 113,
        /**
         * 击杀指定等级的玩家
         */
        role_kill_player_level = 114,
        /**
         * 添加好友
         */
        add_friend = 115,
        /**
         * 加入队伍
         */
        join_team = 116,
        /**
         * 加入帮会
         */
        join_guild = 117,
        /**
         * 膜拜城主
         */
        mo_bai_cheng_zhu = 118,
        /**
         * 达到XXX级（无掉落
         */
        role_level_to_ex = 119,
        /**
         * vip等级达到XX级
         */
        role_vip_achi = 120,
        /**
         * 免费生肖翻牌XX轮
         */
        etract_card_free = 121,
        /**
         * 累计登陆天数
         */
        role_login_day = 122,
        /**
         * 拥有资源
         */
        resource_have = 201,
        /**
         * 收集资源
         */
        resource_collect = 202,
        /**
         * 击杀任意怪物数量或击杀指定怪物数量(怪物单位ID)
         */
        unit_kill_monster = 301,
        /**
         * 击杀任意boss数量
         */
        unit_kill_boss = 302,
        /**
         * 击杀任意精英数量
         */
        unit_kill_elite = 303,
        /**
         * 击杀指定组的怪(单位Team)
         */
        unit_kill_team = 304,
        /**
         * 采集任意单位次数或指定单位次数
         */
        unit_collect = 305,
        /**
         * 击杀级别分组单位计数
         */
        unit_kill_level_team_count = 306,
        /**
         * 击杀XXX级以上怪物
         */
        unit_kill_level_team = 307,
        /**
         * 上缴指定道具(道具ID)
         */
        item_pay = 401,
        /**
         * 击杀指定怪物收集道具上缴(怪物单位ID)
         */
        item_pay_from_kill = 402,
        /**
         * 新绑定元宝购买道具(商城、快速购买)
         */
        item_new_bind_money_buy = 403,
        /**
         * 使用指定ID道具次数(道具ID)
         */
        item_use_id = 404,
        /**
         * 使用指定类型1道具次数(道具类型1)
         */
        item_use_type1 = 405,
        /**
         * 采集指定单位收集道具上缴(单位ID)
         */
        item_pay_from_collect = 406,
        /**
         * 装备回收
         */
        item_recycle = 407,
        /**
         * 使用指定类型2道具次数(道具类型2)
         */
        item_use_type2 = 408,
        /**
         * 商城礼券购买物品
         */
        item_coupon_buy = 409,
        /**
         * 使用聚灵珠(向下兼容)
         */
        item_use_jlz = 410,
        /**
         * 捐献任务物品
         */
        donate_mission_items = 411,
        /**
         * 装备槽位强化次数
         */
        equipment_pos_upgrade = 500,
        /**
         * 任意装备槽位强化到等级或指定装备槽位强化到等级
         */
        equipment_pos_upgrade_to = 501,
        /**
         * 收集指定等级本职业装备数量
         */
        equipment_have = 502,
        /**
         * 装备强化次数
         */
        equip_intensify = 503,
        /**
         * 装备精炼次数
         */
        equipment_refine = 504,
        /**
         * 指定个数的装备槽位强化到等级
         */
        equipment_pos_count_upgrade_to = 505,
        /**
         * 装备合成次数
         */
        equipment_compound = 506,
        /**
         * 强化x件装备到y级
         */
        equip_intensify_level = 507,
        /**
         * 进入副本(接此任务会开启副本区域)
         */
        map_enter_clone = 601,
        /**
         * 进入指定ID副本(地图ID)
         */
        map_clone_id = 602,
        /**
         * 指定地图内击杀怪物数量(地图ID)
         */
        map_kill_monster = 603,
        /**
         * 进入指定类型副本(EnumCloneType)
         */
        map_clone_type = 604,
        /**
         * 进入副本(接此任务会传送到副本)
         */
        map_enter_clone2 = 605,
        /**
         * 指定地图内击杀boss数量(地图ID)
         */
        map_kill_boss = 606,
        /**
         * 神翼升级到指定等级
         */
        wing_upgrade_to = 701,
        /**
         * 炼魂指定组激活个数
         */
        lian_hun_team_count = 702,
        /**
         * 镶嵌指定等级宝石个数
         */
        gem_count_level = 703,
        /**
         * 激活护卫
         */
        activated_mars = 704,
        /**
         * 召唤护卫
         */
        call_mars = 705,
        /**
         * 激活神炉(EnumSmelterType)
         */
        activated_smelter = 706,
        /**
         * 完成探索任务
         */
        tan_suo_submit = 707,
        /**
         * 通关天关
         */
        tian_guan_finish = 708,
        /**
         * 翻牌次数（生效秘宝）
         */
        extract_card_count = 709,
        /**
         * 帮会上香
         */
        guild_shangxiang = 801,
        /**
         * 帮会红包
         */
        guild_hongbao = 802,
        /**
         * 帮会技能
         */
        guild_jineng = 803,
        /**
         * 帮会商店购买
         */
        guild_shangdian = 804,
        /**
         * 帮会任务完成
         */
        guild_renwu = 805,
        /**
         * 完成指定活动 EnumDailyActivityID
         */
        active_join = 806,
        /**
         * 帮会宣言
         */
        guild_manifesto = 807,
        /**
         * 材料副本
         */
        cai_liao_fu_ben = 808,
        /**
         * 帮会日常任务
         */
        guild_mission_clone = 809,
        /**
         * 帮会技能达到等级
         */
        guild_skill_lv_to = 810,
        /**
         * 帮会技能总等级到达
         */
        guild_All_skill_lv_to = 811,
        /**
         * 组队烧猪洞新手任务
         */
        zu_dui_shao_zhu_dong = 812,
        /**
         * 特戒升级（区别ring_level:特戒升级到..）
         */
        ring_lv_up = 813,
        /**
         * 拍卖行寄售次数
         */
        auction_consignment = 901,
        /**
         * 拥有永久时装件数
         */
        have_perpetual_shizhuang = 902,
        /**
         * 帮会日常任务采集
         */
        guild_mission_collect = 903,
        /**
         * 日常烧猪
         */
        shao_zhu = 904,
        /**
         * 日常四神宫
         */
        si_shen_gong = 905,
        /**
         * 日常通天塔
         */
        tong_tian_ta = 906,
        /**
         * 通天塔领取每日奖励
         */
        tong_tian_ta_daily_award = 907,
        /**
         * 日常活跃度达到某值
         */
        daily_huo_yue_zhi_to_val = 908,
        /**
         * 周活跃度达到某值
         */
        weekly_huo_yue_zhi_to_val = 909,
        /**
         * 击杀帮会boss
         */
        unit_kill_Guild_boss = 910,
        /**
         * 进入指定种类地图(kind)
         */
        map_enter_kind = 911,
        /**
         * 神器达到的等级
         */
        shen_qi_lv_to = 913,
        /**
         * 官职达到的等级
         */
        guan_zhi_lv_to = 914,
        /**
         * 内功达到的等级
         */
        nei_gong_lv_to = 915,
        /**
         * 攻击力达到多少
         */
        atk_val_to = 916,
        /**
         * 宝物祈愿
         */
        praying_for_treasure = 917,
        /**
         * 神武试炼增加活跃度
         */
        shen_wu_shi_lian = 918,
        /**
         * 副本完成
         */
        transcript_complete = 919,
        /**
         * 贪狼副装
         */
        tanlang_activaty = 920,
        /**
         * 九龙山层数
         */
        jiulongshan_lv = 921,
        /**
         * 完成指定任务Id
         */
        submit_mission_by_id = 922,
        /**
         * 斗兽场
         */
        dou_shou_chang = 923,
        /**
         * 移动到目标位置
         */
        move_to_target = 924,
        /**
         * 完成一次盟重边防
         */
        meng_zhong_border = 925,
        /**
         * 宠物等级
         */
        pet_level = 926,
        /**
         * 拥有x件n阶装备
         */
        equip_rank = 927,
        /**
         * npc对话任务
         */
        npc_dialog = 928,
        /**
         * boss悬赏
         */
        boss_award = 929,
        /**
         * 强化槽位等级
         */
        intensify_pos_level = 930,
        /**
         * 神武完成次数
         */
        shen_wu_complete_count = 931,
        /**
         * 装备回收任务提交
         */
        subimt_equip_recycl_mission = 932,
        /**
         * 神罚等级
         */
        shen_fa_level = 933,
        /**
         * 神格等级
         */
        godhood_level = 934,
        /**
         * 宝石总等级
         */
        gem_all_level = 935,
        /**
         * 指定特定达到等级
         */
        ring_level = 936,
        /**
         * 神脉等级
         */
        god_pulse_level = 937,
        /**
         * 神武等级
         */
        shen_wu_level = 938,
        /**
         * 灭世武魂等级
         */
        wu_hun_level_mie_shi = 939,
        /**
         * 烈焰武魂等级
         */
        wu_hun_level_lie_yan = 940,
        /**
         * 铭心武魂等级
         */
        wu_hun_level_ming_xin = 941,
        /**
         * 治愈武魂等级
         */
        wu_hun_level_zhi_yu = 942,
        /**
         * 指定妖气山副本
         */
        yao_qi_shan = 943,
        /**
         * 藏宝图日常完成日数
         */
        treasure_daily_complete_count = 944,
        /**
         * 藏宝图所有完成次数
         */
        treasure_all_complete_count = 945,
        /**
         * 击杀boss悬赏boss
         */
        kill_boss_award_boss = 946,
        /**
         * 武魂总等级
         */
        wu_hun_all_level = 947,
        /**
         * 贪狼套装等级
         */
        tanlang_suit_level = 948,
        /**
         * 巨门套装等级
         */
        jumen_suit_level = 949,
        /**
         * 禄存套装等级
         */
        lucun_suit_level = 950,
        /**
         * 玉佩等级
         */
        smelter_yu_pei = 951,
        /**
         * 神石等级
         */
        smelter_shen_shi = 952,
        /**
         * 龙珠等级
         */
        smelter_long_zhu = 953,
        /**
         * 如意等级
         */
        smelter_ru_yi = 954,
        /**
         * 角色新专生等级
         */
        role_new_level_r = 955,
        /**
         * 角色转职
         */
        role_change_subjob = 956,
        /**
         * 圣域龙灵ID
         */
        saint_dragon_spirit_id = 957,
        /**
         * 龙魂等级
         */
        dragon_spirit_lv = 958,
        /**
         * 技能升到xx级
         */
        skill_lv_to = 959,
        /**
         * 传奇之路完成X章
         */
        supremacy_treasure_section = 960,
        /**
         * boss封印击杀指定星级怪物
         */
        boss_feng_yin_kill_star = 961,
        /**
         * boss封印击杀指定组怪物
         */
        boss_feng_yin_kill_team = 962,
        /**
         * boss封印击杀指定组与星级得怪物
         */
        boss_feng_yin_award_team_star = 963,
        /**
         * boss封印领奖次数
         */
        boss_feng_yin_award = 964,
        /**
         * 升级XX战纹到XX级
         */
        dragon_Vein_lv = 965,
        /**
         * 宝石洞窟达到指定通关层数
         */
        colosseum_top = 966,
        /**
         * 功能开启
         */
        func_open = 999,
        /**
         * 每日炼制符文X次
         */
        daily_fuwenlianzhi_times = 1000,
        /**
         * 装备捐献领取奖励X次
         */
        daily_equip_donate_award_times = 1001,
        /**
         * 符文套装最大等级
         */
        fu_wen_suit_level = 1002,
        /**
         * 符文数量指定数量到达等级
         */
        fu_wen_count_to_level = 1003,
        /**
         * 符文数量指定数量到达品质
         */
        fu_wen_count_to_quality = 1004,
        /**
         * 生肖数量指定数量到达品质
         */
        sheng_xiao_count_to_quality = 1005,
        /**
         * 圣装数量指定数量到达品质
         */
        sheng_zhuang_count_to_quality = 1006,
        /**
         * 命装数量指定数量到达品质
         */
        ming_zhuang_count_to_quality = 1007,
        /**
         * 龙魂觉醒
         */
        dragon_spirit_awaken = 1008,
        /**
         * 发言次数
         */
        chat_count = 1009,
        /**
         * 经验副本
         */
        jing_yan_fu_ben = 1010,
        /**
         * 神甲
         */
        shen_jia = 1011,
        /**
         * 寻宝银箱子次数
         */
        silver_box_count = 1012,
        /**
         * 寻宝金箱子次数
         */
        golden_box_count = 1013,
        /**
         * 神兵升级到XX级
         */
        shen_bing_upgrade = 1014,
        /**
         * 神兵突破到XX级
         */
        shen_bing_break = 1015,
        /**
         * 寻宝积分兑换
         */
        integral_exchange = 1016,
        /**
         * 神兵开启
         */
        shen_bing_open = 1017,
        /**
         * 帮会升级到多少级
         */
        guild_lv_up = 1018,
        /**
         * 获得多少点帮会贡献
         */
        guild_gong_xian = 1019,
        /**
         * 参加帮会bossX次
         */
        guild_boss_partake = 1020,
        /**
         * 参加帮会活动X次
         */
        guild_active_partake = 1021,
        /**
         * 帮会最高等级
         */
        guild_top_lv = 1022,
        /**
         * 猎魔等级
         */
        lie_mo_lv = 1023,
        /**
         * 累计拾取元宝总数达到xxxx
         */
        pick_yuanbao = 1024,
        /**
         * 累计消耗的BOSS积分总数达到xxxx
         */
        consume_boss_score = 1025,
        /**
         * 指定装备位穿戴xx阶装备
         */
        equip_zhuangbei_at_place = 1026,
        /**
         * 回收指定xx阶装备x件装备
         */
        equip_zhuangbei_recycle_place = 1027,
        /**
         * 活动排名
         */
        activity_rank_award = 1028,
        /**
         * 全身装备强化到x级
         */
        strengthen_equip = 1029,
        /**
         * 限时活动加入
         */
        limit_active_join = 1030,
        /**
         * 购买特权卡
         */
        te_quan_card = 1031,
        /**
         * 铭文装备指定数量到达品质(等阶)
         */
        ming_wen_count_to_quality = 1032,
        /**
         * 完成指定类型得限时任务
         */
        complete_type_limite_time_mission = 1033,
        /**
         * 穿戴主套装件数
         */
        equip_suit_dreas = 1034,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 卧龙山庄联盟申请列表
 */
declare module protocol {
    class wlsz_alliance_list_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 卧龙山庄联盟申请列表
 */
declare module protocol {
    class wlsz_alliance_list_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        list: Array<wlsz_alliance_apply_info>;
        dayNum: number;
        list_changed: boolean;
        dayNum_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 卧龙山庄联盟首页
 */
declare module protocol {
    class wlsz_alliance_main_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 卧龙山庄联盟首页
 */
declare module protocol {
    class wlsz_alliance_main_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        list: Array<wlsz_alliance_info>;
        list_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领取包厢奖励时关闭了界面默认打断采集,从新采集
 */
declare module protocol {
    class wlsz_collect_box_close_ui extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 箱子领奖请求
 */
declare module protocol {
    class wlsz_collect_box_get_award_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        id: number;
        awardType: number;
        id_changed: boolean;
        awardType_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领奖回复
 */
declare module protocol {
    class wlsz_collect_box_get_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        state: number;
        id: number;
        id_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 卧龙山庄-箱子采集完成弹出面板
 */
declare module protocol {
    class wlsz_collect_box_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        count: number;
        index: number;
        count_changed: boolean;
        index_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 请求采集
 */
declare module protocol {
    class wlsz_collext_start_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class wlsz_collext_start_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 卧龙山庄_跨服到逻辑服_增加积分同步(用于逻辑服分组)
 */
declare module protocol {
    class wlsz_cs2s_add_integral_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        addIntegral: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * {0}开启[color=#f10610]卧龙银箱子[/color]，获得{1}奖励
 */
declare module protocol {
    class wlsz_cs2s_ag_box_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
        roleName: string;
        itemID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 卧龙山庄跨服服务器向正常逻辑服广播BOSS复活公告
 */
declare module protocol {
    class wlsz_cs2s_boss_relive_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        mapName: string;
        unitName: string;
        unitStaticID: number;
        type: number;
        type_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 卧龙山庄跨服服务器向正常逻辑服广播卧龙山庄关闭公告
 */
declare module protocol {
    class wlsz_cs2s_close_syn extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 卧龙山庄BOSS掉落物品公告(卧龙山庄跨服服务器广播通知正常逻辑服)
 */
declare module protocol {
    class wlsz_cs2s_drop_item_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        mapName: string;
        mapID: number;
        unitName: string;
        roleName: string;
        itemBaseID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 跨服boss信息返回
 */
declare module protocol {
    class wlsz_cs2s_get_world_boss_rare_info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleId: string;
        info: world_boss_rare_info_res;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 卧龙山庄跨服服务器向正常逻辑服广播卧龙山庄开启公告
 */
declare module protocol {
    class wlsz_cs2s_open_syn extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 卧龙山庄跨服服务器向正常逻辑服广播小怪刷新公告
 */
declare module protocol {
    class wlsz_cs2s_refresh_monster_open_syn extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 卧龙山庄烟火
 */
declare module protocol {
    class wlsz_cs2s_yanhuo_syn extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 烤火领取内功石次数
 */
declare module protocol {
    class wlsz_kao_huo_data_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        normal: number;
        advanced: number;
        normal_changed: boolean;
        advanced_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 内功石满转换物品
 */
declare module protocol {
    class wlsz_nei_gong_shi_max_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        type: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 使用内功石物品获得奖励
 */
declare module protocol {
    class wlsz_nei_gong_shi_use_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        times: number;
        post: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class wlsz_nei_gong_shi_use_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 创建帮会通知卧龙跨服
 */
declare module protocol {
    class wlsz_s2cs_create_guild_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        guildId: string;
        guildName: string;
        serverNum: string;
        leaderId: string;
        leaderName: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 获取跨服 Boss信息
 */
declare module protocol {
    class wlsz_s2cs_get_world_boss_rare_info extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        roleId: string;
        serverId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会解散通知跨服
 */
declare module protocol {
    class wlsz_s2cs_guild_del_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        guildId: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 帮会等级变化通知卧龙跨服
 */
declare module protocol {
    class wlsz_s2cs_guild_lv_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        guildId: string;
        level: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 本服公告同步倒跨服
 */
declare module protocol {
    class wlsz_s2cs_notify_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        notifyId: number;
        serverId: number;
        param: string;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步本服得跨服活动开启时间
 */
declare module protocol {
    class wlsz_s2cs_sync_cross_activity_open_time extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        openTime: string;
        serverId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 卧龙大殿进入
 */
declare module protocol {
    class wo_long_da_dian_enter_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 卧龙大殿进入
 */
declare module protocol {
    class wo_long_da_dian_enter_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入卧龙山庄地图，和积分能量变更时都会给在线的全部人同步
 */
declare module protocol {
    class wo_long_da_dian_score_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        score: number;
        state: number;
        score_changed: boolean;
        state_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumConditionState {
        /**
         * 未知
         */
        none = 0,
        /**
         * 开启（可接受）
         */
        open = 1,
        /**
         * 进行中
         */
        progress = 2,
        /**
         * 已完成(可提交)
         */
        complete = 3,
        /**
         * 已提交
         */
        submit = 4,
        /**
         * 放弃
         */
        giveup = 5,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumCommercialContainer {
        /**
         * 开服活动
         */
        open = 1,
        /**
         * 合服活动
         */
        merger = 2,
        /**
         * 全民庆典
         */
        quan_min_qing_dian = 3,
        /**
         * 节日狂欢
         */
        jie_ri_kuang_huan = 4,
        /**
         * 节日-光棍节
         */
        jie_ri_guang_gun = 5,
        /**
         * 定时活动
         */
        ding_shi = 6,
        /**
         * 跨服活动
         */
        cross_server = 7,
        /**
         * 金秋挑战赛
         */
        jin_qiu_tiao_zhan = 101,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumCommercialActivity {
        /**
         * 特惠礼包
         */
        te_hui_gift = 1001,
        /**
         * 全民BOSS
         */
        popular_boss = 1002,
        /**
         * 沙城争霸(开服活动)
         */
        sha_cheng_starcraft_osa = 1003,
        /**
         * 等级竞技
         */
        role_athletics = 1004,
        /**
         * 神翼竞技
         */
        wing_athletics = 1005,
        /**
         * 龙珠竞技
         */
        dragon_ball_athletics = 1006,
        /**
         * 如意竞技
         */
        ru_yi_athletics = 1007,
        /**
         * 侍卫返利
         */
        mars_rebate = 1008,
        /**
         * 领地战（开服活动）
         */
        ling_di_zhan_starcraft_osa = 1009,
        /**
         * 无双战（开服活动）
         */
        wu_shuang_zhan_starcraft_osa = 1010,
        /**
         * 官职竞技
         */
        post_athletics = 1011,
        /**
         * 建帮大业（开服）
         */
        creatguild_activity = 1012,
        /**
         * 英雄竞技
         */
        hero_athletics = 1013,
        /**
         * 元宝盛宴
         */
        yuan_bao_sheng_yan = 1014,
        /**
         * 英雄披风
         */
        hero_cloak = 1015,
        /**
         * 神格
         */
        sports_shenge = 1016,
        /**
         * 神脉
         */
        sports_shenmai = 1017,
        /**
         * 宝石竞技
         */
        sport_gem = 1018,
        /**
         * 龙魂竞技
         */
        sport_dragon_soul = 1019,
        /**
         * 充值排行
         */
        chong_zhi_rank = 1020,
        /**
         * 等级基金
         */
        foundation_level = 1021,
        /**
         * BOSS首杀
         */
        boss_first_down = 1025,
        /**
         * 开服活动-称号租赁-已弃用
         */
        os_title_lease_del = 1026,
        /**
         * 开服活动-BOSS首杀
         */
        os_boss_kill_frist = 1027,
        /**
         * 开服活动-领取记录
         */
        os_limit_time_record = 1028,
        /**
         * 开服活动-装备限时
         */
        os_limit_time_equip = 1029,
        /**
         * 开服活动-套装限时
         */
        os_limit_time_suit = 1030,
        /**
         * 开服活动-BOSS首杀(链接)
         */
        os_boss_first_kill = 1031,
        /**
         * 开服活动-装备限时(链接)
         */
        os_equip_limit_time = 1032,
        /**
         * 开服活动-BOSS排行
         */
        boss_pai_hang_osa = 1033,
        /**
         * 全民改名
         */
        quan_min_change_name = 1034,
        /**
         * 屠魔猎场开服活动
         */
        tumo_hunting_osa = 1035,
        /**
         * 投资礼包
         */
        os_invest_gift = 1036,
        /**
         * 招财进宝
         */
        os_zhao_cai_jin_bao = 1037,
        /**
         * 命装降临
         */
        os_vice_arrive = 1038,
        /**
         * 最强战士
         */
        os_strongest = 1039,
        /**
         * 圣装降临
         */
        os_holy_arrive = 1040,
        /**
         * 钻石盛宴
         */
        diamond_sheng_yan = 1041,
        /**
         * 觉醒竞技
         */
        jue_xing_athletics = 1042,
        /**
         * 装备竞技
         */
        equip_athletics = 1043,
        /**
         * 转生竞技
         */
        relevel_athletics = 1044,
        /**
         * 活跃送礼
         */
        huo_yue_song_li = 2001,
        /**
         * 神秘商店
         */
        shen_mi_shang_dian = 2003,
        /**
         * 全民探宝
         */
        quan_min_tan_bao = 2004,
        /**
         * 沙城争霸(合服活动)
         */
        sha_cheng_starcraft_msa = 2005,
        /**
         * 集字有礼
         */
        ji_zi_you_li = 2006,
        /**
         * 特殊商店(合服活动)
         */
        special_shop_msa = 2007,
        /**
         * 全民龙珠
         */
        quan_min_long_zhu = 2008,
        /**
         * 神秘商城(可个人刷新)
         */
        shen_mi_shang_cheng = 2009,
        /**
         * 全民消费
         */
        quan_min_xiao_fei = 2010,
        /**
         * 领地战（合服活动）
         */
        ling_di_zhan_starcraft_msa = 2011,
        /**
         * 无双战（合服活动）
         */
        wu_shuang_zhan_starcraft_msa = 2012,
        /**
         * 充值返元宝（合服活动）
         */
        ReturnBindSliver = 2013,
        /**
         * 充值有礼（合服活动）
         */
        RechargeGift = 2014,
        /**
         * 超级瑞兽（合服活动）
         */
        SuperBlessingMonster = 2015,
        /**
         * 神翼盛宴
         */
        shen_yi_sheng_yan = 2016,
        /**
         * 龙魂盛宴
         */
        long_hun_sheng_yan = 2017,
        /**
         * 如意盛宴
         */
        ru_yi_sheng_yan = 2018,
        /**
         * 超级瑞兽
         */
        chao_ji_rui_shou = 2019,
        /**
         * 全民站街
         */
        quan_min_zhan_jie = 3001,
        /**
         * 庆典副本
         */
        qing_dian_fu_ben = 3002,
        /**
         * boss排行
         */
        boss_pai_hang = 3003,
        /**
         * 庆典宝藏
         */
        qing_dian_bao_zang = 3004,
        /**
         * 充值排行(节日活动)
         */
        recharge_rank_ha = 3005,
        /**
         * 幸运宝藏(废弃)
         */
        lucky_bao_zang = 3006,
        /**
         * 消费排行(节日活动)
         */
        consume_rank_ha = 3007,
        /**
         * 神装降临
         */
        shen_zhuang_jiang_lin = 3008,
        /**
         * boss狂欢
         */
        boss_kuang_huan = 3009,
        /**
         * 幸运狂欢
         */
        xing_yun_kuang_huan = 3010,
        /**
         * 全民如意
         */
        quan_min_ru_yi = 3011,
        /**
         * 全服双倍
         */
        quan_fu_shuang_bei = 4001,
        /**
         * 充值送绑元
         */
        recharge_give_bind_money = 4002,
        /**
         * 充值回馈
         */
        chong_zhi_hui_kui = 4003,
        /**
         * 累计充值
         */
        accumulative_recharge = 4004,
        /**
         * 全民抢购
         */
        quan_min_qiang_gou = 4005,
        /**
         * 消费豪礼（合服）
         */
        consume_rank_msa = 4006,
        /**
         * 开服连续充值 商业活动
         */
        continuous_recharge = 4007,
        /**
         * 7日特权
         */
        seven_day_privilege = 4008,
        /**
         * 登陆有礼（合服）
         */
        login_reward = 4009,
        /**
         * 特戒折扣
         */
        special_ring_discount = 4010,
        /**
         * 投资理财
         */
        tou_zi_li_cai = 4011,
        /**
         * 神器折扣
         */
        shenqi_zhe_kou = 4012,
        /**
         * 开服活动-称号租赁
         */
        os_title_lease = 4013,
        /**
         * 满减特惠（或折扣）
         */
        os_discount = 4014,
        /**
         * 装备盛宴
         */
        zhuang_bei_sheng_yan = 4016,
        /**
         * 周期基金
         */
        foundation_cycle = 4017,
        /**
         * 消费连击
         */
        consumption_combo = 4018,
        /**
         * 开服活动-啤酒盛宴
         */
        pijiu_shengyan_buy = 4019,
        /**
         * 神装连充
         */
        continuous_recharge_god = 4020,
        /**
         * 跨服七日登陆
         */
        cross_sevenloginday = 5001,
        /**
         * 跨服特惠礼包
         */
        cross_specgiftbag = 5002,
        /**
         * 跨服竞技
         */
        cross_athletics = 5003,
        /**
         * 跨服饮酒竞技务
         */
        cross_drink_wine = 5004,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 采集类型
 */
declare module protocol {
    const enum EnumCollectType {
        /**
         * 默认类型统一处理
         */
        none = 0,
        /**
         * 领地战采集
         */
        manor = 1,
        /**
         * 卧龙山庄烟火采集
         */
        yanhuo = 2,
        /**
         * 卧龙山庄银箱采集
         */
        agBox = 3,
        /**
         * 卧龙山庄金箱子采集
         */
        gBox = 4,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumCodeType {
        /**
         * 默认
         */
        normal = 0,
        /**
         * 602
         */
        platform_602 = 1,
        /**
         * 迅雷
         */
        platform_Thunder = 2,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 组队副本类型
 */
declare module protocol {
    const enum EnumCloneType {
        /**
         * 烧猪
         */
        shao_zhu = 1,
        /**
         * 四神宫
         */
        si_shen_gong = 2,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumClientFunc2 {
        /**
         * 移动到传送点后攻击
         */
        move_auto_fight = 1,
        /**
         * 移动到传送点后点开NPC
         */
        move_click_npc = 2,
        /**
         * 移动到传送点后自动做任务
         */
        move_auto_dotask = 3,
        /**
         * 移动到传送点后打开窗口
         */
        move_open_window = 4,
        /**
         * 移动到传送点后点开NPC(spriteid)
         */
        move_click_sprite = 5,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumClientFunc {
        /**
         * 打开面板
         */
        open_dialog = 1,
        /**
         * 移动到某传送点
         */
        move = 2,
        /**
         * 传送到某传送点
         */
        transfer = 3,
        /**
         * 点击单位
         */
        click_unit = 4,
        /**
         * 关闭面板
         */
        close_dialog = 5,
        /**
         * 自动做主线任务
         */
        auto_do_task = 6,
        /**
         * 自动挂机
         */
        auto_fight = 7,
        /**
         * 跟随目标
         */
        follow = 8,
        /**
         * 显示指定引导
         */
        show_guide = 9,
        /**
         * 显示任务引导
         */
        show_task_guide = 10,
        /**
         * 隐藏所有引导
         */
        remove_guide = 11,
        /**
         * 显示活动面板
         */
        open_activity_dialog = 12,
        /**
         * 显示挖掘引导
         */
        show_dig_guide = 13,
        /**
         * 显示脚本右侧道具飞行特效
         */
        show_script_right_item_effect = 14,
        /**
         * 显示脚本面板道具飞行特效
         */
        show_script_dialog_item_effect = 15,
        /**
         * 移动到某坐标点（'|'分割xy）
         */
        move_pos = 16,
        /**
         * 特殊任务后端处理
         */
        mission_special = 17,
        /**
         * 震屏
         */
        shake = 18,
        /**
         * 传送到某传送点(针对于没有地图关系的传送）
         */
        transfer_with_mapID = 19,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 客户端登录设备类型
 */
declare module protocol {
    const enum EnumClientDeviceType {
        /**
         * IOS设备
         */
        ios = 1,
        /**
         * 安卓
         */
        android = 2,
        /**
         * 电脑PC
         */
        pc = 3,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumClickState {
        /**
         * 不可点击
         */
        none = 0,
        /**
         * 攻城战占领旗子
         */
        flag_gcz = 1,
        /**
         * 斩首
         */
        behead = 2,
        /**
         * 神任务武采集战旗
         */
        flag_sw = 3,
        /**
         * 神武任务采集尸体
         */
        corpse_sw = 4,
        /**
         * 炼狱迷宫开宝箱
         */
        box_lymg = 5,
        /**
         * 材料副本开箱子
         */
        box_clfb = 6,
        /**
         * 帮会大篝火
         */
        guild_fire = 7,
        /**
         * 帮会个人篝火
         */
        guild_person_fire = 8,
        /**
         * 领地战旗
         */
        territory_flag = 9,
        /**
         * 虚幻洞窟读条(金矿，神秘宝箱使用)
         */
        xuhuandongku_dutiao = 10,
        /**
         * 帮会日常任务采集
         */
        guild_mission = 11,
        /**
         * 卧龙山庄_烟火
         */
        wo_long_shan_zhuang_yan_huo = 12,
        /**
         * 斩将夺旗
         */
        zhan_jiang_duo_qi = 13,
        /**
         * 任务
         */
        mission = 14,
        /**
         * 藏宝图书库采集
         */
        treasure_book = 15,
        /**
         * 血战沙城占领旗帜
         */
        flag_xzsc = 16,
        /**
         * 热血矿区挖矿
         */
        mine = 17,
        /**
         * 跨服争霸(GVG1)
         */
        kua_fu_zheng_ba = 18,
        /**
         * 圣龙战场(GVG2)
         */
        sheng_long_zhan_chang = 19,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 聊天类型
 */
declare module protocol {
    const enum EnumChatType {
        /**
         * 文字聊天
         */
        word = 0,
        /**
         * 语音聊天
         */
        voice = 1,
        /**
         * 语音文本翻译
         */
        voice_word = 2,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 聊天超链接功能枚举
 */
declare module protocol {
    const enum EnumChatFuncType {
        /**
         * 物品
         */
        Item = 3210,
        /**
         * 位置
         */
        Pos = 3211,
        /**
         * 成就
         */
        Achieve = 3212,
        /**
         * 语音
         */
        Voice = 3220,
        /**
         * 客户端功能
         */
        ClientFunc = 3221,
        /**
         * 组队
         */
        JoinTeam = 3222,
        /**
         * 帮会篝火任务
         */
        GuildTask = 3223,
        /**
         * 角色展示
         */
        RoleShow = 3224,
        /**
         * 帮会职业
         */
        GuildJob = 3225,
        /**
         * 聊天答题
         */
        ChatAnswer = 3226,
        /**
         * 地图传送
         */
        ChatMapTrans = 3227,
        /**
         * 基本物品
         */
        BaseItem = 3228,
        /**
         * 聊天动作（传送至角色）
         */
        ChatAction = 3229,
        /**
         * 帮会欢迎信息
         */
        GuildWelcomeInfo = 3230,
        /**
         * 跨服组队
         */
        CrossTeam = 3231,
        /**
         * 盟重边防组队
         */
        BorderTeam = 3232,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumChatChannel {
        /**
         * 当前聊天
         */
        current = 1,
        /**
         * 队伍聊天
         */
        team = 2,
        /**
         * 帮会聊天
         */
        guild = 3,
        /**
         * 世界聊天
         */
        world = 4,
        /**
         * 密聊
         */
        secret = 5,
        /**
         * 系统信息
         */
        system = 6,
        /**
         * 平台公告
         */
        notice = 7,
        /**
         * 本服喇叭
         */
        local_channel = 8,
        /**
         * 全服喇叭
         */
        platform = 9,
        /**
         * 联盟聊天
         */
        alliance = 10,
        /**
         * 跨服本服聊天
         */
        cross_server = 11,
        /**
         * 跨服全服聊天
         */
        cross_all_server = 12,
        /**
         * 组跨服聊天频道一
         */
        team_cross_1 = 13,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumChatAction {
        /**
         * 异常
         */
        err = 0,
        /**
         * 押镖营救
         */
        ya_biao_rescue = 1,
        /**
         * 帮会押镖助阵
         */
        guild_yabiao_help = 2,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 充值类型
 */
declare module protocol {
    const enum EnumChargeType {
        /**
         * 正常充值
         */
        normal = 0,
        /**
         * 圣龙基金
         */
        sheng_long_fund = 1,
        /**
         * 等级基金
         */
        level_fund = 2,
        /**
         * 每日礼包_道具直购10_运维要区分
         */
        day_gift_10 = 3,
        /**
         * 每日礼包_道具直购30_运维要区分
         */
        day_gift_30 = 4,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumCardType {
        /**
         * 团购1[如果都有，团购按金尊卡和至尊卡算]
         */
        group_buy1 = 4,
        /**
         * 团购2[如果有一个没有(未购买、已过期)，团购按没有拥有的算]
         */
        group_buy2 = 5,
        /**
         * 卡包一
         */
        card_bag_one = 1001,
        /**
         * 银卡
         */
        silver_card = 2001,
        /**
         * 金卡
         */
        gold_card = 2002,
        /**
         * 至尊卡
         */
        supreme_card = 2003,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 窗口推送-取消推送条件类型
 */
declare module protocol {
    const enum EnumCancelPushCondType {
        /**
         * 首充
         */
        first_recharge = 1,
        /**
         * 超值特惠购买档位
         */
        buy_super_value = 2,
        /**
         * 神器激活ID
         */
        artifac_activate = 3,
        /**
         * 等级基金购买
         */
        activite_level_fund = 4,
        /**
         * 购买元宝礼包
         */
        buy_yb_gift = 5,
        /**
         * 盟重边防剩余次数
         */
        mzbf_rem_num = 6,
        /**
         * 每日充值
         */
        everyday_recharge = 7,
        /**
         * 称号租赁
         */
        title_rent = 8,
        /**
         * 元宝投资礼包
         */
        gold_invest_gift = 9,
        /**
         * 激活宠物
         */
        act_pet = 10,
        /**
         * 特权卡激活ID
         */
        privilege_card_activate = 11,
        /**
         * 经验炼制剩余次数
         */
        make_exp_activate = 12,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 是否可以进行拍卖
 */
declare module protocol {
    const enum EnumCanAuction {
        /**
         * 不可拍卖
         */
        noCanAuction = 0,
        /**
         * 可拍卖
         */
        canAuction = 1,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 购买次数类型
 */
declare module protocol {
    const enum EnumBuyCountType {
        /**
         * 神元购买次数类型
         */
        god_pulse_val = 100,
        /**
         * 斗兽场
         */
        colosseum = 200,
        /**
         * 跨服
         */
        cross_service = 500,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumBuffType {
        /**
         * 无效的
         */
        none = 0,
        /**
         * 时间
         */
        time = 1,
        /**
         * 生命
         */
        hp = 2,
        /**
         * 魔值
         */
        mp = 3,
        /**
         * 生命和魔值
         */
        hp_mp = 4,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 世界繁荣度，当玩家等级大于x并且小于最高级别y级别，每一级别增加百分之10的杀怪经验。
 */
declare module protocol {
    class world_prosperous_load_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        Bonus: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 客户端弹窗显示
 */
declare module protocol {
    class world_prosperous_show_change_syn extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入无双战场
 */
declare module protocol {
    class wu_shuang_battle_enter_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入无双战场
 */
declare module protocol {
    class wu_shuang_battle_enter_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 无双战面板信息
 */
declare module protocol {
    class wu_shuang_battle_info_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 无双战面板信息
 */
declare module protocol {
    class wu_shuang_battle_info_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        manorInfo: Array<info_manor_battle>;
        lordName: string;
        manorInfo_changed: boolean;
        lordName_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 无双战日志
 */
declare module protocol {
    class wu_shuang_battle_log_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 无双战日志
 */
declare module protocol {
    class wu_shuang_battle_log_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        logs: Array<info_wu_shuang_battle_log>;
        logs_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 无双战场景数据
 */
declare module protocol {
    class wu_shuang_battle_scene_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        count: number;
        pillarOwner: string;
        rank: Array<info_wu_shuang_scene_rank>;
        count_changed: boolean;
        pillarOwner_changed: boolean;
        rank_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 心魔密室数据同步
 */
declare module protocol {
    class xinmo_info_mishi_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        npcID: number;
        totalNum: number;
        canSubmitNum: number;
        bossState: number;
        canSubmitNum_changed: boolean;
        bossState_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 心魔查看信息请求，界面打开时发送
 */
declare module protocol {
    class xinmo_load_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        npcID: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class xinmo_load_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 提交特殊材料
 */
declare module protocol {
    class xinmo_submit_material_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        npcID: number;
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 心魔材料提交返回
 */
declare module protocol {
    class xinmo_submit_material_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 旋云之巅时间同步
 */
declare module protocol {
    class xuan_yun_zhi_dian_die_time_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        residueTime: number;
        boosDead: boolean;
        residueTime_changed: boolean;
        boosDead_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入请求
 */
declare module protocol {
    class xuan_yun_zhi_dian_enter_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    class xuan_yun_zhi_dian_enter_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 同步排名信息
 */
declare module protocol {
    class xuan_yun_zhi_dian_rank_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        array: Array<info_xuan_yun_zhi_dian>;
        self: info_xuan_yun_zhi_dian;
        array_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 交替答案
 */
declare module protocol {
    class xuhuandongku_answer_req extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        answerId: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 交替答案回复
 */
declare module protocol {
    class xuhuandongku_answer_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 虚幻洞窟答题领奖请求
 */
declare module protocol {
    class xuhuandongku_box_award_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 领奖请求状态
 */
declare module protocol {
    class xuhuandongku_box_award_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 虚幻洞窟活动数据
 */
declare module protocol {
    class xuhuandongku_scene_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        curLuxian: number;
        eventID: number;
        state: number;
        time: number;
        enermy: number;
        curRoom: number;
        curLuxian_changed: boolean;
        eventID_changed: boolean;
        state_changed: boolean;
        time_changed: boolean;
        enermy_changed: boolean;
        curRoom_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 翻牌的格子编号 1~9
 */
declare module protocol {
    class xuhuandongku_shuffle_card_itemid_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 翻牌回复
 */
declare module protocol {
    class xuhuandongku_shuffle_card_itemid_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
        itemId: number;
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 洗牌翻牌
 */
declare module protocol {
    class xuhuandongku_shuffle_card_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        itemId: Array<number>;
        itemId_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 终极宝箱弹出
 */
declare module protocol {
    class xuhuandongku_super_box_syn extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 答题答案对不对
 */
declare module protocol {
    class xuhuandongku_treasure_box_dati_answer_state extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 虚幻洞窟事件1_宝箱答题
 */
declare module protocol {
    class xuhuandongku_treasure_box_dati_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        id: number;
        count: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumBuffKind {
        /**
         * 无敌
         */
        wudi = 1,
        /**
         * 施毒术
         */
        shidushu = 2,
        /**
         * 治愈术
         */
        zhiyushu = 3,
        /**
         * 麻痹
         */
        mabi = 10,
        /**
         * 世界等级加成
         */
        worldlevel = 20,
        /**
         * 全服双倍经验
         */
        doubleexp = 30,
        /**
         * 混乱
         */
        hunluan = 40,
        /**
         * 沉默
         */
        chenmo = 50,
        /**
         * 福星高照
         */
        fuxinggaozhao = 60,
        /**
         * 狮子吼
         */
        shizihou = 100,
        /**
         * 烈火剑法灼烧
         */
        liehuojiafazhuoshao = 101,
        /**
         * 神威护体
         */
        shenweihuti = 102,
        /**
         * 魔法盾
         */
        mofadun = 200,
        /**
         * 虚无形体
         */
        xuwu = 201,
        /**
         * 流星火雨灼烧
         */
        liuxinghuoyuzhuoshao = 202,
        /**
         * 抗拒火环倍数伤害
         */
        kangjuhuohuanbeishushanghai = 203,
        /**
         * 战宠狂暴
         */
        zhanchongkuangbao = 240,
        /**
         * 神圣战甲术
         */
        shengjia = 300,
        /**
         * 治愈术
         */
        zhiyu = 301,
        /**
         * 隐身术
         */
        yinshen = 302,
        /**
         * 施毒术
         */
        shidu = 303,
        /**
         * 施毒术
         */
        shidu2 = 304,
        /**
         * 飓风破
         */
        jufengpo = 305,
        /**
         * 无极真气
         */
        wujizhenqi = 306,
        /**
         * 圣甲术减伤
         */
        shengjiashujianshang = 307,
        /**
         * 群隐增暴击
         */
        qunyinzengbaoji = 308,
        /**
         * 气血石
         */
        qixueshi = 400,
        /**
         * HP强化药水
         */
        hpdrug = 401,
        /**
         * 魔法药
         */
        mpdrug = 402,
        /**
         * 攻击药水
         */
        atkdrug = 403,
        /**
         * 强效物防药水
         */
        wudefdrug = 404,
        /**
         * 强效法防药水
         */
        fadefdrug = 405,
        /**
         * 经验buff
         */
        exp = 406,
        /**
         * 称号buff
         */
        chenghaobuf = 407,
        /**
         * 宝石增伤值
         */
        baoshizengshanghai = 408,
        /**
         * 宝石物免比例
         */
        baoshiwumianbili = 409,
        /**
         * 宝石魔免比例
         */
        baoshimomianbili = 410,
        /**
         * 宝石回血比例
         */
        baoshihuixuebili = 411,
        /**
         * 超级瑞兽变身
         */
        chaojiruishou = 500,
        /**
         * 组队攻击boss
         */
        zuduigongji = 501,
        /**
         * 组队防御boss
         */
        zuduifangyu = 502,
        /**
         * 组队暴击boss
         */
        zuduibaoji = 503,
        /**
         * BOSS吸血比例
         */
        bossxixuebili = 504,
        /**
         * BOSS反伤比例
         */
        bossfanshangbili = 505,
        /**
         * BOSS回血比例
         */
        bosshuixuebili = 506,
        /**
         * BOSS免伤比例
         */
        bossmianshangbili = 507,
        /**
         * BOSS加防数值
         */
        bossjiafangshuzhi = 508,
        /**
         * BOSS增伤比例
         */
        bosszengshangbili = 509,
        /**
         * BOSS破防几率
         */
        bosspofangjilv = 510,
        /**
         * BOSS神圣攻击数值
         */
        bossshenshengshuzhi = 511,
        /**
         * BOSS暴击几率
         */
        bossbaojijilv = 512,
        /**
         * BOSS狂暴状态
         */
        bosskuangbaozhuangtai = 513,
        /**
         * 怪物群体施毒术·减血
         */
        guaiwuquntishidu = 514,
        /**
         * BOSS灼烧debuff
         */
        bosszhuoshao = 515,
        /**
         * 群体治愈术·持续回血
         */
        quntizhiyushu = 516,
        /**
         * 攻击弱化
         */
        gongjiruohua = 600,
        /**
         * 防御弱化
         */
        fangyuruohua = 610,
        /**
         * 经验buff
         */
        jingyanbuf = 620,
        /**
         * vip经验buff
         */
        vipexp = 621,
        /**
         * 准确增加
         */
        zhunquezengjia = 630,
        /**
         * 抗性1
         */
        kangxing1 = 640,
        /**
         * 抗性2
         */
        kangxing2 = 650,
        /**
         * 喝酒
         */
        hejiu = 655,
        /**
         * 泡点元宝
         */
        paodianyuanbao = 1007,
        /**
         * 虚弱
         */
        xuruo = 1101,
    }
}
/**
 * File is automatically generated, Please do not modify
 * Buff特效类型
 */
declare module protocol {
    const enum EnumBuffEffectType {
        /**
         * 无
         */
        none = 0,
        /**
         * 2d场景特效
         */
        scene_2d = 1,
        /**
         * 中毒
         */
        poisoning = 2,
        /**
         * 隐身
         */
        invisible = 3,
        /**
         * 石化
         */
        petrifaction = 4,
        /**
         * 3d场景特效
         */
        scene_3d = 5,
        /**
         * 激怒
         */
        jinu = 6,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumBrandDrawState {
        /**
         * 准备许愿
         */
        ready_open = 0,
        /**
         * 准备抽取
         */
        ready_draw = 1,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 不同模块的BOSS定义
 */
declare module protocol {
    const enum EnumBossType {
        /**
         * 世界boss
         */
        world = 0,
        /**
         * 洪荒BOSS
         */
        hong_huang = 1,
        /**
         * 普通BOSS
         */
        normal = 2,
    }
}
/**
 * File is automatically generated, Please do not modify
 * Boss组别类型
 */
declare module protocol {
    const enum EnumBossGroupType {
        /**
         * 世界boss
         */
        WorldBoss = 1,
        /**
         * 个人BOSS
         */
        PrivateBoss = 2,
        /**
         * BOSS之家
         */
        BossHome = 3,
        /**
         * 玛雅神殿
         */
        MayaTemple = 4,
        /**
         * 心魔大殿
         */
        HeartDemonBigHall = 5,
        /**
         * 转生神殿
         */
        RelevelTemple = 6,
        /**
         * 全民屠魔
         */
        JungleTroll = 7,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumBossEarlyKillRank {
        /**
         * 1
         */
        first = 1,
        /**
         * 2
         */
        second = 2,
        /**
         * 3
         */
        third = 3,
        /**
         * 结束标记，end别用，lua关键字
         */
        finish = 4,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumBornKind {
        /**
         * 正常出现
         */
        normal = 0,
        /**
         * 出生动画
         */
        birth = 1,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 一口价拍卖和竞价
 */
declare module protocol {
    const enum EnumAuctionBuy {
        /**
         * 一口价
         */
        onePrice = 0,
        /**
         * 竞价
         */
        bidPrice = 1,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumAttrType {
        /**
         * 噬魂积分(新圣龙币)
         */
        ling_qi_integral = 97,
        /**
         * 圣龙币(弃用)
         */
        saint_dragon_currency = 98,
        /**
         * 新增绑定元宝(弃用)
         */
        money_bind_new = 99,
        /**
         * 改为元宝
         */
        gold = 100,
        /**
         * 改为绑定元宝
         */
        gold_bind = 101,
        /**
         * 改为钻石
         */
        money = 102,
        /**
         * 礼券（雷霆版绑钻）
         */
        money_coupon = 103,
        /**
         * 等级
         */
        lv = 104,
        /**
         * 旧转生等级(废)
         */
        lv_r = 105,
        /**
         * 经验值
         */
        exp = 106,
        /**
         * 经验值
         */
        exp2 = 107,
        /**
         * 内功等级
         */
        nei_lv = 108,
        /**
         * 内功经验
         */
        nei_exp = 109,
        /**
         * 内功经验
         */
        nei_exp2 = 110,
        /**
         * 内功当前值
         */
        nei_val_cur = 111,
        /**
         * 内功最大值
         */
        nei_val_max = 112,
        /**
         * vip贵族
         */
        vip_lv = 113,
        /**
         * 转生值
         */
        rebirth_val = 114,
        /**
         * 韧性
         */
        tenacity_val = 115,
        /**
         * 战士对法师的伤害
         */
        dmg_to_fa_rate = 116,
        /**
         * 法师对道士的伤害
         */
        dmg_to_dao_rate = 117,
        /**
         * 对玩家伤害
         */
        dmg_to_zhan_rate = 118,
        /**
         * 低级减伤
         */
        dmg_dec_low_rate = 119,
        /**
         * 高级减伤
         */
        dmg_dec_high_rate = 120,
        /**
         * 充值记录
         */
        vip_pay = 121,
        /**
         * vip复活使用次数
         */
        vip_relive_use = 122,
        /**
         * 宝藏积分
         */
        mine_score = 123,
        /**
         * 物品回收积分
         */
        item_recycle_score = 124,
        /**
         * 功勋值
         */
        gong_xun_val = 125,
        /**
         * 功勋称号
         */
        gong_xun_lv = 126,
        /**
         * 炼魂值
         */
        lian_hun_val = 127,
        /**
         * 炼魂等级
         */
        lian_hun_lv = 128,
        /**
         * 消费复活次数
         */
        money_relive_use = 129,
        /**
         * 神武值
         */
        shen_wu_val = 130,
        /**
         * 神武等级
         */
        shen_wu_lv = 131,
        /**
         * 荣誉值
         */
        rong_yu_val = 132,
        /**
         * 荣誉等级
         */
        rong_yu_lv = 133,
        /**
         * 天赋最大点数
         */
        tian_fu_val = 134,
        /**
         * 对怪伤害加成
         */
        unit_dmg_rate = 135,
        /**
         * 杀怪经验倍数
         */
        unit_exp_times = 136,
        /**
         * 对皇宫全体技能免伤比例
         */
        dtr_from_palace_skill_rate = 137,
        /**
         * 怒气值
         */
        nu_qi_val = 138,
        /**
         * 福利钻石
         */
        weal = 139,
        /**
         * 成就值
         */
        achievement_val = 140,
        /**
         * 成就等级
         */
        achievement_lv = 141,
        /**
         * 灵佑值
         */
        ling_you_val = 142,
        /**
         * 境界等级
         */
        holy_beast_level = 143,
        /**
         * 新转生等级
         */
        new_level_r = 144,
        /**
         * 新转生等级经验
         */
        new_r_exp1 = 145,
        /**
         * 新转生等级经验
         */
        new_r_exp2 = 146,
        /**
         * 真实充值
         */
        pay = 150,
        /**
         * 强制闪避
         */
        dod_force = 151,
        /**
         * 天赋伤害增强
         */
        tian_fu_dmg_add = 152,
        /**
         * 天赋免伤
         */
        tian_fu_dmg_sub = 153,
        /**
         * 技能伤害增强
         */
        skill_dmg_add = 154,
        /**
         * 技能免伤
         */
        skill_dmg_sub = 155,
        /**
         * 某种技能的对人攻击系数
         */
        skill_atk_rate_for_role = 156,
        /**
         * 某种技能的对人攻击附加威力
         */
        skill_atk_val_for_role = 157,
        /**
         * 某种技能的对怪物攻击系数
         */
        skill_atk_rate_for_unit = 158,
        /**
         * 某种技能的对怪物攻击附加威力
         */
        skill_atk_val_for_unit = 159,
        /**
         * 被战士攻击减伤
         */
        dtr_from_zhan_rate = 160,
        /**
         * 被法师攻击减伤
         */
        dtr_from_fa_rate = 161,
        /**
         * 被道士攻击减伤
         */
        dtr_from_dao_rate = 162,
        /**
         * 被怪物攻击
         */
        dtr_from_unit_rate = 163,
        /**
         * 吸血
         */
        atk_suck_blood_rate = 164,
        /**
         * 伤害反弹
         */
        dtr_rebound_rate = 165,
        /**
         * 吸血腐蚀
         */
        hit_suck_blood_rate = 166,
        /**
         * 侍卫伤害百分比
         */
        dmg_guard_rate = 167,
        /**
         * 卡牌值
         */
        ka_pai_val = 168,
        /**
         * 卡牌等级
         */
        ka_pai_lv = 169,
        /**
         * PK值
         */
        pk_val = 170,
        /**
         * PK状态
         */
        pk_state = 171,
        /**
         * 兵魂值
         */
        bing_hun_val = 173,
        /**
         * 兵魂等级
         */
        bing_hun_lv = 174,
        /**
         * 筑基值
         */
        zhu_ji_val = 175,
        /**
         * 筑基等级
         */
        zhu_ji_lv = 176,
        /**
         * 天关层数
         */
        Tian_Guan_Lv = 177,
        /**
         * 某种技能的对人防御系数
         */
        skill_def_rate_for_role = 190,
        /**
         * 某种技能的对人防御力量
         */
        skill_def_val_for_role = 191,
        /**
         * 负重上限
         */
        load_value = 192,
        /**
         * 遗物回收值
         */
        relic_recycle = 193,
        /**
         * 怒气恢复增加比例
         */
        nv_qi_add_rate = 194,
        /**
         * 暴击抵抗值(减少暴击值)
         */
        def_cri_val = 210,
        /**
         * 对英雄伤害
         */
        dmg_to_hero_rate = 211,
        /**
         * 减免英雄伤害
         */
        dec_from_hero_rate = 212,
        /**
         * 对角色伤害
         */
        dmg_to_role_rate = 213,
        /**
         * 免疫玩家伤害
         */
        dec_from_role_rate = 214,
        /**
         * 九龙山层数
         */
        jiu_long_lv = 215,
        /**
         * 角色体力
         */
        physical_power = 216,
        /**
         * 上次体力回复时间
         */
        physical_power_time = 217,
        /**
         * 盟重边防功勋值
         */
        gong_xun_val2 = 218,
        /**
         * 龙血值，火龙之心用
         */
        dragon_blood = 219,
        /**
         * 英雄护盾当前值
         */
        hero_shield_cur_val = 220,
        /**
         * 英雄护盾最大值
         */
        hero_shield_max_val = 221,
        /**
         * 英雄护盾每秒恢复数
         */
        hero_shield_recover_val = 222,
        /**
         * 魔力值
         */
        mo_li_val = 230,
        /**
         * 转盘积分
         */
        turntable_point = 231,
        /**
         * VIP成就
         */
        vip_achi_lv = 232,
        /**
         * 玲珑积分
         */
        ling_long_val = 233,
        /**
         * vip经验
         */
        vip_exp = 234,
        /**
         * vip积分
         */
        vip_achi_new = 235,
        /**
         * 秘境币
         */
        mijing_gold = 240,
        /**
         * 是否隐身
         */
        not_visible = 500,
        /**
         * 魔法盾
         */
        magic_shield = 501,
        /**
         * 无法攻击
         */
        not_atk = 502,
        /**
         * 无法移动
         */
        not_move = 503,
        /**
         * 精灵状态(EnumSpriteState)
         */
        sprite_state = 504,
        /**
         * 混乱移动
         */
        chaos_move = 505,
        /**
         * 战斗力
         */
        fight_power = 540,
        /**
         * 玉佩精华
         */
        jade = 550,
        /**
         * 神石精华
         */
        stone = 551,
        /**
         * 龙魂精华
         */
        soul = 552,
        /**
         * 如意精华
         */
        ruyi = 553,
        /**
         * 装备精炼值
         */
        equip_refine_value = 554,
        /**
         * 花_魅力值
         */
        Flawer_MeiLi = 555,
        /**
         * 灵气值
         */
        ling_qi_value = 556,
        /**
         * 宝石值
         */
        gem_chip = 557,
        /**
         * 声望
         */
        fame = 558,
        /**
         * 帮会技能概率（流星雨）
         */
        guild_skill_prob1 = 559,
        /**
         * 帮会技能概率（斩杀）
         */
        guild_skill_prob2 = 560,
        /**
         * 帮会技能斩杀额外百分比伤害
         */
        guild_skill2_effect = 561,
        /**
         * 药品回复效果增加值
         */
        medicine_add_val = 562,
        /**
         * 药品回复效果增加百分比
         */
        medicine_add_pct = 563,
        /**
         * 受到怪物伤害减少值
         */
        unit_hurt_dec_val = 564,
        /**
         * 对怪伤害免疫
         */
        unit_hurt_dec_pct = 565,
        /**
         * 切割伤害
         */
        qi_ge_harm = 566,
        /**
         * 对怪物的暴击率增加
         */
        crir_unit_add = 567,
        /**
         * 对怪物的暴击值增加
         */
        criv_unit_add = 568,
        /**
         * 玉佩的生命值增加百分比
         */
        jade_hp_add_pct = 569,
        /**
         * 神石的防御值增加百分比
         */
        stone_def_add_pct = 570,
        /**
         * 噬魂攻击
         */
        soul_atk_add_pct = 571,
        /**
         * 如意的暴击值增加百分比
         */
        ruyi_criv_add_pct = 572,
        /**
         * 技能固定伤害增加值
         */
        skill_atk_add_val = 573,
        /**
         * 龙魂精华金
         */
        dragon_soul_essence_gold = 574,
        /**
         * 龙魂精华木
         */
        dragon_soul_essence_timber = 575,
        /**
         * 龙魂精华水
         */
        dragon_soul_essence_water = 576,
        /**
         * 龙魂精华火
         */
        dragon_soul_essence_fire = 577,
        /**
         * 龙魂精华土
         */
        dragon_soul_essence_soil = 578,
        /**
         * 龙魂等级金
         */
        dragon_soul_lv_gold = 579,
        /**
         * 龙魂等级木
         */
        dragon_soul_lv_timber = 580,
        /**
         * 龙魂等级水
         */
        dragon_soul_lv_water = 581,
        /**
         * 龙魂等级火
         */
        dragon_soul_lv_fire = 582,
        /**
         * 龙魂等级土
         */
        dragon_soul_lv_soil = 583,
        /**
         * 龙魂注魂值金
         */
        dragon_soul_value_gold = 584,
        /**
         * 龙魂注魂值木
         */
        dragon_soul_value_timber = 585,
        /**
         * 龙魂注魂值水
         */
        dragon_soul_value_water = 586,
        /**
         * 龙魂注魂值火
         */
        dragon_soul_value_fire = 587,
        /**
         * 龙魂注魂值土
         */
        dragon_soul_value_soil = 588,
        /**
         * 跨服沙场积分
         */
        cross_battlefield_rank = 590,
        /**
         * 跨服匹配段位积分
         */
        cross_score = 591,
        /**
         * 跨服匹配荣誉值
         */
        cross_honor = 592,
        /**
         * 怪物抵抗怪物增加值概率
         */
        resist_hurt_unit_ratio = 593,
        /**
         * 切割暴击率
         */
        resist_hurt_cri_rate = 594,
        /**
         * 切割暴击伤害加成
         */
        resist_hurt_cri_dmg = 595,
        /**
         * 切割暴击计数
         */
        resist_hurt_cri_record = 596,
        /**
         * 龙威附加等级
         */
        dragon_ferocity_additional_lv = 597,
        /**
         * 切割暴击伤害额外加成
         */
        resist_hurt_cri_extra = 598,
        /**
         * 符文值
         */
        fu_wen_val = 599,
        /**
         * 对怪物的伤害增加值
         */
        hurt_unit_add_val = 600,
        /**
         * 兽神体验卡buff添加属性
         */
        shou_buff_val = 601,
        /**
         * 当前生命值
         */
        hp_cur1 = 998,
        /**
         * 最大生命值1
         */
        hp_max1 = 999,
        /**
         * 最大生命值
         */
        hp_max = 1000,
        /**
         * 当前生命值
         */
        hp_cur = 1001,
        /**
         * 最大魔法值
         */
        mp_max = 1002,
        /**
         * 当前魔法值
         */
        mp_cur = 1003,
        /**
         * 最小物攻
         */
        atk_zhan_min = 1004,
        /**
         * 最大物攻
         */
        atk_zhan_max = 1005,
        /**
         * 最小魔攻
         */
        atk_fa_min = 1006,
        /**
         * 最大魔攻
         */
        atk_fa_max = 1007,
        /**
         * 最小道攻
         */
        atk_dao_min = 1008,
        /**
         * 最大道攻
         */
        atk_dao_max = 1009,
        /**
         * 最小物防
         */
        def_zhan_min = 1010,
        /**
         * 最大物防
         */
        def_zhan_max = 1011,
        /**
         * 最小魔防
         */
        def_fa_min = 1012,
        /**
         * 最大魔防
         */
        def_fa_max = 1013,
        /**
         * 暴击率
         */
        crir = 1014,
        /**
         * 暴击伤害
         */
        criv = 1015,
        /**
         * 准确
         */
        hit = 1016,
        /**
         * 闪避
         */
        dod = 1017,
        /**
         * 武器幸运
         */
        luck = 1018,
        /**
         * 神圣攻击
         */
        holy_attack = 1019,
        /**
         * 神圣防御
         */
        holy_defense = 1020,
        /**
         * 物理减伤比例
         */
        dtr_zhan_r = 1021,
        /**
         * 魔法减伤比例
         */
        dtr_fa_r = 1022,
        /**
         * 隔位刺杀吸血(万分比)
         */
        suck_blood_for_cisha = 1023,
        /**
         * 火墙范围增加
         */
        fire_range_add = 1025,
        /**
         * 火墙持续时间增加
         */
        fire_time_add = 1026,
        /**
         * 火环范围增加
         */
        ring_range_add = 1027,
        /**
         * 火环距离增加
         */
        ring_dist_add = 1028,
        /**
         * 魔法盾反弹伤害
         */
        dmg_rebound_mofadun = 1029,
        /**
         * 刺杀第二格无视魔法盾
         */
        naive_for_cisha = 1030,
        /**
         * 野蛮冲撞增加格子
         */
        grid_add_for_yeman = 1031,
        /**
         * 群体治疗术加血值
         */
        add_hp_for_group_cure = 1034,
        /**
         * 抗拒火环之后攻击翻倍
         */
        dmg_rate_for_huohuan = 1035,
        /**
         * 强制破防
         */
        break_force = 1036,
        /**
         * 破防
         */
        break_val = 1037,
        /**
         * 破防抵抗
         */
        break_defense = 1038,
        /**
         * 对所有角色伤害增强
         */
        dmg_to_all_role = 1039,
        /**
         * 对所有角色伤害减免
         */
        dtr_from_all_rate = 1040,
        /**
         * 擒龙手下次攻击伤害加成
         */
        dmg_rate_for_qinlongshou = 1041,
        /**
         * 攻击值减少万分比
         */
        atk_reduce_dtr = 1042,
        /**
         * 抵抗攻击值减少万分比
         */
        atk_reduce_dtr_resistance = 1043,
        /**
         * 抵抗值减少万分比
         */
        def_reduce_dtr = 1044,
        /**
         * 抵抗抵抗值减少万分比
         */
        def_reduce_dtr_resistance = 1045,
        /**
         * 神圣攻击触发需要的攻击次数
         */
        holy_attack_make_times = 1046,
        /**
         * 神圣攻击触发时间控制
         */
        holy_attack_make_time = 1047,
        /**
         * 神兽伤害加成
         */
        shen_shou_add_dmg_rate = 1048,
        /**
         * 神兽攻击变成神圣攻击比例
         */
        shen_shou_atk_make_holy_rate = 1049,
        /**
         * 武器属性加成
         */
        weapon_add = 1050,
        /**
         * 衣服属性加成
         */
        clothing_add = 1051,
        /**
         * 饰品1(头盔)属性加成
         */
        trinket_1_add = 1052,
        /**
         * 饰品2(项链)属性加成
         */
        trinket_2_add = 1053,
        /**
         * 饰品3(左手镯)属性加成
         */
        trinket_3_add = 1054,
        /**
         * 饰品4(右手镯)属性加成
         */
        trinket_4_add = 1055,
        /**
         * 饰品5(左戒指)属性加成
         */
        trinket_5_add = 1056,
        /**
         * 饰品6(右戒指)属性加成
         */
        trinket_6_add = 1057,
        /**
         * 饰品7(腰带)属性加成
         */
        trinket_7_add = 1058,
        /**
         * 饰品8(鞋子)属性加成
         */
        trinket_8_add = 1059,
        /**
         * 神罚抵抗率
         */
        resist_ratiohurt_ratio = 1068,
        /**
         * 神罚抵抗率1
         */
        resist_ratiohurt_ratio1 = 1069,
        /**
         * 切割触发率
         */
        atk_ratiohurt_ratio = 1070,
        /**
         * 神罚伤害血量百分比
         */
        atk_ratiohurt_val = 1071,
        /**
         * 攻击速度
         */
        atk_speed_rate = 1072,
        /**
         * 装备爆率
         */
        baolv_ratio = 1073,
        /**
         * 麻痹概率
         */
        ma_bi_rate = 1074,
        /**
         * 战宠回血值
         */
        mars_recover_hp = 1075,
        /**
         * 切割触发附加率
         */
        atk_ratiohurt_addation_ratio = 1076,
        /**
         * 战宠麻痹值
         */
        mars_ma_bi_val = 1077,
        /**
         * 战宠麻痹抵抗值
         */
        mars_ma_bi_di_kang_val = 1078,
        /**
         * 战宠麻痹抵抗百分比
         */
        mars_ma_bi_di_kang_rate = 1079,
        /**
         * 麻痹抵抗百分比
         */
        ma_bi_di_kang_rate = 1080,
        /**
         * 暴击抵抗(百分比)
         */
        def_cri_rate = 1082,
        /**
         * 生命值恢复（铸灵）
         */
        hp_recover = 1100,
        /**
         * 书魂点
         */
        book_soul = 1101,
        /**
         * 时装值
         */
        fashion_val = 1102,
        /**
         * 铸灵值
         */
        zhuling = 1103,
        /**
         * 铸灵等级
         */
        zhuling_level = 1104,
        /**
         * 角色对怪物麻痹得概率
         */
        role_to_monster_ma_bi_rate = 1105,
        /**
         * 生命恢复
         */
        hp_restore = 1110,
        /**
         * 伤害加成
         */
        dmg_add_rate = 1111,
        /**
         * 伤害减免
         */
        dmg_del_rate = 1112,
        /**
         * 神罚抵抗值百分比
         */
        def_ratiohurt_val = 1113,
        /**
         * 攻击宝石值
         */
        gem_atk_chip = 1501,
        /**
         * 防御宝石值
         */
        gem_def_chip = 1502,
        /**
         * 声明宝石值
         */
        gem_hp_chip = 1503,
        /**
         * 神圣宝石值
         */
        gem_god_chip = 1504,
        /**
         * 暴击宝石值
         */
        gem_crit_chip = 1505,
        /**
         * 爆伤宝石值
         */
        gem_crit_hurt_chip = 1506,
        /**
         * 斩将夺旗是否持有旗子
         */
        script_hold_zhanqi = 1507,
        /**
         * 天降洪福持有箱子状态
         */
        script_tian_jiang_hong_fu_box = 1508,
        /**
         * 龙魂碎片
         */
        dragon_soul_debris = 1509,
        /**
         * 新战斗力
         */
        fighting_caplaity = 1510,
        /**
         * 神脉等级
         */
        god_pulse_lv = 1511,
        /**
         * 神元
         */
        god_pulse_val = 1512,
        /**
         * 狂暴伤害
         */
        kuang_bao_dmg = 1513,
        /**
         * 至尊属性_攻击(影响最小最大物理攻击)
         */
        excellent_attack_val = 1514,
        /**
         * 至尊攻击属性_最大生命
         */
        excellent_max_hp_val = 1515,
        /**
         * 初级转生修为
         */
        chu_ji_zhuan_sheng_xiu_wei = 2101,
        /**
         * 中级转生修为
         */
        zhong_ji_zhuan_sheng_xiu_wei = 2102,
        /**
         * 高级转生修为
         */
        gao_ji_zhuan_sheng_xiu_wei = 2103,
        /**
         * 超级转生修为
         */
        chao_ji_zhuan_sheng_xiu_wei = 2104,
        /**
         * 特级转生修为
         */
        te_ji_zhuan_sheng_xiu_wei = 2105,
        /**
         * 终级转生修为
         */
        ultimate_zhuan_sheng_xiu_wei = 2106,
        /**
         * 究级转生修为
         */
        jiu_ji_zhuan_sheng_xiu_wei = 2107,
        /**
         * 顶级转生修为
         */
        ding_ji_zhuan_sheng_xiu_wei = 2108,
        /**
         * 神级转生修为
         */
        shen_ji_zhuan_sheng_xiu_wei = 2109,
        /**
         * 圣级转生修为
         */
        sheng_ji_zhuan_sheng_xiu_wei = 2110,
        /**
         * 皇级转生修为
         */
        huang_ji_zhuan_sheng_xiu_wei = 2111,
        /**
         * 帝级转生修为
         */
        di_ji_zhuan_sheng_xiu_wei = 2112,
        /**
         * 宇级转生修为
         */
        yu_ji_zhuan_sheng_xiu_wei = 2113,
        /**
         * 宙级转生修为
         */
        zhou_ji_zhuan_sheng_xiu_wei = 2114,
        /**
         * 湮级转生修为
         */
        min_ji_zhuan_sheng_xiu_wei = 2115,
        /**
         * 灭级转生修为
         */
        mie_ji_zhuan_sheng_xiu_wei = 2116,
        /**
         * 切割伤害比例
         */
        atk_ratiohurt_dmg_rate = 2117,
        /**
         * 减少移动速度
         */
        subtract_move_speed = 2118,
        /**
         * 减速
         */
        atk_reduce_speed = 2119,
        /**
         * 减速抗性
         */
        resist_reduce_speed = 2120,
        /**
         * 减速免疫
         */
        rate_reduce_speed = 2121,
        /**
         * 减速对抗属性
         */
        reduce_speed_contrast = 2122,
        /**
         * 开天剑收益增加
         */
        kai_tian_jian = 2201,
        /**
         * 紫金球收益增加
         */
        zi_jin_qiu = 2202,
        /**
         * 轩辕魄收益增加
         */
        xuan_yuan_po = 2203,
        /**
         * 昆仑镜收益增加
         */
        kun_lun_jing = 2204,
        /**
         * 绿如意收益增加
         */
        lv_ru_yi = 2205,
        /**
         * 龙之力收益增加
         */
        long_zhi_li = 2206,
        /**
         * 战魂经验
         */
        war_soul_exp = 2207,
        /**
         * 开天剑经验
         */
        kai_tian_jian_exp = 2208,
        /**
         * 紫金球经验
         */
        zi_jin_qiu_exp = 2209,
        /**
         * 轩辕魄经验
         */
        xuan_yuan_po_exp = 2210,
        /**
         * 昆仑镜经验
         */
        kun_lun_jing_exp = 2211,
        /**
         * 绿如意经验
         */
        lv_ru_yi_exp = 2212,
        /**
         * 龙之力经验
         */
        long_zhi_li_exp = 2213,
        /**
         * 麻痹附加时间
         */
        ma_bi_subjoin_time = 2214,
        /**
         * 新觉醒
         */
        new_awaken = 2215,
        /**
         * 斩杀值（血量/最大血量 < (斩杀值-斩杀对抗值)/10000）
         */
        beheaded_val = 2301,
        /**
         * 斩杀抵抗值
         */
        resist_beheaded_val = 2302,
        /**
         * 自动修补护盾值
         */
        auto_repair_shield_value = 2303,
        /**
         * 抵挡伤害值
         */
        withstand_damage_value = 2304,
        /**
         * 护盾精粹(护盾消耗值)
         */
        consume_shield_value = 2305,
        /**
         * 宝石碎片
         */
        gem_fragment = 10023,
        /**
         * 灭杀伤害
         */
        strong_attack_dmg = 10024,
        /**
         * 灭杀几率
         */
        strong_attack_rate = 10025,
        /**
         * 抵抗强攻概率
         */
        resist_strong_attack_rate = 10026,
        /**
         * 抵抗强攻概率1
         */
        resist_strong_attack_rate1 = 10027,
        /**
         * 强攻附加概率
         */
        strong_attack_addation_rate = 10028,
        /**
         * 神格等级
         */
        godhood_lv = 10029,
        /**
         * 炼神等级
         */
        smlet_god_lv = 10030,
        /**
         * 宠物添加狂暴附加时间
         */
        pet_add_rage_time = 10031,
        /**
         * 战宠攻击比
         */
        mars_attack_rate = 10032,
        /**
         * 刺杀对人的攻击系数
         */
        ci_sha_atk_rate_for_role = 10033,
        /**
         * 刺杀对人的攻击附加威力
         */
        ci_sha_atk_val_for_role = 10034,
        /**
         * 刺杀对怪物的攻击系数
         */
        ci_sha_atk_rate_for_unit = 10035,
        /**
         * 刺杀对怪物的攻击附加威力
         */
        ci_sha_atk_val_for_unit = 10036,
        /**
         * 半月对人的攻击系数
         */
        ban_yue_atk_rate_for_role = 10037,
        /**
         * 半月对人的攻击附加威力
         */
        ban_yue_atk_val_for_role = 10038,
        /**
         * 半月对怪物的攻击系数
         */
        ban_yue_atk_rate_for_unit = 10039,
        /**
         * 半月对怪物的攻击附加威力
         */
        ban_yue_atk_val_for_unit = 10040,
        /**
         * 烈火对人的攻击系数
         */
        lie_huo_atk_rate_for_role = 10041,
        /**
         * 烈火对人的攻击附加威力
         */
        lie_huo_atk_val_for_role = 10042,
        /**
         * 烈火对怪物的攻击系数
         */
        lie_huo_atk_rate_for_unit = 10043,
        /**
         * 烈火对怪物的攻击附加威力
         */
        lie_huo_atk_val_for_unit = 10044,
        /**
         * 擒龙手对人的攻击系数
         */
        qin_long_shou_atk_rate_for_role = 10045,
        /**
         * 擒龙手对人的攻击附加威力
         */
        qin_long_shou_atk_val_for_role = 10046,
        /**
         * 擒龙手对怪物的攻击系数
         */
        qin_long_shou_atk_rate_for_unit = 10047,
        /**
         * 擒龙手对怪物的攻击附加威力
         */
        qin_long_shou_atk_val_for_unit = 10048,
        /**
         * 逐日对人的攻击系数
         */
        zhu_ri_atk_rate_for_role = 10049,
        /**
         * 逐日对人的攻击附加威力
         */
        zhu_ri_atk_val_for_role = 10050,
        /**
         * 逐日对怪物的攻击系数
         */
        zhu_ri_atk_rate_for_unit = 10051,
        /**
         * 逐日对怪物的攻击附加威力
         */
        zhu_ri_atk_val_for_unit = 10052,
        /**
         * 施毒对人的攻击系数
         */
        shi_du_atk_rate_for_role = 10053,
        /**
         * 施毒对人的攻击附加威力
         */
        shi_du_atk_val_for_role = 10054,
        /**
         * 施毒对怪物的攻击系数
         */
        shi_du_atk_rate_for_unit = 10055,
        /**
         * 施毒对怪物的攻击附加威力
         */
        shi_du_atk_val_for_unit = 10056,
        /**
         * 无视护身比例
         */
        wu_shi_hu_shen = 10057,
        /**
         * 麻痹抵抗概率
         */
        ma_bi_di_kang = 10058,
        /**
         * 护身比例
         */
        hu_shen_bi_li = 10059,
        /**
         * 护身耗蓝
         */
        hu_shen_hao_lan = 10060,
        /**
         * 至尊属性_防御(影响最小最大物理防御)
         */
        victim_add_def_percentage = 10061,
        /**
         * 最大生命值_单位组_增幅
         */
        unit_hp_max = 101000,
        /**
         * 当前生命值_单位组_增幅
         */
        unit_hp_cur = 101001,
        /**
         * 最大魔法值_单位组_增幅
         */
        unit_mp_max = 101002,
        /**
         * 当前魔法值_单位组_增幅
         */
        unit_mp_cur = 101003,
        /**
         * 最小物攻_单位组_增幅
         */
        unit_atk_zhan_min = 101004,
        /**
         * 最大物攻_单位组_增幅
         */
        unit_atk_zhan_max = 101005,
        /**
         * 最小魔攻_单位组_增幅
         */
        unit_atk_fa_min = 101006,
        /**
         * 最大魔攻_单位组_增幅
         */
        unit_atk_fa_max = 101007,
        /**
         * 最小道攻_单位组_增幅
         */
        unit_atk_dao_min = 101008,
        /**
         * 最大道攻_单位组_增幅
         */
        unit_atk_dao_max = 101009,
        /**
         * 最小物防_单位组_增幅
         */
        unit_def_zhan_min = 101010,
        /**
         * 最大物防_单位组_增幅
         */
        unit_def_zhan_max = 101011,
        /**
         * 最小魔防_单位组_增幅
         */
        unit_def_fa_min = 101012,
        /**
         * 最小魔防_单位组_增幅
         */
        unit_def_fa_max = 101013,
        /**
         * 最大生命值_装备组_增幅
         */
        equip_hp_max = 111000,
        /**
         * 当前生命值_装备组_增幅
         */
        equip_hp_cur = 111001,
        /**
         * 最大魔法值_装备组_增幅
         */
        equip_mp_max = 111002,
        /**
         * 当前魔法值_装备组_增幅
         */
        equip_mp_cur = 111003,
        /**
         * 最小物攻_装备组_增幅
         */
        equip_atk_zhan_min = 111004,
        /**
         * 最大物攻_装备组_增幅
         */
        equip_atk_zhan_max = 111005,
        /**
         * 最小魔攻_装备组_增幅
         */
        equip_atk_fa_min = 111006,
        /**
         * 最大魔攻_装备组_增幅
         */
        equip_atk_fa_max = 111007,
        /**
         * 最小道攻_装备组_增幅
         */
        equip_atk_dao_min = 111008,
        /**
         * 最大道攻_装备组_增幅
         */
        equip_atk_dao_max = 111009,
        /**
         * 最小物防_装备组_增幅
         */
        equip_def_zhan_min = 111010,
        /**
         * 最大物防_装备组_增幅
         */
        equip_def_zhan_max = 111011,
        /**
         * 最小魔防_装备组_增幅
         */
        equip_def_fa_min = 111012,
        /**
         * 最小魔防_装备组_增幅
         */
        equip_def_fa_max = 111013,
        /**
         * 最大生命值_宝石组_增幅
         */
        gem_hp_max = 121000,
        /**
         * 当前生命值_宝石组_增幅
         */
        gem_hp_cur = 121001,
        /**
         * 最大魔法值_宝石组_增幅
         */
        gem_mp_max = 121002,
        /**
         * 当前魔法值_宝石组_增幅
         */
        gem_mp_cur = 121003,
        /**
         * 最小物攻_宝石组_增幅
         */
        gem_atk_zhan_min = 121004,
        /**
         * 最大物攻_宝石组_增幅
         */
        gem_atk_zhan_max = 121005,
        /**
         * 最小魔攻_宝石组_增幅
         */
        gem_atk_fa_min = 121006,
        /**
         * 最大魔攻_宝石组_增幅
         */
        gem_atk_fa_max = 121007,
        /**
         * 最小道攻_宝石组_增幅
         */
        gem_atk_dao_min = 121008,
        /**
         * 最大道攻_宝石组_增幅
         */
        gem_atk_dao_max = 121009,
        /**
         * 最小物防_宝石组_增幅
         */
        gem_def_zhan_min = 121010,
        /**
         * 最大物防_宝石组_增幅
         */
        gem_def_zhan_max = 121011,
        /**
         * 最小魔防_宝石组_增幅
         */
        gem_def_fa_min = 121012,
        /**
         * 最小魔防_宝石组_增幅
         */
        gem_def_fa_max = 121013,
        /**
         * 小神圣攻击_宝石组_增幅
         */
        gem_atk_god_min = 121014,
        /**
         * 最小魔防_宝石组_增幅
         */
        gem_atk_god_max = 121015,
        /**
         * 宝石组_暴击率
         */
        gem_crir = 121016,
        /**
         * 宝石组_暴击值
         */
        gem_criv = 121017,
        /**
         * 最大生命值_全部组_增幅
         */
        all_hp_max = 201000,
        /**
         * 当前生命值_全部组_增幅
         */
        all_hp_cur = 201001,
        /**
         * 最大魔法值_全部组_增幅
         */
        all_mp_max = 201002,
        /**
         * 当前魔法值_全部组_增幅
         */
        all_mp_cur = 201003,
        /**
         * 最小物攻_全部组_增幅
         */
        all_atk_zhan_min = 201004,
        /**
         * 最大物攻_全部组_增幅
         */
        all_atk_zhan_max = 201005,
        /**
         * 最小魔攻_全部组_增幅
         */
        all_atk_fa_min = 201006,
        /**
         * 最大魔攻_全部组_增幅
         */
        all_atk_fa_max = 201007,
        /**
         * 最小道攻_全部组_增幅
         */
        all_atk_dao_min = 201008,
        /**
         * 最大道攻_全部组_增幅
         */
        all_atk_dao_max = 201009,
        /**
         * 最小物防_全部组_增幅
         */
        all_def_zhan_min = 201010,
        /**
         * 最大物防_全部组_增幅
         */
        all_def_zhan_max = 201011,
        /**
         * 最小魔防_全部组_增幅
         */
        all_def_fa_min = 201012,
        /**
         * 最小魔防_全部组_增幅
         */
        all_def_fa_max = 201013,
        /**
         * 最大生命值_副装备组_增幅
         */
        assist_equip_hp_max = 271000,
        /**
         * 当前生命值_副装备组_增幅
         */
        assist_equip_hp_cur = 271001,
        /**
         * 最大魔法值_副装备组_增幅
         */
        assist_equip_mp_max = 271002,
        /**
         * 当前魔法值_副装备组_增幅
         */
        assist_equip_mp_cur = 271003,
        /**
         * 最小物攻_副装备组_增幅
         */
        assist_equip_atk_zhan_min = 271004,
        /**
         * 最大物攻_副装备组_增幅
         */
        assist_equip_atk_zhan_max = 271005,
        /**
         * 最小魔攻_副装备组_增幅
         */
        assist_equip_atk_fa_min = 271006,
        /**
         * 最大魔攻_副装备组_增幅
         */
        assist_equip_atk_fa_max = 271007,
        /**
         * 最小道攻_副装备组_增幅
         */
        assist_equip_atk_dao_min = 271008,
        /**
         * 最大道攻_副装备组_增幅
         */
        assist_equip_atk_dao_max = 271009,
        /**
         * 最小物防_副装备组_增幅
         */
        assist_equip_def_zhan_min = 271010,
        /**
         * 最大物防_副装备组_增幅
         */
        assist_equip_def_zhan_max = 271011,
        /**
         * 最小魔防_副装备组_增幅
         */
        assist_equip_def_fa_min = 271012,
        /**
         * 最大魔防_副装备组_增幅
         */
        assist_equip_def_fa_max = 271013,
        /**
         * 双倍伤害概率
         */
        double_hurt_rate = 280001,
        /**
         * 三倍伤害概率
         */
        third_hurt_rate = 280002,
        /**
         * 伤害减半概率
         */
        mid_hurt_rate = 280003,
        /**
         * 无视伤害概率
         */
        ignore_hurt_rate = 280004,
        /**
         * 当前神甲值
         */
        hero_shen_jia_curr = 300001,
        /**
         * 最大神甲值
         */
        hero_shen_jia_max = 300002,
        /**
         * 战斗状态下神甲恢复速度
         */
        hero_shen_jia_add_val = 300003,
        /**
         * 战斗状态下神甲恢复速度
         */
        hero_shen_jia_add2_val = 300004,
        /**
         * 每秒增加英雄的血量值
         */
        hero_hp_add_val = 300005,
        /**
         * 每秒增加英雄的魔法值
         */
        hero_mp_add_val = 300006,
        /**
         * 野蛮冲锋
         */
        ye_man_chong_feng = 300007,
        /**
         * 封魔值
         */
        feng_mo_val = 300008,
        /**
         * 辟邪盾当前值
         */
        bi_xie_dun_cur_val = 300009,
        /**
         * 辟邪盾最大值
         */
        bi_xie_dun_max_val = 300010,
        /**
         * 死亡掉落物品保护时间(秒)
         */
        dead_drop_out_item_protect_time = 300011,
        /**
         * 移除一条减益效果
         */
        remove_one_dbuff_rate = 300012,
        /**
         * 移除所有减益效果
         */
        remove_all_dbuff_rate = 300013,
        /**
         * 移除所有减益效果免疫减益效果
         */
        remove_all_dbuff_and_immnue_dbuff_rate = 300014,
        /**
         * 免疫减益效果
         */
        immnue_dbuff_time = 300015,
        /**
         * 受击双倍防御
         */
        victim_double_def_rate = 300016,
        /**
         * 受击三倍防御
         */
        victim_triple_def_rate = 300017,
        /**
         * 受击无敌
         */
        victim_wudi_rate = 300018,
        /**
         * 受击回复血量万分比
         */
        victim_reply_hp_percentage = 300019,
        /**
         * 必然暴击
         */
        is_cri = 300020,
        /**
         * 添加诅咒概率
         */
        add_curse_rate = 300021,
        /**
         * 添加高级诅咒概率
         */
        add_advanced_curse_rate = 300022,
        /**
         * 添加高级诅咒概率
         */
        add_super_curse_rate = 300023,
        /**
         * 受击伤害高级提升
         */
        victim_dmg_advanced_add_percentage = 300024,
        /**
         * 受击伤害超级提升
         */
        victim_dmg_super_add_percentage = 300025,
        /**
         * 受击攻击减少
         */
        victim_attack_reduce_percentage = 300026,
        /**
         * 受击伤害提升
         */
        victim_dmg_add_percentage = 300027,
        /**
         * 灭杀伤害翻倍概率
         */
        strong_attack_dmg_double_rate = 300028,
        /**
         * 暴击伤害双倍
         */
        cri_dmg_double_rate = 300029,
        /**
         * 暴击伤害三倍
         */
        cri_dmg_triple_rate = 300030,
        /**
         * 暴击伤害四倍
         */
        cri_dmg_quadruple_rate = 300031,
        /**
         * 暴击率增幅
         */
        cri_rate_add = 300032,
        /**
         * 暴击率高级增幅
         */
        cri_rate_advanced_add = 300033,
        /**
         * 拾取元宝数量
         */
        pick_yuanbao_value = 300034,
        /**
         * 累计消耗的boss积分
         */
        consume_boss_score = 300035,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumAttackType {
        /**
         * 未知
         */
        unknown = 0,
        /**
         * 物理攻击
         */
        zhan = 1,
        /**
         * 法术攻击
         */
        fa = 2,
        /**
         * 道术攻击
         */
        dao = 3,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 开服活动—竞技奖励类型
 */
declare module protocol {
    const enum EnumAthleticsType {
        /**
         *
         */
        none = 0,
        /**
         * 角色等级竞技
         */
        level = 1,
        /**
         * 披风等级竞技
         */
        cloak = 2,
        /**
         * 龙珠等级竞技
         */
        longzhu = 3,
        /**
         * 如意等级竞技
         */
        ruyi = 4,
        /**
         * 英雄等级竞技
         */
        hero = 5,
        /**
         * 翅膀
         */
        wing = 6,
        /**
         * 官职竞技
         */
        post = 7,
        /**
         * 英雄披风
         */
        hero_cloak = 8,
        /**
         * 神格
         */
        role_shenge = 9,
        /**
         * 神脉
         */
        role_shenmai = 10,
        /**
         * 宝石
         */
        sport_gem = 11,
        /**
         * 龙魂竞技
         */
        dragon_soul = 12,
        /**
         * 觉醒等级竞技
         */
        jue_xing = 17,
        /**
         * 装备等级竞技
         */
        equip = 18,
        /**
         * 转生等级竞技
         */
        role_relevel = 19,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 答题类技能ID
 */
declare module protocol {
    const enum EnumAnswerSkillID {
        /**
         *
         */
        none = 0,
        /**
         * 麻痹
         */
        mabi = 1,
        /**
         * 击飞
         */
        tifei = 2,
        /**
         * 无敌
         */
        wudi = 3,
        /**
         * 偷看答题
         */
        toukandaan = 4,
    }
}
/**
 * File is automatically generated, Please do not modify
 *
 */
declare module protocol {
    const enum EnumActivityTimeShow {
        /**
         * 不显示
         */
        none = 0,
        /**
         * 倒计时
         */
        count_down = 1,
        /**
         * 日期
         */
        accurate_date = 2,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 活动大分类，想区分日常，商业以及其他活动类型
 */
declare module protocol {
    const enum EnumActivityCategory {
        /**
         * 日常活动
         */
        daily = 1,
        /**
         * 商业活动-开服
         */
        commercial_open = 2,
        /**
         * 商业活动-合服
         */
        commercial_merge = 3,
        /**
         * 商业活动-跨服
         */
        commercial_cross = 4,
        /**
         * 节日活动
         */
        holiday = 5,
        /**
         * 公会活动
         */
        guild = 6,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 激活状态，可多个模块通用
 */
declare module protocol {
    const enum EnumActiveState {
        /**
         * 未解锁
         */
        locked = -1,
        /**
         * 未激活
         */
        inactive = 0,
        /**
         * 可激活
         */
        can_active = 1,
        /**
         * 已激活
         */
        actived = 2,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入遗忘秘境
 */
declare module protocol {
    class yi_wang_mi_jing_enter_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
/**
 * File is automatically generated, Please do not modify
 * 进入遗忘秘境返回
 */
declare module protocol {
    class yi_wang_mi_jing_enter_res extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        state: number;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 遗忘秘境数据同步
 */
declare module protocol {
    class yi_wang_mi_jing_syn extends Protocol {
        static readonly fields: (string | number)[][];
        constructor();
        floor: number;
        npcId: number;
        npcPosX: number;
        npcPosY: number;
        bossState: number;
        count: number;
        itemCount: number;
        itemId: number;
        guildRank: Array<info_yi_wang_mi_jing_rank>;
        guildRankRef: info_yi_wang_mi_jing_rank;
        monsterCount: number;
        fiveFloorBoss: number;
        fiveFloorWave: number;
        monsterNum: number;
        floor_changed: boolean;
        npcId_changed: boolean;
        npcPosX_changed: boolean;
        npcPosY_changed: boolean;
        bossState_changed: boolean;
        count_changed: boolean;
        itemCount_changed: boolean;
        itemId_changed: boolean;
        guildRank_changed: boolean;
        guildRankRef_changed: boolean;
        monsterCount_changed: boolean;
        fiveFloorBoss_changed: boolean;
        fiveFloorWave_changed: boolean;
        monsterNum_changed: boolean;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 怪物攻城活动枚举
 */
declare module protocol {
    const enum EnumActiveGwgc {
        /**
         * 活动结束
         */
        close = 0,
        /**
         * 第一波
         */
        first = 1,
        /**
         * 第二波
         */
        second = 2,
        /**
         * 第三波
         */
        third = 3,
        /**
         * 怪物全部杀死
         */
        all_dead = 4,
    }
}
/**
 * File is automatically generated, Please do not modify
 * 战宠操作状态
 */
declare module protocol {
    const enum EmumMarsOperState {
        /**
         * 出战
         */
        battle = 0,
        /**
         * 休息
         */
        rest = 1,
    }
}
/**
 * File is automatically generated, Please do not modify
 * //boss状态
 */
declare module protocol {
    const enum EenumBossState {
        /**
         * 等待创建
         */
        wait_create = 1,
        /**
         * 创建
         */
        create = 2,
        /**
         * 死亡
         */
        die = 3,
    }
}
/**
 * File is automatically generated, Please do not modify
 * Protocols
 */
declare module protocol {
    class Protocols {
        static ID_DICT: Object;
        static readonly info_role_simple: any;
        static readonly info_role_base: any;
        static readonly info_role_attr: any;
        static readonly info_sprite: any;
        static readonly info_sprite_role: any;
        static readonly info_sprite_base: any;
        static readonly info_sprite_unit: any;
        static readonly info_buff: any;
        static readonly info_sprite_buff: any;
        static readonly info_sprite_drop: any;
        static readonly info_dmg: any;
        static readonly info_item: any;
        static readonly info_profit: any;
        static readonly info_skill: any;
        static readonly info_role_relation: any;
        static readonly info_mars: any;
        static readonly info_smelter: any;
        static readonly info_mail: any;
        static readonly info_mail_award_item: any;
        static readonly info_condition: any;
        static readonly info_team: any;
        static readonly info_team_nearly_player: any;
        static readonly info_team_member: any;
        static readonly info_team_ready: any;
        static readonly info_equip_strengthen: any;
        static readonly info_role_rank: any;
        static readonly info_mall_buy_limit: any;
        static readonly info_world_boss: any;
        static readonly info_private_boss: any;
        static readonly info_elite_boss: any;
        static readonly info_private_clone: any;
        static readonly info_mine_radio: any;
        static readonly info_award_hall: any;
        static readonly info_guild_list: any;
        static readonly info_guild_member: any;
        static readonly info_guild_audit: any;
        static readonly info_guild_log: any;
        static readonly info_guild_role: any;
        static readonly info_guild_skill: any;
        static readonly info_guild_hegemony: any;
        static readonly info_lianhun: any;
        static readonly info_resource_back: any;
        static readonly info_wing_skill: any;
        static readonly info_dark_temple_boss: any;
        static readonly info_suit: any;
        static readonly info_daily_activity: any;
        static readonly info_title: any;
        static readonly info_shzc_rank: any;
        static readonly info_stall_view: any;
        static readonly info_stall_record: any;
        static readonly info_ylc_rank: any;
        static readonly info_boss_drop_item: any;
        static readonly info_commercial_activity: any;
        static readonly info_role_show: any;
        static readonly info_athletics: any;
        static readonly info_card: any;
        static readonly info_talent: any;
        static readonly info_brand_open: any;
        static readonly info_brand_record: any;
        static readonly info_grow_gift: any;
        static readonly info_teamectype_room: any;
        static readonly info_teamectype_roomdata: any;
        static readonly info_shitu_nearly_player: any;
        static readonly info_shitu_award: any;
        static readonly info_role_shitu: any;
        static readonly info_zhanjie_award: any;
        static readonly info_dice: any;
        static readonly info_team_map_coord: any;
        static readonly info_guildboss_award: any;
        static readonly info_37wan_vip_award: any;
        static readonly info_brand_slot: any;
        static readonly info_tong_tian_tower_radio: any;
        static readonly info_limit_buy: any;
        static readonly info_zhuanpan_rank: any;
        static readonly info_fashion_show: any;
        static readonly info_fashion: any;
        static readonly info_fashion_dress: any;
        static readonly info_chat_limit: any;
        static readonly shenlu_exp_xiuwei_shenlu_info: any;
        static readonly info_auction: any;
        static readonly info_auction_type_count: any;
        static readonly info_active_award_week: any;
        static readonly info_limitactivity: any;
        static readonly info_chat_secretTab: any;
        static readonly info_relation_revengeLog: any;
        static readonly info_guild_red: any;
        static readonly info_red: any;
        static readonly info_gem: any;
        static readonly info_offline_drill_item: any;
        static readonly info_guild_boss: any;
        static readonly info_shame_stain: any;
        static readonly info_guild_mall_limit: any;
        static readonly info_materials: any;
        static readonly info_battlefield: any;
        static readonly info_yi_wang_mi_jing_rank: any;
        static readonly info_answer: any;
        static readonly info_answer_rank: any;
        static readonly info_xuan_yun_zhi_dian: any;
        static readonly info_team_clone: any;
        static readonly info_team_clone_ready: any;
        static readonly info_manor_battle: any;
        static readonly info_skill_enhance: any;
        static readonly info_save_canfig: any;
        static readonly info_wu_shuang_battle_log: any;
        static readonly info_wu_shuang_scene_rank: any;
        static readonly info_sha_cheng_join: any;
        static readonly info_sha_cheng_apply: any;
        static readonly info_toStrong: any;
        static readonly info_award_state: any;
        static readonly info_gem_suit_info: any;
        static readonly info_dai_lian: any;
        static readonly info_national_red: any;
        static readonly info_rank_national_red: any;
        static readonly info_mars_rebate: any;
        static readonly info_exp_refine: any;
        static readonly info_guild_athletics: any;
        static readonly info_supremacy_treasure: any;
        static readonly info_recharge_rank: any;
        static readonly info_relic: any;
        static readonly info_mystical_story: any;
        static readonly info_merger_consume_rank: any;
        static readonly info_flood_shortage_boss: any;
        static readonly info_creatguild_activity: any;
        static readonly info_sha_cheng_member: any;
        static readonly info_guild_forbid_area: any;
        static readonly info_contnuous_recharge: any;
        static readonly info_accumula_recharge: any;
        static readonly info_commercial_all_boss: any;
        static readonly info_hero_base: any;
        static readonly info_sprite_hero: any;
        static readonly info_hero_god_weapon: any;
        static readonly info_toStrong_atk: any;
        static readonly info_relation_message: any;
        static readonly info_role_warrior_soul: any;
        static readonly info_gem_slot: any;
        static readonly info_gem_slot_open: any;
        static readonly info_preorder: any;
        static readonly info_makeexp: any;
        static readonly info_mall_refresh: any;
        static readonly info_transcript_rank: any;
        static readonly info_activity_daily_refresh: any;
        static readonly info_gcz_guild_rank: any;
        static readonly info_role_kuang: any;
        static readonly info_award_item: any;
        static readonly info_kill_boss: any;
        static readonly info_kill_boss_role: any;
        static readonly info_equip_award_role: any;
        static readonly info_os_award_record: any;
        static readonly info_kill_boss_rank: any;
        static readonly info_mail_click_time_syn: any;
        static readonly info_bottle: any;
        static readonly info_turn_award: any;
        static readonly info_full_discount: any;
        static readonly info_passed_fuben: any;
        static readonly notify_use_buff_effect: any;
        static readonly info_full_discount_limit: any;
        static readonly info_guild_boss2: any;
        static readonly info_guild_boss_rank: any;
        static readonly info_honor_mall: any;
        static readonly wlsz_alliance_apply_info: any;
        static readonly wlsz_alliance_info: any;
        static readonly info_moba_match: any;
        static readonly info_moba_role_result: any;
        static readonly info_cross_map_coord_role: any;
        static readonly info_surrender: any;
        static readonly info_match_team: any;
        static readonly info_challenge_world_boss: any;
        static readonly info_drop_log: any;
        static readonly info_boss_refresh: any;
        static readonly info_artifact_active: any;
        static readonly info_suit_collect: any;
        static readonly info_equipaward_record: any;
        static readonly info_key_value_pair: any;
        static readonly info_foundation: any;
        static readonly info_equip_refine: any;
        static readonly info_plot: any;
        static readonly info_drop_for_personal: any;
        static readonly seals_info: any;
        static readonly shen_wen_info: any;
        static readonly info_condumption_return: any;
        static readonly sync_msg_state: any;
        static readonly info_auction_mission: any;
        static readonly info_boss_state: any;
        static readonly info_challenge_boss: any;
        static readonly info_turntable_item: any;
        static readonly show_skill_fashion: any;
        static readonly info_turntable_mall_item: any;
        static readonly sync_role_state: any;
        static readonly role_state_info: any;
        static readonly info_condition_list: any;
        static readonly info_black_mall: any;
        static readonly info_monster_base: any;
        static readonly info_invest_gift: any;
        static readonly info_name_count: any;
        static readonly info_kuang_maps: any;
        static readonly info_strongest_award: any;
        static readonly info_record_equip: any;
        static readonly info_guild_fack_boss: any;
        static readonly info_warimprint: any;
        static readonly info_qiege: any;
        static readonly info_shenwu: any;
        static readonly info_hunzhuang: any;
        static readonly info_tejie: any;
        static readonly info_jing_yan_load: any;
        static readonly info_ring_gift: any;
        static readonly info_map_enter_active_cd: any;
        static readonly info_feast_boss: any;
        static readonly info_auction_purchase: any;
        static readonly info_SXMB: any;
        static readonly info_qi_fu: any;
        static readonly info_artifact: any;
        static readonly info_limit_minssion_award_flag: any;
        static readonly cross_role_logout_req: any;
        static readonly cross_role_logout_res: any;
        static readonly cross_state_change_syn: any;
        static readonly cross_server_result_res: any;
        static readonly crossserver_openstate_syn: any;
        static readonly syncross_openDay_req: any;
        static readonly syncross_openDay_res: any;
        static readonly login_req: any;
        static readonly login_res: any;
        static readonly heart_req: any;
        static readonly heart_res: any;
        static readonly close_reason: any;
        static readonly reconnect_req: any;
        static readonly reconnect_res: any;
        static readonly close_req: any;
        static readonly role_list_syn: any;
        static readonly role_create_req: any;
        static readonly role_create_res: any;
        static readonly role_select_req: any;
        static readonly role_select_res: any;
        static readonly role_base_syn: any;
        static readonly role_attr_syn: any;
        static readonly role_init_start_syn: any;
        static readonly role_init_end_syn: any;
        static readonly role_atk_req: any;
        static readonly role_atk_res: any;
        static readonly role_atk_syn: any;
        static readonly role_dmg_syn: any;
        static readonly role_pk_mode_req: any;
        static readonly role_pk_mode_res: any;
        static readonly role_pk_mode_syn: any;
        static readonly role_save_config_req: any;
        static readonly role_save_config_res: any;
        static readonly role_follower_syn: any;
        static readonly role_dead_syn: any;
        static readonly role_relive_req: any;
        static readonly role_relive_res: any;
        static readonly role_click_sprite_req: any;
        static readonly role_click_sprite_res: any;
        static readonly role_buff_update_syn: any;
        static readonly role_buff_remove_syn: any;
        static readonly role_show_info_req: any;
        static readonly role_show_info_res: any;
        static readonly role_rename_req: any;
        static readonly role_rename_res: any;
        static readonly role_back_select_req: any;
        static readonly role_back_select_res: any;
        static readonly role_save_config_syn: any;
        static readonly role_reconnect_token_syn: any;
        static readonly role_delete_req: any;
        static readonly role_delete_res: any;
        static readonly role_reconnect_success_syn: any;
        static readonly role_change_sex_req: any;
        static readonly role_change_sex_res: any;
        static readonly role_get_award_res: any;
        static readonly role_sync_already_acquisition_award: any;
        static readonly role_sync_monster_wave: any;
        static readonly role_notify_send_award: any;
        static readonly role_daily_data_syn: any;
        static readonly role_change_avatar_req: any;
        static readonly role_change_avatar_res: any;
        static readonly role_sync_box_count: any;
        static readonly role_syn_award_info: any;
        static readonly role_recover_hp_req: any;
        static readonly role_recover_hp_res: any;
        static readonly role_post_guidance_step_req: any;
        static readonly role_enter_sync_guidance_step: any;
        static readonly role_shou_wei_meng_zhong_award: any;
        static readonly role_collect_res: any;
        static readonly role_quick_buy_upgrade_req: any;
        static readonly role_quick_buy_upgrade_res: any;
        static readonly role_defeat_info_syn: any;
        static readonly role_once_data_syn: any;
        static readonly map_sprite_enter_syn: any;
        static readonly map_sprite_leave_syn: any;
        static readonly map_sprite_info_syn: any;
        static readonly map_sprite_attr_syn: any;
        static readonly map_change_syn: any;
        static readonly map_move_req: any;
        static readonly map_move_res: any;
        static readonly map_move_syn: any;
        static readonly map_rotation_req: any;
        static readonly map_rotation_res: any;
        static readonly map_rotation_syn: any;
        static readonly map_use_transfer_req: any;
        static readonly map_use_transfer_res: any;
        static readonly map_npc_transfer_req: any;
        static readonly map_npc_transfer_res: any;
        static readonly map_pick_up_req: any;
        static readonly map_pick_up_res: any;
        static readonly map_enemy_transfer_req: any;
        static readonly map_enemy_transfer_res: any;
        static readonly map_find_sprite_req: any;
        static readonly map_find_sprite_res: any;
        static readonly map_sprite_talk_syn: any;
        static readonly map_area_syn: any;
        static readonly map_sprite_time_syn: any;
        static readonly map_stone_transfer_req: any;
        static readonly map_stone_transfer_res: any;
        static readonly map_drop_big_syn: any;
        static readonly map_leave_clone_req: any;
        static readonly map_leave_clone_res: any;
        static readonly map_transcript_time: any;
        static readonly map_transcript_kill_manster_count: any;
        static readonly map_world_attr_info: any;
        static readonly map_sync_world_state: any;
        static readonly map_sync_rank_info: any;
        static readonly map_sync_camp_integral: any;
        static readonly map_role_enter_syn: any;
        static readonly map_role_leave_syn: any;
        static readonly map_role_area_syn: any;
        static readonly map_show_area_transfres: any;
        static readonly map_role_enter_res: any;
        static readonly map_transcript_unit_num: any;
        static readonly map_drop_for_personal_syn: any;
        static readonly map_transcript_manster_all_count: any;
        static readonly map_enter_active_cd_syn: any;
        static readonly map_challenge_boss_enter_yet_syn: any;
        static readonly global_data_syn: any;
        static readonly click_start_syn: any;
        static readonly click_stop_syn: any;
        static readonly click_success_syn: any;
        static readonly mission_load_syn: any;
        static readonly mission_change_syn: any;
        static readonly mission_role_data_syn: any;
        static readonly mission_submit_req: any;
        static readonly mission_submit_res: any;
        static readonly mission_receive_req: any;
        static readonly mission_receive_res: any;
        static readonly mission_star_req: any;
        static readonly mission_star_res: any;
        static readonly mission_chu_mo_buy_req: any;
        static readonly mission_chu_mo_buy_res: any;
        static readonly mission_chu_mo_fast_complete_req: any;
        static readonly mission_chu_mo_fast_complete_res: any;
        static readonly mission_fu_ben_enter_req: any;
        static readonly mission_fu_ben_enter_res: any;
        static readonly mission_special_req: any;
        static readonly join_task_map_req: any;
        static readonly mission_del_item_req: any;
        static readonly mission_del_item_res: any;
        static readonly mission_xsmj_submit_req: any;
        static readonly mission_xsmj_submit_res: any;
        static readonly mission_complete_immediately_req: any;
        static readonly mission_complete_immediately_res: any;
        static readonly mission_giveup_req: any;
        static readonly mission_giveup_res: any;
        static readonly item_load_syn: any;
        static readonly item_add_syn: any;
        static readonly item_del_syn: any;
        static readonly item_move_syn: any;
        static readonly item_change_syn: any;
        static readonly item_del_req: any;
        static readonly item_del_res: any;
        static readonly item_move_req: any;
        static readonly item_move_res: any;
        static readonly item_tidy_req: any;
        static readonly item_use_req: any;
        static readonly item_use_res: any;
        static readonly item_split_req: any;
        static readonly item_split_res: any;
        static readonly item_chat_show_req: any;
        static readonly item_chat_show_res: any;
        static readonly item_bag_load_syn: any;
        static readonly item_bag_open_req: any;
        static readonly item_bag_open_res: any;
        static readonly item_move_all_req: any;
        static readonly item_move_all_res: any;
        static readonly item_move_all_syn: any;
        static readonly item_use_to_target_req: any;
        static readonly item_use_open_box_req: any;
        static readonly open_grid_syn: any;
        static readonly equip_first_time_dress_full_notify: any;
        static readonly item_use_open_box_res: any;
        static readonly get_super_box_req: any;
        static readonly get_super_box_res: any;
        static readonly item_gift_bag_open_notify: any;
        static readonly gm_cmd_req: any;
        static readonly gm_cmd_res: any;
        static readonly relevel_req: any;
        static readonly relevel_res: any;
        static readonly mail_open_req: any;
        static readonly mail_open_res: any;
        static readonly mail_get_award_req: any;
        static readonly mail_get_award_res: any;
        static readonly mail_delete_req: any;
        static readonly mail_delete_res: any;
        static readonly mail_delete_all_req: any;
        static readonly mail_delete_all_res: any;
        static readonly mail_load_syn: any;
        static readonly mail_new_syn: any;
        static readonly mail_del_syn: any;
        static readonly mail_read_all_req: any;
        static readonly mail_read_all_res: any;
        static readonly mail_click_time_req: any;
        static readonly mail_click_time_res: any;
        static readonly equip_refine_req: any;
        static readonly equip_refine_res: any;
        static readonly equip_refine_change_syn: any;
        static readonly equip_refine_load_syn: any;
        static readonly equip_intensify_req: any;
        static readonly equip_intensify_res: any;
        static readonly equip_intensify_inherit_req: any;
        static readonly equip_intensify_inherit_res: any;
        static readonly equip_intensify_buy_star_req: any;
        static readonly equip_intensify_buy_star_res: any;
        static readonly equip_ace_intensify_req: any;
        static readonly equip_ace_intensify_res: any;
        static readonly equip_strengthen_req: any;
        static readonly equip_strengthen_res: any;
        static readonly equip_strengthen_load_syn: any;
        static readonly equip_strengthen_change_syn: any;
        static readonly equip_zhuhun_uplv_req: any;
        static readonly equip_zhuhun_uplv_res: any;
        static readonly suit_load_syn: any;
        static readonly suit_change_syn: any;
        static readonly suit_show_syn: any;
        static readonly suit_remove_syn: any;
        static readonly suit_active_req: any;
        static readonly suit_active_res: any;
        static readonly suit_load_manual_syn: any;
        static readonly mall_buy_req: any;
        static readonly mall_buy_res: any;
        static readonly mall_load_limit_syn: any;
        static readonly mall_data_limit_syn: any;
        static readonly mall_buy_use_buff_req: any;
        static readonly mall_buy_use_buff_res: any;
        static readonly mall_limit_data_syn: any;
        static readonly mall_score_buy_req: any;
        static readonly mall_score_buy_res: any;
        static readonly mall_limit_buy_req: any;
        static readonly mall_limit_buy_res: any;
        static readonly mall_turntable_syn: any;
        static readonly item_compound_req: any;
        static readonly item_compound_res: any;
        static readonly title_change_req: any;
        static readonly title_change_res: any;
        static readonly title_load_syn: any;
        static readonly title_add_syn: any;
        static readonly title_remove_syn: any;
        static readonly title_wear_change_syn: any;
        static readonly title_hide_hpt_req: any;
        static readonly title_hide_hpt_res: any;
        static readonly equip_exchange_req: any;
        static readonly equip_exchange_res: any;
        static readonly cloak_load_syn: any;
        static readonly cloak_change_syn: any;
        static readonly cloak_upgrade_req: any;
        static readonly cloak_upgrade_res: any;
        static readonly select_cloak_show_appearance_req: any;
        static readonly select_cloak_show_appearance_res: any;
        static readonly item_recycle_req: any;
        static readonly item_recycle_res: any;
        static readonly item_recycle_log_req: any;
        static readonly item_recycle_log_res: any;
        static readonly item_recycle_record_req: any;
        static readonly item_recycle_record_res: any;
        static readonly taskInfo: any;
        static readonly front_supply_load_syn: any;
        static readonly front_supply_submit_task_req: any;
        static readonly front_supply_submit_task_res: any;
        static readonly front_supply_getAward_req: any;
        static readonly front_supply_getAward_res: any;
        static readonly relation_load_syn: any;
        static readonly relation_change_syn: any;
        static readonly relation_remove_syn: any;
        static readonly relation_friend_invite_syn: any;
        static readonly relation_online_load_req: any;
        static readonly relation_online_load_res: any;
        static readonly relation_friend_invite_req: any;
        static readonly relation_friend_invite_res: any;
        static readonly relation_friend_reply_req: any;
        static readonly relation_friend_reply_res: any;
        static readonly relation_friend_del_req: any;
        static readonly relation_friend_del_res: any;
        static readonly relation_black_add_req: any;
        static readonly relation_black_add_res: any;
        static readonly relation_black_del_req: any;
        static readonly relation_black_del_res: any;
        static readonly relation_enemy_del_req: any;
        static readonly relation_enemy_del_res: any;
        static readonly relation_search_req: any;
        static readonly relation_search_res: any;
        static readonly relation_meet_req: any;
        static readonly relation_meet_res: any;
        static readonly relation_recommend_req: any;
        static readonly relation_recommend_res: any;
        static readonly relation_enemy_add_req: any;
        static readonly relation_enemy_add_res: any;
        static readonly relation_trace_req: any;
        static readonly relation_trace_res: any;
        static readonly relation_revengeLog_req: any;
        static readonly relation_revengeLog_res: any;
        static readonly relation_friendAll_reply_req: any;
        static readonly relation_friendAll_reply_res: any;
        static readonly relation_friend_reply_syn: any;
        static readonly relation_friendAll_invite_req: any;
        static readonly relation_friendAll_invite_res: any;
        static readonly relation_call_friend_req: any;
        static readonly relation_call_friend_res: any;
        static readonly relation_call_friend_syn: any;
        static readonly relation_call_friend_reply_syn: any;
        static readonly relation_call_friend_reply_req: any;
        static readonly relation_call_friend_reply_res: any;
        static readonly relation_call_count_syn: any;
        static readonly relation_tips_info_req: any;
        static readonly relation_tips_info_res: any;
        static readonly relation_message_req: any;
        static readonly relation_message_res: any;
        static readonly relation_message_list_req: any;
        static readonly relation_message_list_res: any;
        static readonly relation_message_syn: any;
        static readonly relation_head_pic_req: any;
        static readonly relation_head_pic_res: any;
        static readonly func_open_load_syn: any;
        static readonly func_open_change_syn: any;
        static readonly func_open_remove_syn: any;
        static readonly team_list_req: any;
        static readonly team_list_res: any;
        static readonly team_info_load_syn: any;
        static readonly team_member_add_res: any;
        static readonly team_member_del_res: any;
        static readonly team_member_modify_res: any;
        static readonly team_info_modify_req: any;
        static readonly team_info_modify_res: any;
        static readonly team_create_req: any;
        static readonly team_create_res: any;
        static readonly team_exit_req: any;
        static readonly team_exit_res: any;
        static readonly team_kick_req: any;
        static readonly team_kick_res: any;
        static readonly team_appoint_req: any;
        static readonly team_appoint_res: any;
        static readonly team_invite_req: any;
        static readonly team_invite_res: any;
        static readonly team_join_req: any;
        static readonly team_join_res: any;
        static readonly team_received_invite_syn: any;
        static readonly team_invite_reply_req: any;
        static readonly team_invite_reply_res: any;
        static readonly team_received_join_syn: any;
        static readonly team_join_reply_req: any;
        static readonly team_join_reply_res: any;
        static readonly team_nearly_players_req: any;
        static readonly team_nearly_players_res: any;
        static readonly team_dissolve_req: any;
        static readonly team_dissolve_res: any;
        static readonly team_map_coord_req: any;
        static readonly team_map_coord_res: any;
        static readonly team_unify_invite_nearby_req: any;
        static readonly team_unify_apply_nearby_req: any;
        static readonly team_member_hp_syn: any;
        static readonly team_call_member_req: any;
        static readonly team_call_member_res: any;
        static readonly team_call_member_syn: any;
        static readonly team_call_member_reply_syn: any;
        static readonly team_call_member_reply_req: any;
        static readonly team_call_member_reply_res: any;
        static readonly team_vip_team_syn: any;
        static readonly team_vip_team_req: any;
        static readonly team_vip_iscontinue_syn: any;
        static readonly team_vip_iscontinue_req: any;
        static readonly smelter_load_syn: any;
        static readonly smelter_change_syn: any;
        static readonly smelter_upgrade_req: any;
        static readonly smelter_upgrade_res: any;
        static readonly smelter_brand_req: any;
        static readonly smelter_brand_res: any;
        static readonly play_effect_syn: any;
        static readonly play_effect_info: any;
        static readonly smelter_active_skill_req: any;
        static readonly smelter_active_skill_res: any;
        static readonly mars_summon_req: any;
        static readonly mars_summon_res: any;
        static readonly mars_cultivate_req: any;
        static readonly mars_cultivate_res: any;
        static readonly mars_idle_req: any;
        static readonly mars_idle_res: any;
        static readonly mars_change_syn: any;
        static readonly mars_load_syn: any;
        static readonly mars_uplv_req: any;
        static readonly mars_uplv_res: any;
        static readonly mars_atk_state_req: any;
        static readonly mars_atk_state_res: any;
        static readonly mars_data_syn: any;
        static readonly mars_active_skin_req: any;
        static readonly mars_active_skin_res: any;
        static readonly mars_select_skin_req: any;
        static readonly mars_select_skin_res: any;
        static readonly mars_lock_taget_req: any;
        static readonly mars_lock_taget_res: any;
        static readonly mars_attrs_syn: any;
        static readonly mars_skill_list_syn: any;
        static readonly mars_skill_change_syn: any;
        static readonly mars_skill_replace_syn: any;
        static readonly mars_use_skill_res: any;
        static readonly mars_trunk_data_syn: any;
        static readonly notice_system_syn: any;
        static readonly notice_profit_syn: any;
        static readonly fashion_load_syn: any;
        static readonly fashion_change_syn: any;
        static readonly fashion_dress_req: any;
        static readonly fashion_dress_res: any;
        static readonly fashion_show_req: any;
        static readonly fashion_show_res: any;
        static readonly fashion_upgrade_req: any;
        static readonly fashion_upgrade_res: any;
        static readonly fashion_recovery_change_syn: any;
        static readonly buff_list_syn: any;
        static readonly buff_update_syn: any;
        static readonly buff_remove_syn: any;
        static readonly buff_remove_req: any;
        static readonly buff_remove_res: any;
        static readonly skill_list_syn: any;
        static readonly skill_change_syn: any;
        static readonly skill_replace_syn: any;
        static readonly skill_remove_syn: any;
        static readonly skill_uplv_req: any;
        static readonly skill_uplv_res: any;
        static readonly skill_enhance_syn: any;
        static readonly role_rank_load_req: any;
        static readonly role_rank_load_res: any;
        static readonly role_rank_self_load_req: any;
        static readonly role_rank_self_load_res: any;
        static readonly chat_message_req: any;
        static readonly chat_message_res: any;
        static readonly chat_message_syn: any;
        static readonly chat_message_ban_syn: any;
        static readonly chat_load_syn: any;
        static readonly chat_secretTab_req: any;
        static readonly chat_secretTab_res: any;
        static readonly active_value_load_syn: any;
        static readonly active_value_change_syn: any;
        static readonly active_value_award_req: any;
        static readonly active_value_award_res: any;
        static readonly active_value_week_req: any;
        static readonly active_value_week_res: any;
        static readonly active_value_day_syn: any;
        static readonly active_value_week_load_syn: any;
        static readonly active_week_value_change_syn: any;
        static readonly active_week_quickly_unlock_req: any;
        static readonly active_week_quickly_unlock_res: any;
        static readonly active_week_change_syn: any;
        static readonly active_week_time_req: any;
        static readonly active_week_time_res: any;
        static readonly active_value_get_req: any;
        static readonly active_value_get_res: any;
        static readonly lucky_dish_reward_show_req: any;
        static readonly lucky_dish_reward_show_res: any;
        static readonly lucky_dish_reward_get_req: any;
        static readonly lucky_dish_reward_get_res: any;
        static readonly lucky_dish_reward_syn: any;
        static readonly guild_create_req: any;
        static readonly guild_create_res: any;
        static readonly guild_exit_req: any;
        static readonly guild_exit_res: any;
        static readonly guild_kick_req: any;
        static readonly guild_kick_res: any;
        static readonly guild_dissolve_req: any;
        static readonly guild_dissolve_res: any;
        static readonly guild_apply_req: any;
        static readonly guild_apply_res: any;
        static readonly guild_apply_agree_req: any;
        static readonly guild_apply_agree_res: any;
        static readonly guild_apply_agree_auto_req: any;
        static readonly guild_apply_agree_auto_res: any;
        static readonly guild_notice_req: any;
        static readonly guild_notice_res: any;
        static readonly guild_appoint_req: any;
        static readonly guild_appoint_res: any;
        static readonly guild_apply_roleid_req: any;
        static readonly guild_apply_roleid_res: any;
        static readonly guild_list_req: any;
        static readonly guild_list_res: any;
        static readonly guild_member_syn: any;
        static readonly guild_audit_req: any;
        static readonly guild_audit_res: any;
        static readonly guild_log_req: any;
        static readonly guild_log_res: any;
        static readonly guild_invite_req: any;
        static readonly guild_invite_res: any;
        static readonly guild_invite_agree_req: any;
        static readonly guild_invite_agree_res: any;
        static readonly guild_join_notify_res: any;
        static readonly guild_load_syn: any;
        static readonly guild_change_syn: any;
        static readonly guild_memberchange_syn: any;
        static readonly guild_menber_map_req: any;
        static readonly guild_member_map_syn: any;
        static readonly guild_donate_req: any;
        static readonly guild_donate_res: any;
        static readonly guild_donate_item_req: any;
        static readonly guild_donate_item_res: any;
        static readonly guild_exchange_item_req: any;
        static readonly guild_exchange_item_res: any;
        static readonly guild_destroy_item_req: any;
        static readonly guild_destroy_item_res: any;
        static readonly guild_item_syn: any;
        static readonly guild_recycle_item_req: any;
        static readonly guild_recycle_item_res: any;
        static readonly guild_create_red_req: any;
        static readonly guild_create_red_res: any;
        static readonly guild_red_list_syn: any;
        static readonly guild_red_receive_req: any;
        static readonly guild_red_receive_res: any;
        static readonly guild_red_change_syn: any;
        static readonly guild_red_clear_change_syn: any;
        static readonly guild_open_build_req: any;
        static readonly guild_open_build_res: any;
        static readonly guild_build_page_req: any;
        static readonly guild_build_page_res: any;
        static readonly guild_build_donate_req: any;
        static readonly guild_build_donate_res: any;
        static readonly guild_activity_data_syn: any;
        static readonly guild_activity_pray_req: any;
        static readonly guild_activity_pray_res: any;
        static readonly guild_join_limit_req: any;
        static readonly guild_join_limit_res: any;
        static readonly guild_set_auto_join_req: any;
        static readonly guild_set_auto_join_res: any;
        static readonly guild_impeach_req: any;
        static readonly guild_impeach_res: any;
        static readonly guild_rival_req: any;
        static readonly guild_rival_res: any;
        static readonly guild_creat_boss_req: any;
        static readonly guild_creat_boss_res: any;
        static readonly guild_feed_boss_req: any;
        static readonly guild_feed_boss_res: any;
        static readonly guild_summon_boss_req: any;
        static readonly guild_summon_boss_res: any;
        static readonly guild_fiends_boss_syn: any;
        static readonly guild_change_stain_flag_req: any;
        static readonly guild_change_stain_flag_res: any;
        static readonly guild_mall_limit_load_syn: any;
        static readonly guild_mall_limit_change_syn: any;
        static readonly guild_buy_req: any;
        static readonly guild_buy_res: any;
        static readonly guild_sunmmon_boss_enter_req: any;
        static readonly guild_summon_boss_enter_res: any;
        static readonly guild_boss_open_req: any;
        static readonly guild_boss_open_res: any;
        static readonly guild_boss_set_auto_req: any;
        static readonly guild_boss_set_auto_res: any;
        static readonly guild_boss_enter_req: any;
        static readonly guild_boss_enter_res: any;
        static readonly guild_summon_boss_quit_req: any;
        static readonly guild_summon_boss_quit_res: any;
        static readonly guild_summon_boss_state_syn: any;
        static readonly guild_mission_role_count_req: any;
        static readonly guild_mission_role_count_res: any;
        static readonly guild_cancel_dissolve_req: any;
        static readonly guild_cancel_dissolve_res: any;
        static readonly auction_creat_req: any;
        static readonly auction_creat_res: any;
        static readonly auction_list_syn: any;
        static readonly auction_list_req: any;
        static readonly auction_list_res: any;
        static readonly auction_bidding_req: any;
        static readonly auction_bidding_res: any;
        static readonly auction_listCount_req: any;
        static readonly auction_listCount_syn: any;
        static readonly auction_listCount_res: any;
        static readonly auction_myList_req: any;
        static readonly auction_myList_res: any;
        static readonly auction_myList_syn: any;
        static readonly auction_off_the_shelf_req: any;
        static readonly auction_off_the_shelf_res: any;
        static readonly auction_nearPrice_req: any;
        static readonly auction_nearPrice_syn: any;
        static readonly auction_nearPrice_res: any;
        static readonly auction_buy_bogus_req: any;
        static readonly auction_buy_bogus_res: any;
        static readonly auction_buy_bogus_log_syn: any;
        static readonly script_client_func_syn: any;
        static readonly script_scene_right_update_syn: any;
        static readonly vip_lv_award_req: any;
        static readonly vip_lv_award_res: any;
        static readonly vip_buff_award_req: any;
        static readonly vip_buff_award_res: any;
        static readonly vip_award_syn: any;
        static readonly vip_pay_syn: any;
        static readonly vip_qoe_lasttime_syn: any;
        static readonly vip_num_req: any;
        static readonly vip_num_res: any;
        static readonly pay_ti_qu_req: any;
        static readonly pay_ti_qu_res: any;
        static readonly pay_bank_syn: any;
        static readonly pay_notice_syn: any;
        static readonly vip_gua_ji_req: any;
        static readonly vip_gua_ji_res: any;
        static readonly recharge_arrival_syn: any;
        static readonly daily_activity_load_syn: any;
        static readonly daily_activity_change_syn: any;
        static readonly commercial_activity_load_syn: any;
        static readonly daily_weekDay_message_load_syn: any;
        static readonly enter_scene_ui_type_syn: any;
        static readonly daily_active_state_change_syn: any;
        static readonly cross_server_activity_join_req: any;
        static readonly cross_server_activity_join_res: any;
        static readonly world_boss_req: any;
        static readonly world_boss_res: any;
        static readonly private_boss_load_syn: any;
        static readonly private_boss_change_syn: any;
        static readonly private_boss_enter_req: any;
        static readonly private_boss_enter_res: any;
        static readonly private_boss_state_change_syn: any;
        static readonly world_boss_relive_syn: any;
        static readonly elite_boss_req: any;
        static readonly elite_boss_res: any;
        static readonly elite_boss_load_req: any;
        static readonly elite_boss_load_res: any;
        static readonly clone_private_load_syn: any;
        static readonly clone_private_change_syn: any;
        static readonly clone_private_score_syn: any;
        static readonly clone_private_enter_req: any;
        static readonly clone_private_enter_res: any;
        static readonly clone_private_star_award_req: any;
        static readonly clone_private_star_award_res: any;
        static readonly clone_private_complete_award_req: any;
        static readonly clone_private_complete_award_res: any;
        static readonly clone_private_sweep_req: any;
        static readonly clone_private_sweep_res: any;
        static readonly clone_private_sweep_free_req: any;
        static readonly clone_private_sweep_free_res: any;
        static readonly boss_refresh_syn: any;
        static readonly world_boss_cross_req_syn: any;
        static readonly world_boss_cross_res_syn: any;
        static readonly world_boss_cross_change_syn: any;
        static readonly world_boss_info_req: any;
        static readonly world_boss_info_res: any;
        static readonly world_boss_map_info_req: any;
        static readonly world_boss_map_info_res: any;
        static readonly world_boss_rare_info_req: any;
        static readonly world_boss_rare_info_res: any;
        static readonly world_boss_drop_info_req: any;
        static readonly world_boss_drop_info_res: any;
        static readonly world_boss_cross_info_req: any;
        static readonly pirvate_boss_challengne_info_syn: any;
        static readonly private_boss_get_extra_challengne_times_req: any;
        static readonly private_boss_get_extra_challengne_times_res: any;
        static readonly world_boss_rare_scene_syn: any;
        static readonly world_boss_rare_enter_req: any;
        static readonly world_boss_rare_enter_res: any;
        static readonly script_npc_click_req: any;
        static readonly script_npc_click_res: any;
        static readonly script_scene_click_req: any;
        static readonly script_scene_click_res: any;
        static readonly script_ui_click_req: any;
        static readonly script_ui_click_res: any;
        static readonly script_tjhf_super_box_info: any;
        static readonly offline_drill_init_syn: any;
        static readonly offline_drill_state_req: any;
        static readonly offline_drill_state_res: any;
        static readonly offline_drill_award_req: any;
        static readonly offline_drill_award_res: any;
        static readonly offline_drill_update_award_syn: any;
        static readonly offline_drill_surplus_time_req: any;
        static readonly offline_drill_surplus_time_res: any;
        static readonly offline_drill_buy_award_req: any;
        static readonly offline_drill_buy_award_res: any;
        static readonly offline_drill_update_item_syn: any;
        static readonly info_offline_drill_update_item: any;
        static readonly mine_tidy_req: any;
        static readonly mine_tidy_res: any;
        static readonly mine_seek_req: any;
        static readonly mine_seek_res: any;
        static readonly mine_itemlist_syn: any;
        static readonly mine_radio_req: any;
        static readonly mine_raido_res: any;
        static readonly mine_extract_req: any;
        static readonly mine_extract_res: any;
        static readonly mine_recycle_req: any;
        static readonly mine_recycle_res: any;
        static readonly mine_one_extract_req: any;
        static readonly mine_load_syn: any;
        static readonly mine_getBox_req: any;
        static readonly mine_getBox_res: any;
        static readonly mine_show_syn: any;
        static readonly mine_withdraw_equip_req: any;
        static readonly mine_withdraw_equip_res: any;
        static readonly mine_recovery_gourd_req: any;
        static readonly mine_recovery_gourd_res: any;
        static readonly mine_one_extract_use_req: any;
        static readonly mine_one_extract_use_res: any;
        static readonly mine_ladder_receive_reward_req: any;
        static readonly mine_ladder_receive_reward_res: any;
        static readonly privilege_card_init: any;
        static readonly privilege_card_daily_award_req: any;
        static readonly privilege_card_daily_award_res: any;
        static readonly privilege_card_buy_req: any;
        static readonly privilege_card_buy_res: any;
        static readonly material_info_syn: any;
        static readonly material_award_req: any;
        static readonly material_award_res: any;
        static readonly material_enter_req: any;
        static readonly material_enter_res: any;
        static readonly material_senseui_syn: any;
        static readonly material_synchro_syn: any;
        static readonly material_sweep_req: any;
        static readonly material_sweep_res: any;
        static readonly material_boss_notice: any;
        static readonly material_skill_cd_syn: any;
        static readonly shen_yuan_da_ting_syn: any;
        static readonly guild_map_enter_req: any;
        static readonly guild_map_enter_res: any;
        static readonly guild_fire_data_syn: any;
        static readonly guild_fire_click_req: any;
        static readonly guild_fire_click_res: any;
        static readonly guild_cateran_data_syn: any;
        static readonly guild_fire_click_check_req: any;
        static readonly guild_fire_click_check_res: any;
        static readonly guild_skill_load_syn: any;
        static readonly guild_skill_change_syn: any;
        static readonly guild_skill_upLv_req: any;
        static readonly guild_skill_upLv_res: any;
        static readonly guild_objective_load_syn: any;
        static readonly guild_objective_award_req: any;
        static readonly guild_objective_award_res: any;
        static readonly guild_objective_change_syn: any;
        static readonly relation_call_guild_req: any;
        static readonly relation_call_guild_res: any;
        static readonly relation_call_guild_syn: any;
        static readonly relation_call_guild_reply_syn: any;
        static readonly relation_call_guild_reply_req: any;
        static readonly relation_call_guild_reply_res: any;
        static readonly relation_call_guild_cd_time_syn: any;
        static readonly guild_manifesto_req: any;
        static readonly guild_manifesto_res: any;
        static readonly guild_athletics_change_syn: any;
        static readonly guild_creat_red_syn: any;
        static readonly guild_warehouse_limit_req: any;
        static readonly guild_warehouse_limit_res: any;
        static readonly guild_rank_info: any;
        static readonly guild_get_guild_rank_info_req: any;
        static readonly guild_get_guild_rank_info_res: any;
        static readonly dig_mine_load_syn: any;
        static readonly kuang_role_infos_syn: any;
        static readonly send_map_infos_syn: any;
        static readonly kuang_change_map_req: any;
        static readonly kuang_change_map_res: any;
        static readonly kuang_get_time_req: any;
        static readonly kuang_get_time_res: any;
        static readonly kuang_ts_count_req: any;
        static readonly kuang_ts_count_res: any;
        static readonly kuang_quickly_complete_req: any;
        static readonly kuang_quickly_complete_res: any;
        static readonly survival_battlefield_info_syn: any;
        static readonly survival_battlefield_rankInfo_req: any;
        static readonly survival_battlefield_rankInfo_res: any;
        static readonly survival_rank_info_syn: any;
        static readonly survival_check_rank_res: any;
        static readonly survival_check_rank_req: any;
        static readonly answer_begin_req: any;
        static readonly answer_update_syn: any;
        static readonly answer_select_req: any;
        static readonly answer_load_syn: any;
        static readonly answer_rank_req: any;
        static readonly answer_rank_res: any;
        static readonly answer_cost_correct_req: any;
        static readonly answer_clone_time_syn: any;
        static readonly answer_ready_time_syn: any;
        static readonly answer_use_skill_req: any;
        static readonly answer_use_skill_res: any;
        static readonly answer_select_res: any;
        static readonly answer_begin_res: any;
        static readonly answer_cost_correct_res: any;
        static readonly answer_final_award_syn: any;
        static readonly recharge_data_syn: any;
        static readonly recharge_award_req: any;
        static readonly recharge_award_res: any;
        static readonly recharge_life_first_pay_syn: any;
        static readonly sync_recharge_day_money_login: any;
        static readonly recharge_first_award_req: any;
        static readonly recharge_first_award_res: any;
        static readonly code_exchange_req: any;
        static readonly code_exchange_res: any;
        static readonly sign_day_req: any;
        static readonly sign_day_res: any;
        static readonly login_week_award_req: any;
        static readonly login_week_award_res: any;
        static readonly online_award_req: any;
        static readonly online_award_res: any;
        static readonly login_award_req: any;
        static readonly login_award_res: any;
        static readonly award_hall_data_syn: any;
        static readonly resource_back_req: any;
        static readonly resource_back_res: any;
        static readonly sign_award_req: any;
        static readonly sign_award_res: any;
        static readonly praying_select_reward_req: any;
        static readonly praying_select_reward_res: any;
        static readonly praying_info_syn: any;
        static readonly praying_reward_receive_req: any;
        static readonly praying_reward_receive_res: any;
        static readonly praying_buy_item_time_req: any;
        static readonly praying_buy_item_time_res: any;
        static readonly resource_back_all_req: any;
        static readonly resource_back_all_res: any;
        static readonly get_level_reach_awards_req: any;
        static readonly get_level_reach_awards_res: any;
        static readonly sha_cheng_battle_scene_syn: any;
        static readonly daily_activity_mbcz_vote_load_syn: any;
        static readonly active_monster_attack_show_time_syn: any;
        static readonly yb_husong_req: any;
        static readonly yb_husong_res: any;
        static readonly yb_info_syn: any;
        static readonly yb_refresh_req: any;
        static readonly yb_refresh_res: any;
        static readonly yb_complete_syn: any;
        static readonly yb_giveup_req: any;
        static readonly yb_giveup_res: any;
        static readonly guild_yabiao_complete_syn: any;
        static readonly yb_biaoche_info_syn: any;
        static readonly guild_yabiao_enter_req: any;
        static readonly guild_yabiao_enter_res: any;
        static readonly guild_yabiao_info_syn: any;
        static readonly yb_help_syn: any;
        static readonly yb_help_go_req: any;
        static readonly yb_help_go_res: any;
        static readonly yh_help_res: any;
        static readonly dark_temple_boss_load_syn: any;
        static readonly dark_temple_boss_change_syn: any;
        static readonly pro_boss_team_clone_init: any;
        static readonly pro_boss_team_clone_enter_map: any;
        static readonly pro_boss_team_clone_update: any;
        static readonly unknow_dark_type_req: any;
        static readonly unkonw_dark_type_res: any;
        static readonly unknow_dark_boss_isdie_syn: any;
        static readonly load_national_red_syn: any;
        static readonly national_red_donate_req: any;
        static readonly national_red_donate_res: any;
        static readonly national_red_change_syn: any;
        static readonly national_red_rob_req: any;
        static readonly notional_red_rob_res: any;
        static readonly national_red_rank_change_syn: any;
        static readonly national_red_vip_change_count_syn: any;
        static readonly national_red_donate_online_res: any;
        static readonly athletics_get_req: any;
        static readonly athletics_get_res: any;
        static readonly athletics_load_syn: any;
        static readonly athletics_change_syn: any;
        static readonly osa_tehui_gift_req: any;
        static readonly osa_tehui_gift_res: any;
        static readonly osa_tehui_gift_load_syn: any;
        static readonly osa_tehui_gift_change_syn: any;
        static readonly guild_mission_clone_syn: any;
        static readonly exp_refine_load_syn: any;
        static readonly exp_refine_change_syn: any;
        static readonly exp_refine_show_req: any;
        static readonly exp_refine_show_res: any;
        static readonly exp_refine_req: any;
        static readonly exp_refine_res: any;
        static readonly exp_refine_show_change_syn: any;
        static readonly play_dice_init_data_syn: any;
        static readonly play_dice_getcon_award_req: any;
        static readonly play_dice_getcon_award_res: any;
        static readonly play_dice_req: any;
        static readonly play_dice_res: any;
        static readonly play_dice_conchange_syn: any;
        static readonly supremacy_treasure_load_syn: any;
        static readonly supremacy_treasure_change_syn: any;
        static readonly supremacy_treasure_award_req: any;
        static readonly supremacy_treasure_award_res: any;
        static readonly supremacy_treasure_boss_req: any;
        static readonly supremacy_treasure_boss_res: any;
        static readonly supremacy_treasure_boss_syn: any;
        static readonly dig_equipment_change_req: any;
        static readonly dig_equipment_change_res: any;
        static readonly dig_equipment_random_req: any;
        static readonly dig_equipment_random_res: any;
        static readonly dig_equipment_record_req: any;
        static readonly dig_equipment_record_res: any;
        static readonly guild_athletics_rank_req: any;
        static readonly guild_athletics_rank_syn: any;
        static readonly guild_athletics_rank_res: any;
        static readonly sevenDay_Carnival_Show_req: any;
        static readonly sevenDay_Carnival_Show_res: any;
        static readonly ha_limit_buy_req: any;
        static readonly ha_limit_buy_res: any;
        static readonly ha_limit_buy_load_syn: any;
        static readonly ha_limit_buy_change_syn: any;
        static readonly mystical_story_load: any;
        static readonly mystical_story_buy_req: any;
        static readonly mystical_story_buy_res: any;
        static readonly mystical_story_refresh_req: any;
        static readonly mystical_story_refresh_res: any;
        static readonly material_feast_req: any;
        static readonly material_feast_res: any;
        static readonly merger_rechage_giveawar_init_syn: any;
        static readonly merger_rechage_giveaward_rechage_syn: any;
        static readonly merger_rechage_giveaward_get_req: any;
        static readonly merger_rechage_giveaward_get_res: any;
        static readonly longzhu_load_syn: any;
        static readonly longzhu_change_syn: any;
        static readonly longzhu_get_req: any;
        static readonly longzhu_get_res: any;
        static readonly ruyi_change_syn: any;
        static readonly ruyi_load_syn: any;
        static readonly ruyi_get_req: any;
        static readonly ruyi_get_res: any;
        static readonly hf_login_reward_req: any;
        static readonly hf_login_reward_res: any;
        static readonly hf_login_reward_syn: any;
        static readonly merger_consume_rank_req: any;
        static readonly merger_consume_rank_res: any;
        static readonly ruishou_enter_req: any;
        static readonly ruishou_enter_res: any;
        static readonly ruishou_load_syn: any;
        static readonly ruishou_boss_state_syn: any;
        static readonly push_pay_init_syn: any;
        static readonly push_pay_sever_req: any;
        static readonly open_guildactivity_chang_state_syn: any;
        static readonly open_guildactivity_num_syn: any;
        static readonly open_guildactivity_getaward_req: any;
        static readonly open_guildactivity_getaward_res: any;
        static readonly material_feast_syn: any;
        static readonly guild_forbid_area_list_req: any;
        static readonly guild_forbid_area_list_res: any;
        static readonly guild_forbid_area_quick_pair_req: any;
        static readonly guild_forbid_area_create_room_req: any;
        static readonly guild_forbid_area_join_room_req: any;
        static readonly guild_forbid_area_dup_syn: any;
        static readonly guild_forbid_area_init_sync: any;
        static readonly guild_forbid_area_award_syn: any;
        static readonly guild_forbid_area_join_res: any;
        static readonly contnuous_recharge_load_syn: any;
        static readonly contnuous_recharge_award_req: any;
        static readonly contnuous_recharge_award_res: any;
        static readonly accumula_recharge_load_syn: any;
        static readonly accumula_recharge_change_syn: any;
        static readonly accumula_recharge_get_award_req: any;
        static readonly accumula_recharge_get_award_res: any;
        static readonly accumula_week_recharge_load_syn: any;
        static readonly accumula_week_recharge_change_syn: any;
        static readonly accumula_week_recharge_get_award_req: any;
        static readonly accumula_week_recharge_get_award_res: any;
        static readonly wo_long_da_dian_syn: any;
        static readonly honor_mall_exchange_req: any;
        static readonly honor_mall_exchange_res: any;
        static readonly honor_mall_load_syn: any;
        static readonly honor_mall_change_syn: any;
        static readonly moba_match_req: any;
        static readonly moba_match_res: any;
        static readonly moba_match_syn: any;
        static readonly cross2match_room_count_syn: any;
        static readonly moba_grade_score_change_syn: any;
        static readonly moba_game_info_req: any;
        static readonly moba_game_info_res: any;
        static readonly moba_buy_count_req: any;
        static readonly moba_buy_count_res: any;
        static readonly match2Logic_off_match_req: any;
        static readonly moba_role_enter_game_info_req: any;
        static readonly moba_role_enter_game_info_res: any;
        static readonly moba_disconnect_notice_syn: any;
        static readonly match_creat_team_req: any;
        static readonly match_creat_team_res: any;
        static readonly match_team_invitation_req: any;
        static readonly match_team_invitation_res: any;
        static readonly match_team_invition_syn: any;
        static readonly match_enterMap_team_info_syn: any;
        static readonly match_a_kill_b_syn: any;
        static readonly match_endTime_syn: any;
        static readonly match_surrender_req: any;
        static readonly match_surrender_res: any;
        static readonly match_surrender_result_syn: any;
        static readonly match_surrender_syn: any;
        static readonly match_team_is_agree_syn: any;
        static readonly match_team_result_syn: any;
        static readonly match_team_notic_target_syn: any;
        static readonly match_team_is_argee_req: any;
        static readonly match_team_cancel_req: any;
        static readonly match_team_cancel_res: any;
        static readonly cross_map_coord_sync: any;
        static readonly cross_map_coord_req: any;
        static readonly match_change_souce_syn: any;
        static readonly cross_map_quit_syn: any;
        static readonly cross_map_manual_quit_req: any;
        static readonly match_state_res: any;
        static readonly match_state_team_syn: any;
        static readonly match_cancel_req: any;
        static readonly match_flag_belong_syn: any;
        static readonly match_team_limit_map_res: any;
        static readonly active_code_get_req: any;
        static readonly active_code_get_res: any;
        static readonly active_code_proving_req: any;
        static readonly active_code_proving_res: any;
        static readonly active_code_usenum_syn: any;
        static readonly active_code_get_syn: any;
        static readonly active_code_info: any;
        static readonly active_code_use_syn: any;
        static readonly ring_level_up_req: any;
        static readonly ring_level_up_res: any;
        static readonly ring_condition_req: any;
        static readonly ring_condition_res: any;
        static readonly ring_lv_change_syn: any;
        static readonly ring_load_syn: any;
        static readonly ring_condition_syn: any;
        static readonly ring_suit_lv_up_req: any;
        static readonly ring_suit_lv_up_res: any;
        static readonly ring_gift_syn: any;
        static readonly ring_gift_req: any;
        static readonly ring_gift_res: any;
        static readonly gem_slot_info_syn: any;
        static readonly gem_slot_open_state_syn: any;
        static readonly gem_slot_upgrade_req: any;
        static readonly gem_slot_upgrade_res: any;
        static readonly gem_slot_open_state_req: any;
        static readonly gem_slot_open_state_res: any;
        static readonly gem_compound_oneKey_req: any;
        static readonly gem_compound_oneKey_res: any;
        static readonly gem_compound_req: any;
        static readonly gem_compound_res: any;
        static readonly seven_up_lv_req: any;
        static readonly seven_up_change_lv_syn: any;
        static readonly seven_up_lv_res: any;
        static readonly seven_load_syn: any;
        static readonly charge_crash_up_req: any;
        static readonly charge_crash_up_res: any;
        static readonly charge_crash_change_syn: any;
        static readonly charge_crash_load_syn: any;
        static readonly equip_vice_lucun_change_req: any;
        static readonly equip_vice_lucun_change_res: any;
        static readonly equip_vice_lucun_load_syn: any;
        static readonly equip_vice_lucun_change_syn: any;
        static readonly equip_vice_lucun_slot_open_req: any;
        static readonly equip_vice_lucun_slot_open_res: any;
        static readonly equip_vice_lucun_slot_syn: any;
        static readonly extract_card_req: any;
        static readonly extract_card_res: any;
        static readonly extract_card_syn: any;
        static readonly extract_card_infos_syn: any;
        static readonly extract_card_give_up_req: any;
        static readonly extract_card_give_up_res: any;
        static readonly extract_card_info_req: any;
        static readonly extract_card_info_res: any;
        static readonly extract_card_load_syn: any;
        static readonly extract_card_time_syn: any;
        static readonly extract_card_get_all_card_req: any;
        static readonly extract_card_onekey_req: any;
        static readonly extract_card_day_count_award_req: any;
        static readonly extract_card_day_count_award_res: any;
        static readonly extract_card_day_count_award_syn: any;
        static readonly dragon_soul_up_state_syn: any;
        static readonly gift_optional_req: any;
        static readonly gift_optional_res: any;
        static readonly dragon_worship_load_syn: any;
        static readonly dragon_worship_accept_req: any;
        static readonly dragon_worship_accept_res: any;
        static readonly dragon_worship_change_sync: any;
        static readonly dragon_worship_get_award_req: any;
        static readonly dragon_worship_get_award_res: any;
        static readonly dragon_worship_refresh_req: any;
        static readonly dragon_worship_refresh_res: any;
        static readonly dragon_worship_giveup_req: any;
        static readonly dragon_worship_giveup_res: any;
        static readonly dragon_worship_reset_req: any;
        static readonly dragon_worship_reset_res: any;
        static readonly act_collection_word_req: any;
        static readonly act_collection_word_res: any;
        static readonly act_collection_word_syn: any;
        static readonly buy_seven_days_privilege_req: any;
        static readonly buy_seven_days_privilege_res: any;
        static readonly get_seven_days_privilege_item_req: any;
        static readonly get_seven_days_privilege_item_res: any;
        static readonly sync_seven_days_privilege_info: any;
        static readonly sync_day_refresh: any;
        static readonly gcz_info_new_req: any;
        static readonly gcz_info_new_res: any;
        static readonly gcz_scene_syn: any;
        static readonly gcz_scene_enter_req: any;
        static readonly gcz_scene_enter_res: any;
        static readonly gcz_info_guild_rank_req: any;
        static readonly gcz_info_guild_rank_res: any;
        static readonly gcz_info_guild_rank_syn: any;
        static readonly gcz_over_syn: any;
        static readonly exchange_info_nums_syn: any;
        static readonly mission_border_buy_req: any;
        static readonly mission_border_buy_res: any;
        static readonly mission_border_fast_complete_req: any;
        static readonly mission_border_fast_complete_res: any;
        static readonly feat_up_req: any;
        static readonly feat_up_res: any;
        static readonly mission_border_cross_fast_complete_req: any;
        static readonly mission_border_cross_fast_complete_res: any;
        static readonly border_gold_award_syn: any;
        static readonly os_title_lease_req: any;
        static readonly os_title_lease_res: any;
        static readonly os_title_lease_syn: any;
        static readonly os_full_discount_req: any;
        static readonly os_full_discount_res: any;
        static readonly os_full_discount_data_syn: any;
        static readonly os_full_discount_limit_syn: any;
        static readonly early_kill_boss_load_syn: any;
        static readonly early_kill_boss_change_syn: any;
        static readonly early_kill_boss_get_award: any;
        static readonly open_active_get_equip_reward_req: any;
        static readonly open_active_get_equip_reward_res: any;
        static readonly open_active_get_equip_reward_syn: any;
        static readonly open_active_get_equip_load_syn: any;
        static readonly open_active_get_equip_change_syn: any;
        static readonly os_timed_suit_change_syn: any;
        static readonly os_timed_suit_load_syn: any;
        static readonly os_timed_suit_get_award_req: any;
        static readonly os_timed_suit_get_award_res: any;
        static readonly os_award_record_req: any;
        static readonly os_award_record_res: any;
        static readonly sync_warriors_return_Info: any;
        static readonly get_warrionrs_return_login_award_req: any;
        static readonly get_warrionrs_return_login_award_res: any;
        static readonly grand_total_recharge_award_info: any;
        static readonly get_grand_total_recharge_award_req: any;
        static readonly get_grand_total_recharge_award_res: any;
        static readonly destiny_bottle_syn: any;
        static readonly destiny_turn_syn: any;
        static readonly destiny_get_allaward_req: any;
        static readonly destiny_get_allaward_res: any;
        static readonly destiny_reset_req: any;
        static readonly destiny_reset_res: any;
        static readonly destiny_get_award_req: any;
        static readonly destiny_get_award_res: any;
        static readonly destiny_start_turn_req: any;
        static readonly destiny_start_turn_res: any;
        static readonly destiny_reset_surplus_syn: any;
        static readonly shen_wu_shi_lian_start_req: any;
        static readonly shen_wu_shi_lian_start_res: any;
        static readonly shen_wu_shi_lian_refresh_req: any;
        static readonly shen_wu_shi_lian_refresh_res: any;
        static readonly shen_wu_shi_lian_attack_req: any;
        static readonly shen_wu_shi_lian_attack_res: any;
        static readonly shen_wu_shi_lian_syn: any;
        static readonly sweep_req: any;
        static readonly sweep_res: any;
        static readonly passed_fuben_syn: any;
        static readonly guild_boss_data_req: any;
        static readonly guild_boss_data_res: any;
        static readonly guild_boss_rank_req: any;
        static readonly guild_boss_rank_res: any;
        static readonly guild_boss_map_enter_req: any;
        static readonly guild_boss_map_enter_res: any;
        static readonly guild_boss_script_syn: any;
        static readonly guild_boss_data_syn: any;
        static readonly guild_boss_challenge_count_syn: any;
        static readonly npc_map_transfer_req: any;
        static readonly npc_map_transfer_res: any;
        static readonly coloseum_load_syn: any;
        static readonly coloseum_buy_count_req: any;
        static readonly coloseum_buy_res: any;
        static readonly coloseum_kill_boss_req: any;
        static readonly coloseum_kill_boss_index_res: any;
        static readonly coloseum_result_syn: any;
        static readonly coloseum_clearance_req: any;
        static readonly coloseum_fail_syn: any;
        static readonly coloseum_first_award_req: any;
        static readonly coloseum_first_award_res: any;
        static readonly smlet_god_upgrade_req: any;
        static readonly smlet_god_upgrade_res: any;
        static readonly smlet_god_data_syn: any;
        static readonly artifact_load_syn: any;
        static readonly artifact_active_req: any;
        static readonly artifact_active_res: any;
        static readonly artifact_rebate_req: any;
        static readonly artifact_rebate_res: any;
        static readonly artifact_get_time_award_req: any;
        static readonly artifact_get_time_award_res: any;
        static readonly artifact_get_time_award_syn: any;
        static readonly super_value_load_syn: any;
        static readonly super_value_change_syn: any;
        static readonly super_value_buy_req: any;
        static readonly super_value_buy_res: any;
        static readonly item_resolve_req: any;
        static readonly item_resolve_res: any;
        static readonly boss_reward_info_syn: any;
        static readonly boss_reward_get_req: any;
        static readonly world_boss_reward_get_res: any;
        static readonly stengthen_copy_load_syn: any;
        static readonly strengthen_copy_boss_info_syn: any;
        static readonly strengthen_copy_sweep_req: any;
        static readonly strengthen_copy_sweep_res: any;
        static readonly mission_equip_recycl_load_syn: any;
        static readonly mission_equip_recycl_change_syn: any;
        static readonly mission_equip_recycl_submit_req: any;
        static readonly mission_equip_recycl_submit_res: any;
        static readonly mission_equip_recycl_receive_req: any;
        static readonly mission_equip_recycl_receive_res: any;
        static readonly mission_equip_recycl_star_req: any;
        static readonly mission_equip_recycl_star_res: any;
        static readonly lie_bian_zhi_zai_sweep_req: any;
        static readonly lie_bian_zhi_zai_sweep_res: any;
        static readonly lie_bian_zhi_zai_award_req: any;
        static readonly lie_bian_zhi_zai_award_res: any;
        static readonly fu_mo_level_enter_req: any;
        static readonly fu_mo_level_result_syn: any;
        static readonly fu_mo_level_award_req: any;
        static readonly fu_mo_level_award_res: any;
        static readonly fu_mo_level_load_syn: any;
        static readonly fu_mo_level_sweep_req: any;
        static readonly fu_mo_level_sweep_res: any;
        static readonly qiu_mo_enter_next_req: any;
        static readonly qiu_mo_enter_next_res: any;
        static readonly qiu_mo_enter_syn: any;
        static readonly foundation_load_syn: any;
        static readonly foundation_get_req: any;
        static readonly foundation_get_res: any;
        static readonly treasure_change_syn: any;
        static readonly treasure_useitem_req: any;
        static readonly treasure_useitem_res: any;
        static readonly treasure_dig_req: any;
        static readonly treasure_dig_res: any;
        static readonly treasure_book_award_syn: any;
        static readonly treasure_book_collect_syn: any;
        static readonly treasure_jidao_kill_syn: any;
        static readonly lie_mo_huan_yu_syn: any;
        static readonly lie_mo_huan_yu_info_syn: any;
        static readonly lie_mo_huan_yu_sweep_req: any;
        static readonly lie_mo_huan_yu_sweep_res: any;
        static readonly lie_mo_huan_yu_enter_req: any;
        static readonly lie_mo_huan_yu_enter_res: any;
        static readonly lie_mo_huan_yu_award_req: any;
        static readonly lie_mo_huan_yu_award_res: any;
        static readonly seals_intensify_req: any;
        static readonly seals_intensify_info: any;
        static readonly seals_intensify_res: any;
        static readonly shen_wen_upgrade_req: any;
        static readonly shen_wen_upgrade_res: any;
        static readonly shen_wen_refine_req: any;
        static readonly shen_wen_refine_res: any;
        static readonly shen_wen_lock_flag_req: any;
        static readonly shen_wen_lock_flag_res: any;
        static readonly shen_wen_refine_apply_req: any;
        static readonly shen_wen_refine_apply_res: any;
        static readonly condumption_return_syn: any;
        static readonly condumption_return_req: any;
        static readonly condumption_return_res: any;
        static readonly ygsd_info_syn: any;
        static readonly ygsd_boss_state_change: any;
        static readonly info_ygsd_rank: any;
        static readonly sync_ygsd_rank_info: any;
        static readonly syn_func_open_award_info: any;
        static readonly func_open_get_award_req: any;
        static readonly func_open_get_award_res: any;
        static readonly new_func_open_get_award_req: any;
        static readonly new_func_open_get_award_res: any;
        static readonly new_func_open_award_info_syn: any;
        static readonly hun_pai_upgrade_req: any;
        static readonly hun_pai_upgrade_res: any;
        static readonly syn_turntable_info: any;
        static readonly turntable_draw_req: any;
        static readonly turntable_draw_res: any;
        static readonly turntable_reset_req: any;
        static readonly turntable_reset_res: any;
        static readonly turntable_syn_req: any;
        static readonly magic_weapon_syn: any;
        static readonly dragon_spirit_upgrade_req: any;
        static readonly dragon_spirit_upgrade_res: any;
        static readonly dragon_spirit_breach_req: any;
        static readonly dragon_spirit_breach_res: any;
        static readonly dragon_vein_upgrade_req: any;
        static readonly dragon_vein_upgrade_res: any;
        static readonly os_sha_cheng_battle_data_req: any;
        static readonly os_sha_cheng_battle_data_res: any;
        static readonly sheng_hua_zhan_chang_UI_syn: any;
        static readonly daily_activity_shzc_rank_syn: any;
        static readonly daily_activity_shzc_rank_req: any;
        static readonly daily_activity_shzc_rank_res: any;
        static readonly shen_yu_tan_bao_refresh_id_syn: any;
        static readonly shen_yu_tan_bao_cur_wave_syn: any;
        static readonly dragon_god_worship_req: any;
        static readonly dragon_god_worship_res: any;
        static readonly dragon_god_worship_progress_req: any;
        static readonly dragon_god_worship_progress_res: any;
        static readonly dragon_god_get_award_req: any;
        static readonly dragon_god_get_award_res: any;
        static readonly dragon_god_worship_paodian_syn: any;
        static readonly dragon_god_get_award_arr_syn: any;
        static readonly shou_wei_bi_qi_progress_syn: any;
        static readonly shou_wei_bi_qi_boss_id_syn: any;
        static readonly os_quanmin_changename_sync: any;
        static readonly os_quanmin_changename_getaward_req: any;
        static readonly os_quanmin_changename_getaward_res: any;
        static readonly saint_dragon_spirit_load_sync: any;
        static readonly saint_dragon_spirit_change_syn: any;
        static readonly saint_dragon_spirit_get_award_req: any;
        static readonly saint_dragon_spirit_get_award_res: any;
        static readonly saint_dragon_spirit_active_req: any;
        static readonly saint_dragon_spirit_active_res: any;
        static readonly saint_dragon_spirit_map_syn: any;
        static readonly tumo_script_data_sync: any;
        static readonly soul_eater_decompose_req: any;
        static readonly soul_eater_decompose_res: any;
        static readonly sha_cheng_complate_syn: any;
        static readonly sha_cheng_info_syn: any;
        static readonly sha_cheng_award_req: any;
        static readonly sha_cheng_award_res: any;
        static readonly vip_achi_award_req: any;
        static readonly vip_achi_award_res: any;
        static readonly vip_achi_load_syn: any;
        static readonly vip_achi_change_syn: any;
        static readonly vip_achi_show_req: any;
        static readonly vip_achi_show_res: any;
        static readonly vip_achi_award_load_syn: any;
        static readonly vip_achi_submit_req: any;
        static readonly vip_achi_submit_res: any;
        static readonly vip_achi_ex_award_req: any;
        static readonly vip_achi_ex_award_res: any;
        static readonly pet_data_syn: any;
        static readonly pet_operate_req: any;
        static readonly pet_operate_res: any;
        static readonly pet_change_syn: any;
        static readonly pet_active_req: any;
        static readonly pet_active_res: any;
        static readonly pet_data_info: any;
        static readonly map_welfare_load_syn: any;
        static readonly black_mall_syn: any;
        static readonly black_mall_buy_req: any;
        static readonly black_mall_buy_res: any;
        static readonly invest_active_req: any;
        static readonly invest_active_res: any;
        static readonly invest_getaward_req: any;
        static readonly invest_getaward_res: any;
        static readonly invest_load_syn: any;
        static readonly zhao_cai_jin_bao_load_syn: any;
        static readonly zhao_cai_jin_bao_req: any;
        static readonly zhao_cai_jin_bao_res: any;
        static readonly zhao_cai_jin_bao_change_money_syn: any;
        static readonly zhao_cai_jin_bao_get_syn: any;
        static readonly pay_pay_syn: any;
        static readonly pay_get_pay_req: any;
        static readonly pay_get_pay_res: any;
        static readonly consume_rank_info_req: any;
        static readonly consume_rank_info_res: any;
        static readonly info_consume_rank: any;
        static readonly consume_old_rank_info_req: any;
        static readonly consume_old_rank_info_res: any;
        static readonly fuwenlianzhi_info: any;
        static readonly fuwenlianzhi_info_syn_req: any;
        static readonly fuwenlianzhi_element: any;
        static readonly fuwenlianzhi_info_syn_res: any;
        static readonly fuwenlianzhi_once_click_req: any;
        static readonly fuwenlianzhi_once_click_res: any;
        static readonly fuwen_onkey_parse_req: any;
        static readonly fuwen_parse_res: any;
        static readonly fuwenlianzhi_pick_req: any;
        static readonly fuwenlianzhi_pick_res: any;
        static readonly fuwen_upgrade_req: any;
        static readonly fuwen_upgrade_res: any;
        static readonly fuwen_parse_req: any;
        static readonly funwen_suit_active_req: any;
        static readonly funwen_suit_active_res: any;
        static readonly os_vice_arrive_getaward_req: any;
        static readonly os_vice_arrive_getaward_res: any;
        static readonly os_vice_arrive_load_syn: any;
        static readonly os_strongest_getaward_req: any;
        static readonly os_strongest_getaward_res: any;
        static readonly os_strongest_load_syn: any;
        static readonly os_strongest_change_syn: any;
        static readonly os_holy_arrive_getaward_req: any;
        static readonly os_holy_arrive_getaward_res: any;
        static readonly os_holy_arrive_load_syn: any;
        static readonly super_drop_refresh_req: any;
        static readonly super_drop_refresh_res: any;
        static readonly super_drop_open_req: any;
        static readonly super_drop_open_res: any;
        static readonly super_drop_open_data_req: any;
        static readonly super_drop_open_data_res: any;
        static readonly super_drop_effect_syn: any;
        static readonly boss_item_buy_req: any;
        static readonly boss_item_buy_res: any;
        static readonly boss_item_data_syn: any;
        static readonly boss_item_change_syn: any;
        static readonly commercial_push_window: any;
        static readonly jin_yan_syn: any;
        static readonly day_gift_load_syn: any;
        static readonly day_gift_load_req: any;
        static readonly guild_fack_boss_syn: any;
        static readonly guild_fack_boss_kill_req: any;
        static readonly guild_fack_boss_skill_res: any;
        static readonly guild_fack_boss_buy_count_req: any;
        static readonly guild_fack_boss_buy_count_res: any;
        static readonly guild_fack_boss_resave_req: any;
        static readonly guild_fack_boss_resave_res: any;
        static readonly info_cross_yinjiuItem: any;
        static readonly cross_yinjiu_get_award_req: any;
        static readonly cross_yinjiu_get_award_res: any;
        static readonly cross_changeBox_req: any;
        static readonly cross_changeBox_res: any;
        static readonly info_cross_yinjiu_role_rank: any;
        static readonly cross_yinjiu_role_rank_syn: any;
        static readonly cross_xunbao_award_group_syn: any;
        static readonly cross_yinjiu_award_info_req: any;
        static readonly cross_yinjiu_award_info_res: any;
        static readonly corss_yinjiu_award_info: any;
        static readonly cross_yinjiu_award_info_add_syn: any;
        static readonly cross_yinjiu_left_num_syn: any;
        static readonly cross_yinjiu_one_barrel_syn: any;
        static readonly guild_red_pool_syn: any;
        static readonly guild_red_pool_creat_red_req: any;
        static readonly guild_red_pool_creat_res: any;
        static readonly war_imprint_quenching_upgrage_req: any;
        static readonly war_imprint_quenching_upgrage_res: any;
        static readonly war_soul_upgrade_req: any;
        static readonly war_soul_upgrade_res: any;
        static readonly war_equip_upgrade_req: any;
        static readonly war_equip_upgrade_res: any;
        static readonly war_imprint_upgrade_req: any;
        static readonly war_imprint_upgrade_res: any;
        static readonly sync_war_imprint_all_info: any;
        static readonly kfzb_rank_data: any;
        static readonly kfzb_role_rank_syn: any;
        static readonly kfzb_role_individual_ranks_syn: any;
        static readonly kfzb_server_ranks_syn: any;
        static readonly kfzb_get_stage_reward_res: any;
        static readonly kfzb_left_little_monster_syn: any;
        static readonly kfzb_activity_end_syn: any;
        static readonly kfzb_activity_jifen_syn: any;
        static readonly kfzb_activity_drop_remind_syn: any;
        static readonly kfzb_serverNum_region_rule_syn: any;
        static readonly pijiu_shengyan_req: any;
        static readonly pijiu_shengyan_res: any;
        static readonly pijiu_shengyan_syn: any;
        static readonly ll_tower_enter_req: any;
        static readonly ll_tower_enter_res: any;
        static readonly ll_tower_sweep_req: any;
        static readonly ll_tower_sweep_res: any;
        static readonly ll_tower_sweep_award_req: any;
        static readonly ll_tower_sweep_award_res: any;
        static readonly ll_tower_data_load_syn: any;
        static readonly ll_tower_data_change_syn: any;
        static readonly cross_this_week_login_award_req: any;
        static readonly cross_this_week_login_award_syn: any;
        static readonly cross_athletics_get_req: any;
        static readonly cross_athletics_end_time_syn: any;
        static readonly cross_login_award_state_syn: any;
        static readonly weekender_get_award_req: any;
        static readonly weekender_get_award_res: any;
        static readonly weekender_get_integral_award_req: any;
        static readonly weekender_get_integral_award_res: any;
        static readonly weekender_info: any;
        static readonly weekender_sync_activity_info: any;
        static readonly weekender_sync_integral: any;
        static readonly weekender_sync_change: any;
        static readonly tejie_carnival_req: any;
        static readonly tejie_carnival_res: any;
        static readonly tejie_carnival_num_syn: any;
        static readonly tejie_daily_award_req: any;
        static readonly tejie_daily_award_syn: any;
        static readonly breach_gift_buy_req: any;
        static readonly breach_gift_buy_res: any;
        static readonly breach_gift_data_syn: any;
        static readonly hz_pos_strengthen_req: any;
        static readonly hz_pos_strengthen_res: any;
        static readonly hz_pos_strengthen_load_syn: any;
        static readonly jing_yan_fu_ben_enter_req: any;
        static readonly jing_yan_fu_ben_load_syn: any;
        static readonly jing_yan_fu_ben_sweep_req: any;
        static readonly jing_yan_fu_ben_sweep_res: any;
        static readonly jing_yan_fu_ben_award_req: any;
        static readonly jing_yan_fu_ben_award_res: any;
        static readonly jing_yan_fu_ben_result_syn: any;
        static readonly jing_yan_fu_ben_enter_res: any;
        static readonly role_show_shengxiao_info: any;
        static readonly enchantment_upgrade_req: any;
        static readonly enchantment_upgrade_res: any;
        static readonly enchantment_break_through_req: any;
        static readonly enchantment_break_through_res: any;
        static readonly enchantment_sync_info: any;
        static readonly enchantment_sync_infos: any;
        static readonly enchantment_sync_slot_info: any;
        static readonly enchantment_unlock_req: any;
        static readonly enchantment_unlock_res: any;
        static readonly treasure_hunt_open_box_req: any;
        static readonly treasure_hunt_open_box_res: any;
        static readonly treasure_hunt_conversion_req: any;
        static readonly treasure_hunt_conversion_res: any;
        static readonly treasure_hunt_sync_conversion_group_info: any;
        static readonly treasure_hunt_sync_infos: any;
        static readonly treasure_hunt_sync_box_group_info: any;
        static readonly god_suit_load_syn: any;
        static readonly god_suit_upgrade_req: any;
        static readonly god_suit_upgrade_res: any;
        static readonly feast_boss_enter_map_req: any;
        static readonly feast_boss_enter_map_res: any;
        static readonly feast_boss_load_syn: any;
        static readonly feast_boss_change_syn: any;
        static readonly feast_boss_getdata_req: any;
        static readonly slzc_rank_data: any;
        static readonly slzc_role_rank_syn: any;
        static readonly slzc_role_individual_ranks_syn: any;
        static readonly slzc_server_ranks_syn: any;
        static readonly slzc_get_stage_kill_reward_res: any;
        static readonly slzc_individual_integral_add_syn: any;
        static readonly cross_activity_serverNum_rogion_rule_syn: any;
        static readonly slzc_role_collect_info_syn: any;
        static readonly slzc_activity_settlement_syn: any;
        static readonly map_find_sprite_by_unitId_req: any;
        static readonly map_find_sprite_by_unitId_res: any;
        static readonly slzc_get_stage_collect_reward_req: any;
        static readonly slzc_get_stage_collect_reward_res: any;
        static readonly slzc_stage_task_info_syn: any;
        static readonly auction_purchase_creat_req: any;
        static readonly auction_purchase_creat_res: any;
        static readonly auction_purchase_myList_req: any;
        static readonly auction_purchase_myList_res: any;
        static readonly auction_purchase_myList_syn: any;
        static readonly auction_purchase_off_the_shelf_req: any;
        static readonly auction_off_purchase_the_shelf_res: any;
        static readonly auction_purchase_list_req: any;
        static readonly auction_purchase_list_res: any;
        static readonly auction_purchase_list_syn: any;
        static readonly auction_purchase_buy_req: any;
        static readonly auction_purchase_buy_res: any;
        static readonly auction_purchase_listCount_req: any;
        static readonly auction_purchase_listCount_res: any;
        static readonly auction_purchase_listCount_syn: any;
        static readonly title_activity_buy_req: any;
        static readonly title_activity_buy_res: any;
        static readonly title_activity_buy_syn: any;
        static readonly gold_digger_kill_req: any;
        static readonly gold_digger_kill_res: any;
        static readonly gold_digger_load_syn: any;
        static readonly new_awaken_lv_up_req: any;
        static readonly new_awaken_lv_up_res: any;
        static readonly new_awaken_open_pos_req: any;
        static readonly new_awaken_open_pos_res: any;
        static readonly new_awaken_open_pos_list_syn: any;
        static readonly new_awaken_lv_syn: any;
        static readonly new_sxmb_buy_req: any;
        static readonly new_sxmb_buy_res: any;
        static readonly new_sxmb_load_syn: any;
        static readonly makeexp_buy_res: any;
        static readonly makeexp_buy_req: any;
        static readonly makeexp_get_req: any;
        static readonly makeexp_get_res: any;
        static readonly makeexp_load_syn: any;
        static readonly qi_fu_buy_req: any;
        static readonly qi_fu_buy_res: any;
        static readonly qi_fu_load_syn: any;
        static readonly lie_mo_up_level_req: any;
        static readonly lie_mo_level_res: any;
        static readonly lie_mo_load_syn: any;
        static readonly swpd_data_syn: any;
        static readonly new_ach_load_syn: any;
        static readonly new_ach_award_req: any;
        static readonly new_ach_award_res: any;
        static readonly new_ach_change_syn: any;
        static readonly new_ach_day_award_req: any;
        static readonly new_ach_day_award_res: any;
        static readonly mobai_refresh_star_level_req: any;
        static readonly mobai_refresh_star_level_res: any;
        static readonly mobai_get_award_req: any;
        static readonly mobai_get_award_res: any;
        static readonly mobai_star_level_syn: any;
        static readonly mobai_get_buff_req: any;
        static readonly mobai_get_buff_res: any;
        static readonly limit_time_equip_compound_info_syn: any;
        static readonly limit_time_equip_compound_info: any;
        static readonly limit_time_equip_compound_req: any;
        static readonly limit_time_equip_compound_res: any;
        static readonly guild_act_ward_in_req: any;
        static readonly guild_act_ward_in_res: any;
        static readonly guild_act_ward_info_syn: any;
        static readonly guild_act_ward_last_time: any;
        static readonly guild_act_ward_boss_hp_syn: any;
        static readonly guild_get_allCount_req: any;
        static readonly guild_get_allCount_res: any;
        static readonly change_sync: any;
        static readonly load_normal_achievement_info_sync: any;
        static readonly get_award_req: any;
        static readonly get_award_res: any;
        static readonly get_limit_time_award_req: any;
        static readonly get_limit_time_award_res: any;
        static readonly limit_time_last_award_get_flag_syn: any;
        static readonly limit_time_last_time_syn: any;
        static readonly boss_kuang_huan_kill_count_req: any;
        static readonly boss_kuang_huan_kill_count_res: any;
        static readonly boss_kuang_huan_sever_get_award_req: any;
        static readonly boss_kuang_huan_sever_get_award_res: any;
        static readonly guild_gou_huo_count_syn: any;
        static readonly guild_gou_huo_enter_req: any;
        static readonly guild_gou_huo_enter_res: any;
        static readonly guild_gou_huo_get_award_res: any;
        static readonly jing_yan_new_load_syn: any;
        static readonly jing_yan_new_scence_info_syn: any;
        static readonly jing_yan_new_mars_syn: any;
        static readonly jing_yan_new_get_req: any;
        static readonly jing_yan_new_get_res: any;
        static readonly jing_yan_new_sweep_req: any;
        static readonly jing_yan_new_sweep_res: any;
        static readonly cross_shield_upgrade_req: any;
        static readonly cross_shield_upgrade_res: any;
        static readonly cross_shield_data_syn: any;
        static readonly cross_shield_passivity_skill_active_req: any;
        static readonly cross_shield_passivity_skill_active_res: any;
        static readonly luckmine_data_syn: any;
        static readonly reload_push_syn: any;
        static readonly wages_get_money_req: any;
        static readonly wages_get_money_res: any;
        static readonly wages_info_syn: any;
        static getParam(id: number): ProtocolParam;
        static createProtocol(id: number): Protocol;
    }
}
/**
 * File is automatically generated, Please do not modify
 * 退出激情泡点
 */
declare module protocol {
    class activity_jiqingpaodian_quit_req extends Protocol {
        static readonly fields: any[];
        constructor();
    }
}
